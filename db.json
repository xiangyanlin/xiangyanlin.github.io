{"meta":{"version":1,"warehouse":"3.0.2"},"models":{"Asset":[{"_id":"themes/shana/source/images/Deadpool.jpg","path":"images/Deadpool.jpg","modified":1,"renderable":1},{"_id":"themes/shana/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/shana/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"themes/shana/source/css/fontawesome/font-awesome-ie7.min.css","path":"css/fontawesome/font-awesome-ie7.min.css","modified":1,"renderable":1},{"_id":"themes/shana/source/css/fontawesome/font-awesome-ie7.css","path":"css/fontawesome/font-awesome-ie7.css","modified":1,"renderable":1},{"_id":"themes/shana/source/css/fontawesome/font-awesome.css","path":"css/fontawesome/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/shana/source/css/fontawesome/font-awesome.min.css","path":"css/fontawesome/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/shana/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/shana/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/shana/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/shana/source/css/images/icon.png","path":"css/images/icon.png","modified":1,"renderable":1},{"_id":"themes/shana/source/css/images/icon2.png","path":"css/images/icon2.png","modified":1,"renderable":1},{"_id":"themes/shana/source/css/plugin/hover.styl","path":"css/plugin/hover.styl","modified":1,"renderable":1},{"_id":"themes/shana/source/css/plugin/animate.styl","path":"css/plugin/animate.styl","modified":1,"renderable":1},{"_id":"themes/shana/source/plugin/bganimation/bg.css","path":"plugin/bganimation/bg.css","modified":1,"renderable":1},{"_id":"themes/shana/source/plugin/fancybox/blank.gif","path":"plugin/fancybox/blank.gif","modified":1,"renderable":1},{"_id":"themes/shana/source/plugin/fancybox/fancybox_loading.gif","path":"plugin/fancybox/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/shana/source/plugin/fancybox/fancybox_loading@2x.gif","path":"plugin/fancybox/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/shana/source/plugin/fancybox/fancybox_overlay.png","path":"plugin/fancybox/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/shana/source/plugin/fancybox/fancybox_sprite.png","path":"plugin/fancybox/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/shana/source/plugin/fancybox/fancybox_sprite@2x.png","path":"plugin/fancybox/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/shana/source/plugin/fancybox/jquery.fancybox.js","path":"plugin/fancybox/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/shana/source/plugin/fancybox/jquery.fancybox.pack.js","path":"plugin/fancybox/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/shana/source/plugin/galmenu/GalMenu.css","path":"plugin/galmenu/GalMenu.css","modified":1,"renderable":1},{"_id":"themes/shana/source/plugin/galmenu/GalMenu.js","path":"plugin/galmenu/GalMenu.js","modified":1,"renderable":1},{"_id":"themes/shana/source/plugin/fancybox/jquery.fancybox.css","path":"plugin/fancybox/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/shana/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/shana/source/plugin/galmenu/wulusai.mp3","path":"plugin/galmenu/wulusai.mp3","modified":1,"renderable":1},{"_id":"themes/shana/source/plugin/fancybox/helpers/fancybox_buttons.png","path":"plugin/fancybox/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/shana/source/plugin/fancybox/helpers/jquery.fancybox-buttons.js","path":"plugin/fancybox/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/shana/source/plugin/fancybox/helpers/jquery.fancybox-buttons.css","path":"plugin/fancybox/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/shana/source/plugin/fancybox/helpers/jquery.fancybox-thumbs.css","path":"plugin/fancybox/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/shana/source/plugin/fancybox/helpers/jquery.fancybox-media.js","path":"plugin/fancybox/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/shana/source/plugin/fancybox/helpers/jquery.fancybox-thumbs.js","path":"plugin/fancybox/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/shana/source/plugin/galmenu/img.png","path":"plugin/galmenu/img.png","modified":1,"renderable":1},{"_id":"themes/shana/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/shana/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":1,"renderable":1},{"_id":"themes/shana/source/css/images/banne1r.jpg","path":"css/images/banne1r.jpg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/shana/.gitignore","hash":"ea2b285a29690f1eabbad0f3a158e34e9ccd1d86","modified":1591410726644},{"_id":"themes/shana/LICENSE","hash":"fc4ad28c989781cc67a41df069b8348e214ab812","modified":1591438079374},{"_id":"themes/shana/README.md","hash":"00c2a6dbaab1aa6712cc9e152b98bd6c185a75b4","modified":1591438079374},{"_id":"themes/shana/_config.yml","hash":"a6fddc474ae91160ad7539105c004abefa75be84","modified":1591853856074},{"_id":"themes/shana/package.json","hash":"88a4f665067397eb15ab90423027eb25c96be222","modified":1591438079424},{"_id":"themes/shana/languages/fr.yml","hash":"b4be1c1592a72012e48df2b3ec41cc9685573e50","modified":1591438079380},{"_id":"themes/shana/languages/default.yml","hash":"f26a34a7983d4bc17c65c7f0f14da598e62ce66d","modified":1591438079379},{"_id":"themes/shana/languages/nl.yml","hash":"3d82ec703d0b3287739d7cb4750a715ae83bfcb3","modified":1591438079380},{"_id":"themes/shana/languages/no.yml","hash":"ddf2035e920a5ecb9076138c184257d9f51896a7","modified":1591438079381},{"_id":"themes/shana/languages/ru.yml","hash":"2a476b4c6e04900914c81378941640ac5d58a1f0","modified":1591438079381},{"_id":"themes/shana/languages/zh-CN.yml","hash":"da83da6b8367cb749b9f3e2885600b515057af15","modified":1591438079382},{"_id":"themes/shana/languages/zh-TW.yml","hash":"f5f0ca88185da7a8457760d84bf221781473bd7c","modified":1591438079383},{"_id":"themes/shana/layout/archive.ejs","hash":"ae0149112760550ec5b5791aed25a9f558008969","modified":1591438079419},{"_id":"themes/shana/layout/categories.ejs","hash":"f5c915b57e9602448ead49cc268f3c43e67eb135","modified":1591438079420},{"_id":"themes/shana/layout/category.ejs","hash":"6bb634b555083f54904536b0f159c7b3e8febdd7","modified":1591438079420},{"_id":"themes/shana/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1591438079421},{"_id":"themes/shana/layout/layout.ejs","hash":"c764e113602336c9e21c03bf94090bf5ab999781","modified":1591438079421},{"_id":"themes/shana/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1591438079422},{"_id":"themes/shana/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1591438079422},{"_id":"themes/shana/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1591438079423},{"_id":"themes/shana/layout/tags.ejs","hash":"90c48448d469a328bdb5ddaff4c23aaa38350f4a","modified":1591438079423},{"_id":"themes/shana/scripts/fancybox.js","hash":"4c130fc242cf9b59b5df6ca5eae3b14302311e8c","modified":1591438079424},{"_id":"source/_posts/14种常见的HTTP返回状态码.md","hash":"35e5cbd31cccc9f1cf2b1d8e1505301395638cef","modified":1591438547304},{"_id":"source/_posts/Mybatis-缓存-的知识点.md","hash":"e997fc6c493ed52d20577dda470d2641f7b00ac5","modified":1591844027398},{"_id":"source/_posts/Spring-编程式事务.md","hash":"8a16b9f765a9b9cf502b51959962f1c1b1524525","modified":1591841627779},{"_id":"source/_posts/Spring-声明式事务注解-Transactional.md","hash":"c9ca36a763fc37059ba9d966e17a64ba60f41525","modified":1591840172771},{"_id":"source/_posts/hello-world.md","hash":"e32917c15a112c5d92ab95143d62d7e92876b998","modified":1591438079311},{"_id":"source/_posts/mybatic初学环境搭建.md","hash":"f76e9887f171a1dc5962eb0e5101f11481231d57","modified":1591839970307},{"_id":"source/_posts/mybatis-延迟加载和立即加载的实现.md","hash":"0b988d2c6ba7f3aa28b45ddc2610cb51a30241d9","modified":1591843608447},{"_id":"source/_posts/mybatis表间关系，多表联查如何定义实体和返回类型.md","hash":"33104896d57b8445cad4c8d7ed2e7a9d5c6d8bb4","modified":1591843360573},{"_id":"source/_posts/mybatis连接池的3种配置方式.md","hash":"db9e1bbb254e852b7fa8c983506fb1c4c73f8d05","modified":1591843232644},{"_id":"source/_posts/mysql删除database报错ERROR-1010-HY000-Error-dropping-database-can-t-rmdir-library-errno.md","hash":"66562183a0959c9ff8c6cc2bd4b0571195f841b3","modified":1591844139070},{"_id":"source/_posts/mysql联合主键.md","hash":"2cb858adae345a6cef04daad2b97d7d19563aaa9","modified":1591843465347},{"_id":"source/_posts/org-xml-sax-SAXNotRecognizedException-Feature-http-apache-org-xml-features-val.md","hash":"22296bc246b81fd43a33a310916ab302d81e4fdf","modified":1591845349722},{"_id":"source/_posts/sql获取当前插入表的id.md","hash":"f2e23e10fa6cfcd3b483f51e8f2abdd4b4f7368d","modified":1591842975044},{"_id":"source/_posts/swagger接口文档UI界面的方法点不开，只能点统一展开，关闭.md","hash":"89e5427199bed526835985e320b937b33319cea4","modified":1591842869396},{"_id":"source/_posts/windows下升级node-js-在cmd-运行n-stable报错bash不是内部或外部命令，也不是可运行的程序-或批处理文件.md","hash":"1ba12704ed79ea82e38cb2291a260770d7e6efe2","modified":1591843780030},{"_id":"source/_posts/《thinking-in-java》读书笔记.md","hash":"9568db1a2e0290d1edee2f2d05a096359d40446b","modified":1591841979389},{"_id":"source/_posts/《thinking-in-java》读书笔记2：对象.md","hash":"214e912b0982994e2ca4cccb78c298630973b133","modified":1591842670575},{"_id":"source/_posts/使用dhcp始终无法连接mysql的问题解决.md","hash":"d1937fec80c1e2cc43fe453b9ff1d029aef77d1a","modified":1591841334616},{"_id":"source/_posts/使用eclipse导入myeclipse项目无法识别为web项目问题的解决.md","hash":"bf10abd31d0a3ca2c4249137e12cf6899f8b8030","modified":1591844562955},{"_id":"source/_posts/区分项目中的数据实体目录-entity，dto-vo.md","hash":"f66a71de79fa863d831bcb52d15f9977ae1c5616","modified":1591844347612},{"_id":"source/_posts/在学Spring-Aop-发现的注意点.md","hash":"32d347f1f5e3e0ad94fac7dec7c379c7e3ef9504","modified":1591839695799},{"_id":"source/_posts/戴尔惠普华硕笔记本Fn键反了，按F1、F2等键出来Fn-F1、F2的效果.md","hash":"8fbb71afcf9f11d4908394efb2e87afe948a0718","modified":1591845204883},{"_id":"source/_posts/解决程序中执行插入语句，mysql数据库表插入的中文变成问号的问题.md","hash":"2133145cf3c21cb4da87010f7c21926ed0ce01b9","modified":1591843096973},{"_id":"source/_posts/阿里云centos7-运行tomcat-之后远程无法访问的解决.md","hash":"cef172589c1bc9cd4a759cfd3219d9227b49c62b","modified":1591843935499},{"_id":"source/categories/index.md","hash":"30e8b5db11dfd7b1e5e881fe97f29334d8a34e22","modified":1591438079378},{"_id":"source/tags/index.md","hash":"77738dafd6e79edc4816aca40d2bfd706905450b","modified":1591438079378},{"_id":"themes/shana/_source/categories/index.md","hash":"30e8b5db11dfd7b1e5e881fe97f29334d8a34e22","modified":1591438079378},{"_id":"themes/shana/_source/tags/index.md","hash":"77738dafd6e79edc4816aca40d2bfd706905450b","modified":1591438079378},{"_id":"themes/shana/layout/_partial/after-footer.ejs","hash":"57734d076129799de01c9fad8a246cb821741fbf","modified":1591438079384},{"_id":"themes/shana/layout/_partial/archive-post.ejs","hash":"5062c723721d8497eebad372f57092ade45041f4","modified":1591438079384},{"_id":"themes/shana/layout/_partial/archive.ejs","hash":"e7858f113ee9f42ab21b303efaa1612168385a72","modified":1591438079385},{"_id":"themes/shana/layout/_partial/article.ejs","hash":"adaa096ec6b42a7944c9be718edac2d12325461b","modified":1591438079385},{"_id":"themes/shana/layout/_partial/bganimation.ejs","hash":"ef6e9ccefee88265255b4789a6318d7ee80f1f77","modified":1591438079386},{"_id":"themes/shana/layout/_partial/footer.ejs","hash":"35a9963e9aad35a4d953b1fd2c09f9201183b819","modified":1591438079386},{"_id":"themes/shana/layout/_partial/galmenu.ejs","hash":"6ade50ebcd908d1e248a087c41e239cb717138c1","modified":1591438079409},{"_id":"themes/shana/layout/_partial/google-analytics.ejs","hash":"1ccc627d7697e68fddc367c73ac09920457e5b35","modified":1591438079411},{"_id":"themes/shana/layout/_partial/head.ejs","hash":"1c6c7d77c0477c2890cf34c69289515362f5c0ba","modified":1591438079412},{"_id":"themes/shana/layout/_partial/header.ejs","hash":"148bdf714dd1a7bf55e571f13808ceae079200cc","modified":1591438079412},{"_id":"themes/shana/layout/_partial/lean-analytics.ejs","hash":"ca5a9b7aad67406896bcf8f9d372acac39cbbb51","modified":1591438079413},{"_id":"themes/shana/layout/_partial/mobile-header.ejs","hash":"dd0088099a0b322d4cc64a86837786421a20d257","modified":1591438079413},{"_id":"themes/shana/layout/_partial/mobile-nav.ejs","hash":"347cf1befd2ea637c24bd5901929d8e36e359e75","modified":1591438079413},{"_id":"themes/shana/layout/_partial/sidebar.ejs","hash":"c70869569749a8f48cce202fa57926c06b55fdab","modified":1591438079418},{"_id":"themes/shana/layout/_widget/about.ejs","hash":"6bdeaad8de81d37bff204115ee0fe47a4eb32993","modified":1591438079418},{"_id":"themes/shana/layout/_widget/nav.ejs","hash":"5e3d307e49c7934b1b9343b81488fd07e18a7f01","modified":1591438079419},{"_id":"themes/shana/source/css/_extend.styl","hash":"1dca7bc1bf3cc3c4af7385191f74f15292ec0fb9","modified":1591438079427},{"_id":"themes/shana/source/images/Deadpool.jpg","hash":"7fdbe7b7a68556d510e595962c11f06743fc5b3f","modified":1591438079458},{"_id":"themes/shana/source/css/_variables.styl","hash":"358508fc755f0af7072e4390a33fd3287d2aba9e","modified":1591438079436},{"_id":"themes/shana/source/css/style.styl","hash":"44c81410d70af1aa39914d7959e320ce26a1d606","modified":1591438079457},{"_id":"themes/shana/source/js/script.js","hash":"c0d368681c687258b628bacc84cc30d353de6d47","modified":1591438079460},{"_id":"themes/shana/layout/_partial/post/category.ejs","hash":"fc6f4836ecb48c876e28d9336f00cc1775202cb9","modified":1591438079414},{"_id":"themes/shana/layout/_partial/post/date.ejs","hash":"8a17b4f64d8bbc522d5d028700c85cda9db715a7","modified":1591438079415},{"_id":"themes/shana/layout/_partial/post/gallery.ejs","hash":"b0bf3f5d923c261ca2b5fabab513f1ec2708c8ca","modified":1591438079415},{"_id":"themes/shana/layout/_partial/post/nav.ejs","hash":"cbb3819ce512bd24db8bad41b8617d46eba82fdc","modified":1591438079416},{"_id":"themes/shana/layout/_partial/post/tag.ejs","hash":"694b5101bcc44c9f9c1cc62e5ad2fdfb4b7c7a07","modified":1591438079416},{"_id":"themes/shana/layout/_partial/post/title.ejs","hash":"d4a460a35e2112d0c7414fd5e19b3a16093f1caf","modified":1591438079417},{"_id":"themes/shana/layout/_partial/post/view.ejs","hash":"5191ec468768e3243da247bc4ad770a511ce3fa9","modified":1591438079417},{"_id":"themes/shana/source/css/_partial/archive.styl","hash":"605a72f468a9f5bf001964241cb683c5b8f0cd0a","modified":1591438079428},{"_id":"themes/shana/source/css/_partial/article.styl","hash":"24883af90f61d3ed364abe9428e8aed96bf7a92a","modified":1591438079429},{"_id":"themes/shana/source/css/_partial/categories.styl","hash":"964cf546f177383511f6cfda78f78d67b281eed4","modified":1591438079430},{"_id":"themes/shana/source/css/_partial/comment.styl","hash":"2834870661e490775f9154d71638bfdc72e640a6","modified":1591438079430},{"_id":"themes/shana/source/css/_partial/footer.styl","hash":"b00c4d04ca55f9fba9322d2314dc4f07bc3fe998","modified":1591438079431},{"_id":"themes/shana/source/css/_partial/header.styl","hash":"67e59feb18eee6026717cb440d86ab9551782628","modified":1591438079431},{"_id":"themes/shana/source/css/_partial/highlight.styl","hash":"906154703bbdca6a9e6e9b2de36692ff979f765d","modified":1591438079432},{"_id":"themes/shana/source/css/_partial/mobile.styl","hash":"c781dbb86614a4d825953a2e00de61ee410bacbe","modified":1591438079432},{"_id":"themes/shana/source/css/_partial/sidebar-aside.styl","hash":"1fb15f13ba70d5b954f62920c6b63d26e2fb2985","modified":1591438079433},{"_id":"themes/shana/source/css/_partial/sidebar-bottom.styl","hash":"4132e25ba9680c4b911a01abc75f501cda3fa4f1","modified":1591438079433},{"_id":"themes/shana/source/css/_partial/sidebar.styl","hash":"9f3637b69491cf61bc24328ff7c27ba4c72fad32","modified":1591438079433},{"_id":"themes/shana/source/css/_partial/tags.styl","hash":"1909f74f678f0fd33a6ff6a92f1427c8f413beba","modified":1591438079434},{"_id":"themes/shana/source/css/_partial/views.styl","hash":"fba8d0ec66ca6dd3e7a521dbd2308954aa534a9c","modified":1591438079434},{"_id":"themes/shana/source/css/_util/grid.styl","hash":"1aa883ab432d9e4139c89dcbd40ae2bd1528d029","modified":1591438079435},{"_id":"themes/shana/source/css/_util/mixin.styl","hash":"429bad87fc156eacf226c5e35b0eafc277f2504b","modified":1591438079436},{"_id":"themes/shana/source/css/fontawesome/font-awesome-ie7.min.css","hash":"4e2217c8c7c703f79a416a7bd8795a18a2d16805","modified":1591438079438},{"_id":"themes/shana/source/css/fontawesome/font-awesome-ie7.css","hash":"cbbd3d62d4db8f8ebf6916c6c049de2a5bafa933","modified":1591438079437},{"_id":"themes/shana/source/css/fontawesome/font-awesome.css","hash":"6589bcd1956889dfb72a0c0d46f2305beac724e7","modified":1591438079439},{"_id":"themes/shana/source/css/fontawesome/font-awesome.min.css","hash":"004fc9bfc4cb2a8e63695fe0b5f886e977e63a48","modified":1591438079440},{"_id":"themes/shana/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1591438079441},{"_id":"themes/shana/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1591438079445},{"_id":"themes/shana/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1591438079450},{"_id":"themes/shana/source/css/images/icon.png","hash":"3d0fded53a72989eef952b9ae57425544d171107","modified":1591438079455},{"_id":"themes/shana/source/css/images/icon2.png","hash":"918f36dc1740436fcbf7684f771c913d21829336","modified":1591438079455},{"_id":"themes/shana/source/css/plugin/hover.styl","hash":"a5d29bcd4028208eafd4031d3cf3ccf019c71777","modified":1591438079457},{"_id":"themes/shana/source/css/plugin/animate.styl","hash":"b8b17f5f9255ef2a8865fe9dd8025634ad20d209","modified":1591438079456},{"_id":"themes/shana/source/plugin/bganimation/bg.css","hash":"083ef7d001473ca095154b9e5df88f8d07c842f8","modified":1591438079463},{"_id":"themes/shana/source/plugin/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1591438079463},{"_id":"themes/shana/source/plugin/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1591438079464},{"_id":"themes/shana/source/plugin/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1591438079465},{"_id":"themes/shana/source/plugin/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1591438079465},{"_id":"themes/shana/source/plugin/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1591438079466},{"_id":"themes/shana/source/plugin/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1591438079467},{"_id":"themes/shana/source/plugin/fancybox/jquery.fancybox.js","hash":"58193c802f307ec9bc9e586c0e8a13ebef45d2f8","modified":1591438079472},{"_id":"themes/shana/source/plugin/fancybox/jquery.fancybox.pack.js","hash":"2da892a02778236b64076e5e8802ef0566e1d9e8","modified":1591438079472},{"_id":"themes/shana/source/plugin/galmenu/GalMenu.css","hash":"2a1fdbbd30de26adcfb4f37de66abc5787365dc4","modified":1591438079473},{"_id":"themes/shana/source/plugin/galmenu/GalMenu.js","hash":"54f86564b181abd8f9746bca5fc142a9f041bb30","modified":1591438079474},{"_id":"themes/shana/source/plugin/fancybox/jquery.fancybox.css","hash":"2e54d51d21e68ebc4bb870f6e57d3bfb660d4f9c","modified":1591438079471},{"_id":"themes/shana/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1591438079449},{"_id":"themes/shana/source/plugin/galmenu/wulusai.mp3","hash":"34e7bc2cf591f7b38a2c709a8c9fd84bdf197a59","modified":1591438079476},{"_id":"themes/shana/source/plugin/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1591438079467},{"_id":"themes/shana/source/plugin/fancybox/helpers/jquery.fancybox-buttons.js","hash":"4c9c395d705d22af7da06870d18f434e2a2eeaf9","modified":1591438079469},{"_id":"themes/shana/source/plugin/fancybox/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1591438079468},{"_id":"themes/shana/source/plugin/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1591438079470},{"_id":"themes/shana/source/plugin/fancybox/helpers/jquery.fancybox-media.js","hash":"e14c32cc6823b81b2f758512f13ed8eb9ef2b454","modified":1591438079469},{"_id":"themes/shana/source/plugin/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"83cdfea43632b613771691a11f56f99d85fb6dbd","modified":1591438079470},{"_id":"themes/shana/source/plugin/galmenu/img.png","hash":"05f69ea7da06bc228eac4d2ef80d0c8d2131bd05","modified":1591438079475},{"_id":"themes/shana/source/css/fonts/fontawesome-webfont.svg","hash":"a275426daefd3716c53561fad121d258a7f05b47","modified":1591438079448},{"_id":"themes/shana/source/css/images/banner.jpg","hash":"532bf5150abc6aedb871c8b05e5c8dacd4111f32","modified":1591438079454},{"_id":"themes/shana/source/css/images/banne1r.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1591438079453},{"_id":"public/search.xml","hash":"a758644139ea6e1fe80f407080ab374d455fa742","modified":1591854542149},{"_id":"public/categories/index.html","hash":"27d8b69f5dec4a49d87cfdf9a175cb4f9964bc85","modified":1591854542149},{"_id":"public/2020/06/06/hello-world/index.html","hash":"93d8d33fcd700fd2464a301af5159bf195df8639","modified":1591854542149},{"_id":"public/2020/05/15/使用eclipse导入myeclipse项目无法识别为web项目问题的解决/index.html","hash":"e6c4070354e87f55b10bd1c84c95ffd007567544","modified":1591854542149},{"_id":"public/tags/index.html","hash":"5d0c24db0d42a1ec32a123bee9209a5c21c86c48","modified":1591854542149},{"_id":"public/2020/05/15/org-xml-sax-SAXNotRecognizedException-Feature-http-apache-org-xml-features-val/index.html","hash":"bd289a389c668037b486fe7947be4ac78587efcf","modified":1591854542149},{"_id":"public/2020/03/06/区分项目中的数据实体目录-entity，dto-vo/index.html","hash":"0664b33d26e1a9b0dd6cd19e69b72b1e1a3f2534","modified":1591854542149},{"_id":"public/2020/03/02/戴尔惠普华硕笔记本Fn键反了，按F1、F2等键出来Fn-F1、F2的效果/index.html","hash":"654cd2e4ce9704aa92b430f3ae57149e455e438d","modified":1591854542149},{"_id":"public/2020/02/27/mysql删除database报错ERROR-1010-HY000-Error-dropping-database-can-t-rmdir-library-errno/index.html","hash":"d84898e33f0d04b1f5bd0bb9ef2aa5e2b734d4aa","modified":1591854542149},{"_id":"public/2020/02/22/Mybatis-缓存-的知识点/index.html","hash":"f34e6db97a8390bca6006e7435944b249e73123f","modified":1591854542149},{"_id":"public/2020/01/17/阿里云centos7-运行tomcat-之后远程无法访问的解决/index.html","hash":"0b977168f9fca1367a8e17fce72e3a3d766bd87a","modified":1591854542149},{"_id":"public/2020/01/08/mybatis-延迟加载和立即加载的实现/index.html","hash":"ab055fdd5300d8e8b5e04f0e9005e27215e3b817","modified":1591854542149},{"_id":"public/2020/01/08/windows下升级node-js-在cmd-运行n-stable报错bash不是内部或外部命令，也不是可运行的程序-或批处理文件/index.html","hash":"9960f6d6c8bbd8bb349923b765372a77df191eca","modified":1591854542149},{"_id":"public/2020/01/07/mysql联合主键/index.html","hash":"25ff25f15a28a824ece5b376c25727a00f043338","modified":1591854542149},{"_id":"public/2019/12/05/swagger接口文档UI界面的方法点不开，只能点统一展开，关闭/index.html","hash":"71754c6601c329184b0b90fc4d07ac8473b00306","modified":1591854542149},{"_id":"public/2019/12/05/sql获取当前插入表的id/index.html","hash":"902c7b5d1d5a4ea28cf6e63487f8e998cf7cc151","modified":1591854542149},{"_id":"public/2019/12/04/《thinking-in-java》读书笔记2：对象/index.html","hash":"6502d64134ab1017c92650bf2db6209f684839d1","modified":1591854542149},{"_id":"public/2019/12/08/解决程序中执行插入语句，mysql数据库表插入的中文变成问号的问题/index.html","hash":"c2c5e7ec18a5834dd65856de29f2cb0ecb929e20","modified":1591854542149},{"_id":"public/2019/12/02/《thinking-in-java》读书笔记/index.html","hash":"5da650e0b1e554beff1bf3b294c26e347e6c5524","modified":1591854542149},{"_id":"public/2019/11/21/使用dhcp始终无法连接mysql的问题解决/index.html","hash":"31b24db7e94fe23907088f81042aca0dc92753a8","modified":1591854542149},{"_id":"public/2019/11/21/Spring-编程式事务/index.html","hash":"194a892da6b6a17cd2c5437e38f84cc177a2e1fa","modified":1591854542149},{"_id":"public/2019/11/21/Spring-声明式事务注解-Transactional/index.html","hash":"12b37d05790f5ca2da5ccac96a02e576ba7d3a3a","modified":1591854542149},{"_id":"public/2019/11/18/在学Spring-Aop-发现的注意点/index.html","hash":"5f38cf8f3e5389bddbfbc378ef30c36861764aed","modified":1591854542149},{"_id":"public/2019/11/17/14种常见的HTTP返回状态码/index.html","hash":"2c3d3c6ab10713aa45565e822a84978b1334b99d","modified":1591854542149},{"_id":"public/2019/12/17/mybatis表间关系，多表联查如何定义实体和返回类型/index.html","hash":"2336fa49a29ee9e74b80ce7dae00507196230966","modified":1591854542149},{"_id":"public/2019/12/11/mybatis连接池的3种配置方式/index.html","hash":"be8e724c331b09984254ed693b7077ab6c3b0866","modified":1591854542149},{"_id":"public/categories/mybatis/index.html","hash":"6d7e0cffc4ee2ae8fde83acf9be331ef608c3e22","modified":1591854542149},{"_id":"public/categories/Spring/index.html","hash":"d8d917bbd01b75b2ff8ca3e57ae3268099e20e3b","modified":1591854542149},{"_id":"public/categories/http/index.html","hash":"16b8013aa0817fa5164766e2f7e019b6cbbff35b","modified":1591854542149},{"_id":"public/categories/jdk/index.html","hash":"e8299718301d8713b9c5763a04f1245704c6b536","modified":1591854542149},{"_id":"public/categories/node/index.html","hash":"3afb430c76b539d74cd7339749ad62831becd2ab","modified":1591854542149},{"_id":"public/categories/swagger/index.html","hash":"20c4b188f314ceeccca3352b903477e59148fdfe","modified":1591854542149},{"_id":"public/categories/读书笔记-thinKing-injava/index.html","hash":"9dd0647184a8b2887ae46648b51117282d4fead3","modified":1591854542149},{"_id":"public/categories/mysql/index.html","hash":"4e755de403f67baa89b993dd8662eb9528ea7a7f","modified":1591854542149},{"_id":"public/categories/java规范/index.html","hash":"fdef73cc0e65f4a2f2f7edec2aa6a8e81e02c0bf","modified":1591854542149},{"_id":"public/categories/电脑问题-键盘/index.html","hash":"e15cfa14fbcb6b83b4499aee53c259e80dcf4de4","modified":1591854542149},{"_id":"public/categories/eclipse/index.html","hash":"0657bc1bc949412b512b62afddf8c724492e4e7a","modified":1591854542149},{"_id":"public/categories/linux-centos/index.html","hash":"df1f1a67af3db6ca84f954577780e6f77727a392","modified":1591854542149},{"_id":"public/archives/index.html","hash":"4323928103822e6755aae2dc51f6254ed74c9c00","modified":1591854542149},{"_id":"public/archives/page/2/index.html","hash":"40d5e3d563622f967885939bd9596bebfef039c7","modified":1591854542149},{"_id":"public/archives/2019/page/2/index.html","hash":"db22203a8115ff9df4c222785e45e7b814e78130","modified":1591854542149},{"_id":"public/archives/page/3/index.html","hash":"5d6701943af3ccafc0b13a9c607ce55923291fed","modified":1591854542149},{"_id":"public/archives/2019/11/index.html","hash":"60a2bcfb36b35314556708eaa668314fd38cb7c4","modified":1591854542149},{"_id":"public/archives/2019/12/index.html","hash":"aabe48457070ef981e45f7d613489ae508ddfcaf","modified":1591854542149},{"_id":"public/archives/2020/index.html","hash":"e57d3a158a998d8a9465b7e1d3da4228d0f6776a","modified":1591854542149},{"_id":"public/archives/2020/01/index.html","hash":"f684d70c9bd084f73d998a4039315dd9e5be2ce5","modified":1591854542149},{"_id":"public/archives/2020/02/index.html","hash":"2eaa0aa7b38c4c0e3ff22eb2cb8403c94e1a37db","modified":1591854542149},{"_id":"public/archives/2020/page/2/index.html","hash":"fbef00028952fbb358a9d13b14b0cc8323db5223","modified":1591854542149},{"_id":"public/archives/2019/index.html","hash":"6b843830a6b503d35ebd0beb6784ad56f1f6d0f3","modified":1591854542149},{"_id":"public/archives/2020/03/index.html","hash":"d5dd4f883ccfc600ee9332f6412465bdddb0f41c","modified":1591854542149},{"_id":"public/archives/2020/05/index.html","hash":"a1c007e9fcddf633f2e1120cf2d4e5badc59e0c5","modified":1591854542149},{"_id":"public/archives/2020/06/index.html","hash":"112a640d68514713070c597e79cbd7404fc35b3b","modified":1591854542149},{"_id":"public/tags/http/index.html","hash":"269105f51f96e4c4927c1752054948bc362496c5","modified":1591854542149},{"_id":"public/tags/Spring/index.html","hash":"4acc21447979cde08fb8881929f47f0ac3f77581","modified":1591854542149},{"_id":"public/tags/jdk/index.html","hash":"7958f51106091a2f9da095ef7c319b2504ba1183","modified":1591854542149},{"_id":"public/tags/mysql/index.html","hash":"eccebe1b40b80d1f9ca3596bab222e6a7d9c9084","modified":1591854542149},{"_id":"public/tags/mybatis/index.html","hash":"0580e263ea17907de458a0656ebd27f07f2d9218","modified":1591854542149},{"_id":"public/tags/swagger/index.html","hash":"e1edd4a7af1ceff481afa9a8c2c6be84169253e6","modified":1591854542149},{"_id":"public/page/3/index.html","hash":"2d671a2c5c48359cdfe635fe8773d59a63a9864c","modified":1591854542149},{"_id":"public/tags/node/index.html","hash":"f6e3926ec1e283e38dfb3ddec0dcec2b42c6c3dd","modified":1591854542149},{"_id":"public/tags/笔记/index.html","hash":"e4de1b98355a37375f3c1c2caf768828b7b6660c","modified":1591854542149},{"_id":"public/tags/java规范/index.html","hash":"4d311efbff0d5bd438f95438d4c4cf59a5210712","modified":1591854542149},{"_id":"public/tags/键盘/index.html","hash":"ddb740438c6dfd29cffee01290da0c2d77816487","modified":1591854542149},{"_id":"public/tags/eclipse/index.html","hash":"d5a26562db2fbfb9872e6e4d538baf90ddad483f","modified":1591854542149},{"_id":"public/tags/阿里云服务器/index.html","hash":"1d4fca13303f3d3f99425196752d56ceb79802c1","modified":1591854542149},{"_id":"public/2019/11/19/mybatic初学环境搭建/index.html","hash":"c4192a8a5e58a1e7b598725e158e4ac6b3557b57","modified":1591854542149},{"_id":"public/index.html","hash":"8685761f8b33a683219928e05ad708ba93f6eaf5","modified":1591854542149},{"_id":"public/page/2/index.html","hash":"12fec5fe705990f2edbbdc67c1bfe89d80eb9e38","modified":1591854542149},{"_id":"public/images/Deadpool.jpg","hash":"7fdbe7b7a68556d510e595962c11f06743fc5b3f","modified":1591854542149},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1591854542149},{"_id":"public/css/images/icon.png","hash":"3d0fded53a72989eef952b9ae57425544d171107","modified":1591854542149},{"_id":"public/css/images/icon2.png","hash":"918f36dc1740436fcbf7684f771c913d21829336","modified":1591854542149},{"_id":"public/plugin/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1591854542149},{"_id":"public/plugin/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1591854542149},{"_id":"public/plugin/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1591854542149},{"_id":"public/plugin/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1591854542149},{"_id":"public/plugin/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1591854542149},{"_id":"public/plugin/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1591854542149},{"_id":"public/plugin/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1591854542149},{"_id":"public/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1591854542149},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1591854542149},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1591854542149},{"_id":"public/plugin/galmenu/wulusai.mp3","hash":"34e7bc2cf591f7b38a2c709a8c9fd84bdf197a59","modified":1591854542149},{"_id":"public/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1591854542149},{"_id":"public/css/plugin/hover.css","hash":"54ec3d2774906f08e711ac0e494dccd09aefd570","modified":1591854542149},{"_id":"public/css/plugin/animate.css","hash":"7a1f3de057c416bd10edc288c7e8ac0b645232ab","modified":1591854542149},{"_id":"public/plugin/bganimation/bg.css","hash":"64b176864f71eeaf930e35b479cff248ef5ca242","modified":1591854542149},{"_id":"public/plugin/galmenu/GalMenu.css","hash":"ae1357f888f3389bc4b39bde62d68533caefb6b5","modified":1591854542149},{"_id":"public/plugin/galmenu/GalMenu.js","hash":"8549620fcb0b6a9bb329b799906aba6fb41c61f0","modified":1591854542149},{"_id":"public/plugin/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1591854542149},{"_id":"public/plugin/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1591854542149},{"_id":"public/plugin/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1591854542149},{"_id":"public/plugin/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1591854542149},{"_id":"public/plugin/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1591854542149},{"_id":"public/plugin/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1591854542149},{"_id":"public/css/style.css","hash":"daac4bed4e1a3e2044ed2593b32feb97e256dbf2","modified":1591854542149},{"_id":"public/css/fontawesome/font-awesome-ie7.min.css","hash":"d66b7374b5dd6259dfd5c4eb682925305f6716d4","modified":1591854542149},{"_id":"public/css/fontawesome/font-awesome.css","hash":"57ca25a18cbdedf36973b712bc81f9e3f883a371","modified":1591854542149},{"_id":"public/css/fontawesome/font-awesome-ie7.css","hash":"e142f6748ea95bff17ba450ed071a17b066642c7","modified":1591854542149},{"_id":"public/css/fontawesome/font-awesome.min.css","hash":"68e2602c02181b61eebc9e1dccb0a38377fa5df7","modified":1591854542149},{"_id":"public/plugin/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1591854542149},{"_id":"public/plugin/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1591854542149},{"_id":"public/plugin/galmenu/img.png","hash":"05f69ea7da06bc228eac4d2ef80d0c8d2131bd05","modified":1591854542149},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"a275426daefd3716c53561fad121d258a7f05b47","modified":1591854542149},{"_id":"public/css/images/banner.jpg","hash":"532bf5150abc6aedb871c8b05e5c8dacd4111f32","modified":1591854542149},{"_id":"public/css/images/banne1r.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1591854542149}],"Category":[{"name":"http","_id":"ckbad3e3n0003rsqa4ka6gnws"},{"name":"mybatis","_id":"ckbad3e3s0008rsqadhoo3y63"},{"name":"Spring","_id":"ckbad3e3u000ersqaas3sf39m"},{"name":"jdk","_id":"ckbad3e450011rsqa4iv4fwye"},{"name":"mysql","_id":"ckbad3e480018rsqadb1b6d3f"},{"name":"swagger","_id":"ckbad3e4i001trsqa1off01jp"},{"name":"node","_id":"ckbad3e4l0021rsqa555ocfr4"},{"name":"-读书笔记 -thinKing injava","_id":"ckbad3e4m0026rsqaciblc09a"},{"name":"java规范","_id":"ckbad3e4p002ersqa03586blq"},{"name":"电脑问题 - 键盘","_id":"ckbad3e4r002jrsqa5t5lf4w9"},{"name":"eclipse","_id":"ckbad3e4s002nrsqafypc76nk"},{"name":"linux - centos","_id":"ckbad3e4t002rrsqad7fwb7tt"}],"Data":[],"Page":[{"title":"categories","layout":"categories","_content":"","source":"categories/index.md","raw":"title: \"categories\"\nlayout: \"categories\"\n---\n","date":"2020-06-06T10:07:59.378Z","updated":"2020-06-06T10:07:59.378Z","path":"categories/index.html","comments":1,"_id":"ckbad3e3k0001rsqaf8ttbf2u","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"Tags","layout":"tags","_content":"","source":"tags/index.md","raw":"title: \"Tags\"\nlayout: \"tags\"\n---","date":"2020-06-11T05:46:48.341Z","updated":"2020-06-06T10:07:59.378Z","path":"tags/index.html","comments":1,"_id":"ckbad3e51002xrsqa53ee6lc9","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"14种常见的HTTP返回状态码","date":"2019-11-17T13:08:39.000Z","_content":"\n今天学习了一下HTTP状态码，把自己的理解记录一下，如有不对之处，欢迎指正\n\n<!--more-->\n## 2开头：成功\n### 200:ok\n成功\n### 204：No Content\n    请求成功，但是没有东西（资源）可以返回（响应）\n### 206: Partial Content\n    范围请求的成功返回状态码\n## 3开头：重定向\n### 301：Moved Permanently\n    永久性重定向。就是书签一样的\n### 302： Found\n    临时性重定向。告知本次请求使用新的URL.\n### 303 ：See Other\n    告知请求对应的资源存在着另一个 URI，使用Get请求去访问这个新的URI.\n### 　304： Not Modified\n    304 虽然被划分在 3XX 类别中，但是和重定向没有关 系。\n发送附带条件的请求时，资源已找到。但不满足条件。\n### 　307： Temporary Redirect \n    临时重定向，该状态码与 302 Found 有着相同的含义。但是307 会遵照浏览器标准，不会从 POST 变成 GET。防止重定向时改变请求方式。\n\n## 　4开头：客户端错误\n    表示发出请求的客服端发生错误\n### 　400： Bad Request\n    400表示请求报文中存在语法错误。当错误发生时，需修改请求的内容。\n### 401： Unauthorized\n    请求的资源需要通过认证。第一次返回401，会弹出认证用的对话窗口。第二次返回401，表示认证失败\n### 　403： Forbidden\n    因为访问权限等问题，服务器拒绝对资源的访问，服务器在实体的主体部分说明，用户以看到该说明。\n ### 　404 Not Found\n    这个出现的比较多。\n    该状态码表明服务器上无法找到请求的资源。\n    除此之外，也可以在服务器端拒绝请求且不想说明理由时使用。\n## 5开头：服务器错误\n### 500: Internal Server Error\n    服务器端在执行请求时发生了错误。一般是代码逻辑错误，各种异常\n### 　503 ：Service Unavailable\n    服务器超负荷\n##### 当然，也有很多时候，返回的状态码响应都是错误的，有时候代码出错也会返回200\n###### 参考阅读《HTTP图解》一书","source":"_posts/14种常见的HTTP返回状态码.md","raw":"---\ntitle: 14种常见的HTTP返回状态码\ndate: 2019-11-17 21:08:39\ncategories: \n  - http\ntags:\n  - http\n\n---\n\n今天学习了一下HTTP状态码，把自己的理解记录一下，如有不对之处，欢迎指正\n\n<!--more-->\n## 2开头：成功\n### 200:ok\n成功\n### 204：No Content\n    请求成功，但是没有东西（资源）可以返回（响应）\n### 206: Partial Content\n    范围请求的成功返回状态码\n## 3开头：重定向\n### 301：Moved Permanently\n    永久性重定向。就是书签一样的\n### 302： Found\n    临时性重定向。告知本次请求使用新的URL.\n### 303 ：See Other\n    告知请求对应的资源存在着另一个 URI，使用Get请求去访问这个新的URI.\n### 　304： Not Modified\n    304 虽然被划分在 3XX 类别中，但是和重定向没有关 系。\n发送附带条件的请求时，资源已找到。但不满足条件。\n### 　307： Temporary Redirect \n    临时重定向，该状态码与 302 Found 有着相同的含义。但是307 会遵照浏览器标准，不会从 POST 变成 GET。防止重定向时改变请求方式。\n\n## 　4开头：客户端错误\n    表示发出请求的客服端发生错误\n### 　400： Bad Request\n    400表示请求报文中存在语法错误。当错误发生时，需修改请求的内容。\n### 401： Unauthorized\n    请求的资源需要通过认证。第一次返回401，会弹出认证用的对话窗口。第二次返回401，表示认证失败\n### 　403： Forbidden\n    因为访问权限等问题，服务器拒绝对资源的访问，服务器在实体的主体部分说明，用户以看到该说明。\n ### 　404 Not Found\n    这个出现的比较多。\n    该状态码表明服务器上无法找到请求的资源。\n    除此之外，也可以在服务器端拒绝请求且不想说明理由时使用。\n## 5开头：服务器错误\n### 500: Internal Server Error\n    服务器端在执行请求时发生了错误。一般是代码逻辑错误，各种异常\n### 　503 ：Service Unavailable\n    服务器超负荷\n##### 当然，也有很多时候，返回的状态码响应都是错误的，有时候代码出错也会返回200\n###### 参考阅读《HTTP图解》一书","slug":"14种常见的HTTP返回状态码","published":1,"updated":"2020-06-06T10:15:47.304Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckbad3e3e0000rsqahq7i4efk","content":"<p>今天学习了一下HTTP状态码，把自己的理解记录一下，如有不对之处，欢迎指正</p>\n<a id=\"more\"></a>\n<h2 id=\"2开头：成功\"><a href=\"#2开头：成功\" class=\"headerlink\" title=\"2开头：成功\"></a>2开头：成功</h2><h3 id=\"200-ok\"><a href=\"#200-ok\" class=\"headerlink\" title=\"200:ok\"></a>200:ok</h3><p>成功</p>\n<h3 id=\"204：No-Content\"><a href=\"#204：No-Content\" class=\"headerlink\" title=\"204：No Content\"></a>204：No Content</h3><pre><code>请求成功，但是没有东西（资源）可以返回（响应）</code></pre><h3 id=\"206-Partial-Content\"><a href=\"#206-Partial-Content\" class=\"headerlink\" title=\"206: Partial Content\"></a>206: Partial Content</h3><pre><code>范围请求的成功返回状态码</code></pre><h2 id=\"3开头：重定向\"><a href=\"#3开头：重定向\" class=\"headerlink\" title=\"3开头：重定向\"></a>3开头：重定向</h2><h3 id=\"301：Moved-Permanently\"><a href=\"#301：Moved-Permanently\" class=\"headerlink\" title=\"301：Moved Permanently\"></a>301：Moved Permanently</h3><pre><code>永久性重定向。就是书签一样的</code></pre><h3 id=\"302：-Found\"><a href=\"#302：-Found\" class=\"headerlink\" title=\"302： Found\"></a>302： Found</h3><pre><code>临时性重定向。告知本次请求使用新的URL.</code></pre><h3 id=\"303-：See-Other\"><a href=\"#303-：See-Other\" class=\"headerlink\" title=\"303 ：See Other\"></a>303 ：See Other</h3><pre><code>告知请求对应的资源存在着另一个 URI，使用Get请求去访问这个新的URI.</code></pre><h3 id=\"304：-Not-Modified\"><a href=\"#304：-Not-Modified\" class=\"headerlink\" title=\"　304： Not Modified\"></a>　304： Not Modified</h3><pre><code>304 虽然被划分在 3XX 类别中，但是和重定向没有关 系。</code></pre><p>发送附带条件的请求时，资源已找到。但不满足条件。</p>\n<h3 id=\"307：-Temporary-Redirect\"><a href=\"#307：-Temporary-Redirect\" class=\"headerlink\" title=\"　307： Temporary Redirect\"></a>　307： Temporary Redirect</h3><pre><code>临时重定向，该状态码与 302 Found 有着相同的含义。但是307 会遵照浏览器标准，不会从 POST 变成 GET。防止重定向时改变请求方式。</code></pre><h2 id=\"4开头：客户端错误\"><a href=\"#4开头：客户端错误\" class=\"headerlink\" title=\"　4开头：客户端错误\"></a>　4开头：客户端错误</h2><pre><code>表示发出请求的客服端发生错误</code></pre><h3 id=\"400：-Bad-Request\"><a href=\"#400：-Bad-Request\" class=\"headerlink\" title=\"　400： Bad Request\"></a>　400： Bad Request</h3><pre><code>400表示请求报文中存在语法错误。当错误发生时，需修改请求的内容。</code></pre><h3 id=\"401：-Unauthorized\"><a href=\"#401：-Unauthorized\" class=\"headerlink\" title=\"401： Unauthorized\"></a>401： Unauthorized</h3><pre><code>请求的资源需要通过认证。第一次返回401，会弹出认证用的对话窗口。第二次返回401，表示认证失败</code></pre><h3 id=\"403：-Forbidden\"><a href=\"#403：-Forbidden\" class=\"headerlink\" title=\"　403： Forbidden\"></a>　403： Forbidden</h3><pre><code>因为访问权限等问题，服务器拒绝对资源的访问，服务器在实体的主体部分说明，用户以看到该说明。</code></pre><h3 id=\"404-Not-Found\"><a href=\"#404-Not-Found\" class=\"headerlink\" title=\"　404 Not Found\"></a>　404 Not Found</h3><pre><code>这个出现的比较多。\n该状态码表明服务器上无法找到请求的资源。\n除此之外，也可以在服务器端拒绝请求且不想说明理由时使用。</code></pre><h2 id=\"5开头：服务器错误\"><a href=\"#5开头：服务器错误\" class=\"headerlink\" title=\"5开头：服务器错误\"></a>5开头：服务器错误</h2><h3 id=\"500-Internal-Server-Error\"><a href=\"#500-Internal-Server-Error\" class=\"headerlink\" title=\"500: Internal Server Error\"></a>500: Internal Server Error</h3><pre><code>服务器端在执行请求时发生了错误。一般是代码逻辑错误，各种异常</code></pre><h3 id=\"503-：Service-Unavailable\"><a href=\"#503-：Service-Unavailable\" class=\"headerlink\" title=\"　503 ：Service Unavailable\"></a>　503 ：Service Unavailable</h3><pre><code>服务器超负荷</code></pre><h5 id=\"当然，也有很多时候，返回的状态码响应都是错误的，有时候代码出错也会返回200\"><a href=\"#当然，也有很多时候，返回的状态码响应都是错误的，有时候代码出错也会返回200\" class=\"headerlink\" title=\"当然，也有很多时候，返回的状态码响应都是错误的，有时候代码出错也会返回200\"></a>当然，也有很多时候，返回的状态码响应都是错误的，有时候代码出错也会返回200</h5><h6 id=\"参考阅读《HTTP图解》一书\"><a href=\"#参考阅读《HTTP图解》一书\" class=\"headerlink\" title=\"参考阅读《HTTP图解》一书\"></a>参考阅读《HTTP图解》一书</h6>","site":{"data":{}},"excerpt":"<p>今天学习了一下HTTP状态码，把自己的理解记录一下，如有不对之处，欢迎指正</p>","more":"<h2 id=\"2开头：成功\"><a href=\"#2开头：成功\" class=\"headerlink\" title=\"2开头：成功\"></a>2开头：成功</h2><h3 id=\"200-ok\"><a href=\"#200-ok\" class=\"headerlink\" title=\"200:ok\"></a>200:ok</h3><p>成功</p>\n<h3 id=\"204：No-Content\"><a href=\"#204：No-Content\" class=\"headerlink\" title=\"204：No Content\"></a>204：No Content</h3><pre><code>请求成功，但是没有东西（资源）可以返回（响应）</code></pre><h3 id=\"206-Partial-Content\"><a href=\"#206-Partial-Content\" class=\"headerlink\" title=\"206: Partial Content\"></a>206: Partial Content</h3><pre><code>范围请求的成功返回状态码</code></pre><h2 id=\"3开头：重定向\"><a href=\"#3开头：重定向\" class=\"headerlink\" title=\"3开头：重定向\"></a>3开头：重定向</h2><h3 id=\"301：Moved-Permanently\"><a href=\"#301：Moved-Permanently\" class=\"headerlink\" title=\"301：Moved Permanently\"></a>301：Moved Permanently</h3><pre><code>永久性重定向。就是书签一样的</code></pre><h3 id=\"302：-Found\"><a href=\"#302：-Found\" class=\"headerlink\" title=\"302： Found\"></a>302： Found</h3><pre><code>临时性重定向。告知本次请求使用新的URL.</code></pre><h3 id=\"303-：See-Other\"><a href=\"#303-：See-Other\" class=\"headerlink\" title=\"303 ：See Other\"></a>303 ：See Other</h3><pre><code>告知请求对应的资源存在着另一个 URI，使用Get请求去访问这个新的URI.</code></pre><h3 id=\"304：-Not-Modified\"><a href=\"#304：-Not-Modified\" class=\"headerlink\" title=\"　304： Not Modified\"></a>　304： Not Modified</h3><pre><code>304 虽然被划分在 3XX 类别中，但是和重定向没有关 系。</code></pre><p>发送附带条件的请求时，资源已找到。但不满足条件。</p>\n<h3 id=\"307：-Temporary-Redirect\"><a href=\"#307：-Temporary-Redirect\" class=\"headerlink\" title=\"　307： Temporary Redirect\"></a>　307： Temporary Redirect</h3><pre><code>临时重定向，该状态码与 302 Found 有着相同的含义。但是307 会遵照浏览器标准，不会从 POST 变成 GET。防止重定向时改变请求方式。</code></pre><h2 id=\"4开头：客户端错误\"><a href=\"#4开头：客户端错误\" class=\"headerlink\" title=\"　4开头：客户端错误\"></a>　4开头：客户端错误</h2><pre><code>表示发出请求的客服端发生错误</code></pre><h3 id=\"400：-Bad-Request\"><a href=\"#400：-Bad-Request\" class=\"headerlink\" title=\"　400： Bad Request\"></a>　400： Bad Request</h3><pre><code>400表示请求报文中存在语法错误。当错误发生时，需修改请求的内容。</code></pre><h3 id=\"401：-Unauthorized\"><a href=\"#401：-Unauthorized\" class=\"headerlink\" title=\"401： Unauthorized\"></a>401： Unauthorized</h3><pre><code>请求的资源需要通过认证。第一次返回401，会弹出认证用的对话窗口。第二次返回401，表示认证失败</code></pre><h3 id=\"403：-Forbidden\"><a href=\"#403：-Forbidden\" class=\"headerlink\" title=\"　403： Forbidden\"></a>　403： Forbidden</h3><pre><code>因为访问权限等问题，服务器拒绝对资源的访问，服务器在实体的主体部分说明，用户以看到该说明。</code></pre><h3 id=\"404-Not-Found\"><a href=\"#404-Not-Found\" class=\"headerlink\" title=\"　404 Not Found\"></a>　404 Not Found</h3><pre><code>这个出现的比较多。\n该状态码表明服务器上无法找到请求的资源。\n除此之外，也可以在服务器端拒绝请求且不想说明理由时使用。</code></pre><h2 id=\"5开头：服务器错误\"><a href=\"#5开头：服务器错误\" class=\"headerlink\" title=\"5开头：服务器错误\"></a>5开头：服务器错误</h2><h3 id=\"500-Internal-Server-Error\"><a href=\"#500-Internal-Server-Error\" class=\"headerlink\" title=\"500: Internal Server Error\"></a>500: Internal Server Error</h3><pre><code>服务器端在执行请求时发生了错误。一般是代码逻辑错误，各种异常</code></pre><h3 id=\"503-：Service-Unavailable\"><a href=\"#503-：Service-Unavailable\" class=\"headerlink\" title=\"　503 ：Service Unavailable\"></a>　503 ：Service Unavailable</h3><pre><code>服务器超负荷</code></pre><h5 id=\"当然，也有很多时候，返回的状态码响应都是错误的，有时候代码出错也会返回200\"><a href=\"#当然，也有很多时候，返回的状态码响应都是错误的，有时候代码出错也会返回200\" class=\"headerlink\" title=\"当然，也有很多时候，返回的状态码响应都是错误的，有时候代码出错也会返回200\"></a>当然，也有很多时候，返回的状态码响应都是错误的，有时候代码出错也会返回200</h5><h6 id=\"参考阅读《HTTP图解》一书\"><a href=\"#参考阅读《HTTP图解》一书\" class=\"headerlink\" title=\"参考阅读《HTTP图解》一书\"></a>参考阅读《HTTP图解》一书</h6>"},{"title":"Mybatis 缓存 的知识点","date":"2020-02-22T03:26:59.000Z","_content":"\n像大多数的持久化框架一样，Mybatis 也提供了缓存策略，通过缓存策略来减少数据库的查询次数，从而提 高性能。 \n\n<!--more-->\n\n##### Mybatis 中缓存分为一级缓存，二级缓存。\n![一级和二级缓存](https://img-blog.csdnimg.cn/20200222111725745.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODg0OTcy,size_16,color_FFFFFF,t_70)\n##### 一级缓存\n一级缓存是 SqlSession 级别的缓存，只要 SqlSession 没有 flush 或 close，它就存在。 \n一级缓存是 SqlSession 范围的缓存，当调用 SqlSession 的修改，添加，删除，commit()，close()等\n###### 二级缓存\n二级缓存是 mapper 映射级别的缓存，多个 SqlSession 去操作同一个 Mapper 映射的 sql 语句，多个 SqlSession 可以共用二级缓存，二级缓存是跨 SqlSession 的\n######  二级缓存的开启与关闭 \n2.2.2.1 第一步：在 SqlMapConfig.xml 文件开启二级缓存 \n\n```\n<settings> \n <!-- 开启二级缓存的支持 --> \n  <setting name=\"cacheEnabled\" value=\"true\"/>\n</settings> \n```\n\n因为 cacheEnabled 的取值默认就为 true，所以这一步可以省略不配置。为 true 代表开启二级缓存；为 false 代表不开启二级缓存。 \n######  第二步：配置相关的 Mapper 映射文件 \n<cache>标签表示当前这个 mapper 映射将使用二级缓存，区分的标准就看 mapper 的 namespace 值。\n\n```\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\t <!DOCTYPE mapper     PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"     \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"> \n\t<mapper namespace=\"com.itheima.dao.IUserDao\">\n  <!-- 开启二级缓存的支持 -->  \n  <cache></cache> \n  </mapper> \n```\n\n###### 第三步：配置 statement 上面的 useCache 属性 \n\n```\n<!-- 根据 id 查询 --> \n<select id=\"findById\" resultType=\"user\" parameterType=\"int\" useCache=\"true\">\n  select * from user where id = #{uid} \n  </select> \n```\n\n将 UserDao.xml 映射文件中的<select>标签中设置 useCache=”true”代表当前这个 statement 要使用 二级缓存，如果不使用二级缓存可以设置为 false。 注意：针对每次查询都需要最新的数据 sql，要设置成 useCache=false，禁用二级缓存","source":"_posts/Mybatis-缓存-的知识点.md","raw":"---\ntitle: Mybatis 缓存 的知识点\ndate: 2020-02-22 11:26:59 \ncategories: mybatis\ntags: mybatis\n---\n\n像大多数的持久化框架一样，Mybatis 也提供了缓存策略，通过缓存策略来减少数据库的查询次数，从而提 高性能。 \n\n<!--more-->\n\n##### Mybatis 中缓存分为一级缓存，二级缓存。\n![一级和二级缓存](https://img-blog.csdnimg.cn/20200222111725745.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODg0OTcy,size_16,color_FFFFFF,t_70)\n##### 一级缓存\n一级缓存是 SqlSession 级别的缓存，只要 SqlSession 没有 flush 或 close，它就存在。 \n一级缓存是 SqlSession 范围的缓存，当调用 SqlSession 的修改，添加，删除，commit()，close()等\n###### 二级缓存\n二级缓存是 mapper 映射级别的缓存，多个 SqlSession 去操作同一个 Mapper 映射的 sql 语句，多个 SqlSession 可以共用二级缓存，二级缓存是跨 SqlSession 的\n######  二级缓存的开启与关闭 \n2.2.2.1 第一步：在 SqlMapConfig.xml 文件开启二级缓存 \n\n```\n<settings> \n <!-- 开启二级缓存的支持 --> \n  <setting name=\"cacheEnabled\" value=\"true\"/>\n</settings> \n```\n\n因为 cacheEnabled 的取值默认就为 true，所以这一步可以省略不配置。为 true 代表开启二级缓存；为 false 代表不开启二级缓存。 \n######  第二步：配置相关的 Mapper 映射文件 \n<cache>标签表示当前这个 mapper 映射将使用二级缓存，区分的标准就看 mapper 的 namespace 值。\n\n```\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\t <!DOCTYPE mapper     PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"     \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"> \n\t<mapper namespace=\"com.itheima.dao.IUserDao\">\n  <!-- 开启二级缓存的支持 -->  \n  <cache></cache> \n  </mapper> \n```\n\n###### 第三步：配置 statement 上面的 useCache 属性 \n\n```\n<!-- 根据 id 查询 --> \n<select id=\"findById\" resultType=\"user\" parameterType=\"int\" useCache=\"true\">\n  select * from user where id = #{uid} \n  </select> \n```\n\n将 UserDao.xml 映射文件中的<select>标签中设置 useCache=”true”代表当前这个 statement 要使用 二级缓存，如果不使用二级缓存可以设置为 false。 注意：针对每次查询都需要最新的数据 sql，要设置成 useCache=false，禁用二级缓存","slug":"Mybatis-缓存-的知识点","published":1,"updated":"2020-06-11T02:53:47.398Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckbad3e3l0002rsqa99zq9kck","content":"<p>像大多数的持久化框架一样，Mybatis 也提供了缓存策略，通过缓存策略来减少数据库的查询次数，从而提 高性能。 </p>\n<a id=\"more\"></a>\n\n<h5 id=\"Mybatis-中缓存分为一级缓存，二级缓存。\"><a href=\"#Mybatis-中缓存分为一级缓存，二级缓存。\" class=\"headerlink\" title=\"Mybatis 中缓存分为一级缓存，二级缓存。\"></a>Mybatis 中缓存分为一级缓存，二级缓存。</h5><p><img src=\"https://img-blog.csdnimg.cn/20200222111725745.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODg0OTcy,size_16,color_FFFFFF,t_70\" alt=\"一级和二级缓存\"></p>\n<h5 id=\"一级缓存\"><a href=\"#一级缓存\" class=\"headerlink\" title=\"一级缓存\"></a>一级缓存</h5><p>一级缓存是 SqlSession 级别的缓存，只要 SqlSession 没有 flush 或 close，它就存在。<br>一级缓存是 SqlSession 范围的缓存，当调用 SqlSession 的修改，添加，删除，commit()，close()等</p>\n<h6 id=\"二级缓存\"><a href=\"#二级缓存\" class=\"headerlink\" title=\"二级缓存\"></a>二级缓存</h6><p>二级缓存是 mapper 映射级别的缓存，多个 SqlSession 去操作同一个 Mapper 映射的 sql 语句，多个 SqlSession 可以共用二级缓存，二级缓存是跨 SqlSession 的</p>\n<h6 id=\"二级缓存的开启与关闭\"><a href=\"#二级缓存的开启与关闭\" class=\"headerlink\" title=\"二级缓存的开启与关闭\"></a>二级缓存的开启与关闭</h6><p>2.2.2.1 第一步：在 SqlMapConfig.xml 文件开启二级缓存 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;settings&gt; </span><br><span class=\"line\"> &lt;!-- 开启二级缓存的支持 --&gt; </span><br><span class=\"line\">  &lt;setting name&#x3D;&quot;cacheEnabled&quot; value&#x3D;&quot;true&quot;&#x2F;&gt;</span><br><span class=\"line\">&lt;&#x2F;settings&gt;</span><br></pre></td></tr></table></figure>\n\n<p>因为 cacheEnabled 的取值默认就为 true，所以这一步可以省略不配置。为 true 代表开启二级缓存；为 false 代表不开启二级缓存。 </p>\n<h6 id=\"第二步：配置相关的-Mapper-映射文件\"><a href=\"#第二步：配置相关的-Mapper-映射文件\" class=\"headerlink\" title=\"第二步：配置相关的 Mapper 映射文件\"></a>第二步：配置相关的 Mapper 映射文件</h6><p><cache>标签表示当前这个 mapper 映射将使用二级缓存，区分的标准就看 mapper 的 namespace 值。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class=\"line\"> &lt;!DOCTYPE mapper     PUBLIC &quot;-&#x2F;&#x2F;mybatis.org&#x2F;&#x2F;DTD Mapper 3.0&#x2F;&#x2F;EN&quot;     &quot;http:&#x2F;&#x2F;mybatis.org&#x2F;dtd&#x2F;mybatis-3-mapper.dtd&quot;&gt; </span><br><span class=\"line\">&lt;mapper namespace&#x3D;&quot;com.itheima.dao.IUserDao&quot;&gt;</span><br><span class=\"line\"> &lt;!-- 开启二级缓存的支持 --&gt;  </span><br><span class=\"line\"> &lt;cache&gt;&lt;&#x2F;cache&gt; </span><br><span class=\"line\"> &lt;&#x2F;mapper&gt;</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"第三步：配置-statement-上面的-useCache-属性\"><a href=\"#第三步：配置-statement-上面的-useCache-属性\" class=\"headerlink\" title=\"第三步：配置 statement 上面的 useCache 属性\"></a>第三步：配置 statement 上面的 useCache 属性</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 根据 id 查询 --&gt; </span><br><span class=\"line\">&lt;select id&#x3D;&quot;findById&quot; resultType&#x3D;&quot;user&quot; parameterType&#x3D;&quot;int&quot; useCache&#x3D;&quot;true&quot;&gt;</span><br><span class=\"line\">  select * from user where id &#x3D; #&#123;uid&#125; </span><br><span class=\"line\">  &lt;&#x2F;select&gt;</span><br></pre></td></tr></table></figure>\n\n<p>将 UserDao.xml 映射文件中的<select>标签中设置 useCache=”true”代表当前这个 statement 要使用 二级缓存，如果不使用二级缓存可以设置为 false。 注意：针对每次查询都需要最新的数据 sql，要设置成 useCache=false，禁用二级缓存</p>\n","site":{"data":{}},"excerpt":"<p>像大多数的持久化框架一样，Mybatis 也提供了缓存策略，通过缓存策略来减少数据库的查询次数，从而提 高性能。 </p>","more":"<h5 id=\"Mybatis-中缓存分为一级缓存，二级缓存。\"><a href=\"#Mybatis-中缓存分为一级缓存，二级缓存。\" class=\"headerlink\" title=\"Mybatis 中缓存分为一级缓存，二级缓存。\"></a>Mybatis 中缓存分为一级缓存，二级缓存。</h5><p><img src=\"https://img-blog.csdnimg.cn/20200222111725745.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODg0OTcy,size_16,color_FFFFFF,t_70\" alt=\"一级和二级缓存\"></p>\n<h5 id=\"一级缓存\"><a href=\"#一级缓存\" class=\"headerlink\" title=\"一级缓存\"></a>一级缓存</h5><p>一级缓存是 SqlSession 级别的缓存，只要 SqlSession 没有 flush 或 close，它就存在。<br>一级缓存是 SqlSession 范围的缓存，当调用 SqlSession 的修改，添加，删除，commit()，close()等</p>\n<h6 id=\"二级缓存\"><a href=\"#二级缓存\" class=\"headerlink\" title=\"二级缓存\"></a>二级缓存</h6><p>二级缓存是 mapper 映射级别的缓存，多个 SqlSession 去操作同一个 Mapper 映射的 sql 语句，多个 SqlSession 可以共用二级缓存，二级缓存是跨 SqlSession 的</p>\n<h6 id=\"二级缓存的开启与关闭\"><a href=\"#二级缓存的开启与关闭\" class=\"headerlink\" title=\"二级缓存的开启与关闭\"></a>二级缓存的开启与关闭</h6><p>2.2.2.1 第一步：在 SqlMapConfig.xml 文件开启二级缓存 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;settings&gt; </span><br><span class=\"line\"> &lt;!-- 开启二级缓存的支持 --&gt; </span><br><span class=\"line\">  &lt;setting name&#x3D;&quot;cacheEnabled&quot; value&#x3D;&quot;true&quot;&#x2F;&gt;</span><br><span class=\"line\">&lt;&#x2F;settings&gt;</span><br></pre></td></tr></table></figure>\n\n<p>因为 cacheEnabled 的取值默认就为 true，所以这一步可以省略不配置。为 true 代表开启二级缓存；为 false 代表不开启二级缓存。 </p>\n<h6 id=\"第二步：配置相关的-Mapper-映射文件\"><a href=\"#第二步：配置相关的-Mapper-映射文件\" class=\"headerlink\" title=\"第二步：配置相关的 Mapper 映射文件\"></a>第二步：配置相关的 Mapper 映射文件</h6><p><cache>标签表示当前这个 mapper 映射将使用二级缓存，区分的标准就看 mapper 的 namespace 值。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class=\"line\"> &lt;!DOCTYPE mapper     PUBLIC &quot;-&#x2F;&#x2F;mybatis.org&#x2F;&#x2F;DTD Mapper 3.0&#x2F;&#x2F;EN&quot;     &quot;http:&#x2F;&#x2F;mybatis.org&#x2F;dtd&#x2F;mybatis-3-mapper.dtd&quot;&gt; </span><br><span class=\"line\">&lt;mapper namespace&#x3D;&quot;com.itheima.dao.IUserDao&quot;&gt;</span><br><span class=\"line\"> &lt;!-- 开启二级缓存的支持 --&gt;  </span><br><span class=\"line\"> &lt;cache&gt;&lt;&#x2F;cache&gt; </span><br><span class=\"line\"> &lt;&#x2F;mapper&gt;</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"第三步：配置-statement-上面的-useCache-属性\"><a href=\"#第三步：配置-statement-上面的-useCache-属性\" class=\"headerlink\" title=\"第三步：配置 statement 上面的 useCache 属性\"></a>第三步：配置 statement 上面的 useCache 属性</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 根据 id 查询 --&gt; </span><br><span class=\"line\">&lt;select id&#x3D;&quot;findById&quot; resultType&#x3D;&quot;user&quot; parameterType&#x3D;&quot;int&quot; useCache&#x3D;&quot;true&quot;&gt;</span><br><span class=\"line\">  select * from user where id &#x3D; #&#123;uid&#125; </span><br><span class=\"line\">  &lt;&#x2F;select&gt;</span><br></pre></td></tr></table></figure>\n\n<p>将 UserDao.xml 映射文件中的<select>标签中设置 useCache=”true”代表当前这个 statement 要使用 二级缓存，如果不使用二级缓存可以设置为 false。 注意：针对每次查询都需要最新的数据 sql，要设置成 useCache=false，禁用二级缓存</p>"},{"title":"Spring 编程式事务","date":"2019-11-21T13:55:45.000Z","_content":"\nSpring 编程式事务:1 配置文件bean.xml; 2在自己的业务层方法加编程式事务\n\n<!--more-->\n\n#### 1 配置文件bean.xml\n\n导入相关依赖后，在配置文件bean.xml文件中配置\n\n```\n\n    <!-- 配置事务管理器-->\n    <bean id=\"transactionManager\" class=\"org.springframework.jdbc.datasource.DataSourceTransactionManager\">\n    <!--这里是自己配置的数据源-->\n        <property name=\"dataSource\" ref=\"dataSource\"></property>\n    </bean>\n\n    <!--配置事务模板对象-->\n    <bean id=\"transactionTemplate\" class=\"org.springframework.transaction.support.TransactionTemplate\">\n        <property name=\"transactionManager\" ref=\"transactionManager\"></property>\n    </bean>\n```\n#### 2在自己的业务层方法加编程式事务\n在需要加事务的方法method中书写：\n```\npublic void method() {\n        transactionTemplate.execute(new TransactionCallback<Object>() {\n            @Override\n            public Object doInTransaction(TransactionStatus status) {\n                ......\n                自己的方法逻辑\n            }\n        });\n\n    }\n```","source":"_posts/Spring-编程式事务.md","raw":"---\ntitle: Spring 编程式事务\ndate: 2019-11-21 21:55:45\ncategories: Spring\ntags: Spring\n---\n\nSpring 编程式事务:1 配置文件bean.xml; 2在自己的业务层方法加编程式事务\n\n<!--more-->\n\n#### 1 配置文件bean.xml\n\n导入相关依赖后，在配置文件bean.xml文件中配置\n\n```\n\n    <!-- 配置事务管理器-->\n    <bean id=\"transactionManager\" class=\"org.springframework.jdbc.datasource.DataSourceTransactionManager\">\n    <!--这里是自己配置的数据源-->\n        <property name=\"dataSource\" ref=\"dataSource\"></property>\n    </bean>\n\n    <!--配置事务模板对象-->\n    <bean id=\"transactionTemplate\" class=\"org.springframework.transaction.support.TransactionTemplate\">\n        <property name=\"transactionManager\" ref=\"transactionManager\"></property>\n    </bean>\n```\n#### 2在自己的业务层方法加编程式事务\n在需要加事务的方法method中书写：\n```\npublic void method() {\n        transactionTemplate.execute(new TransactionCallback<Object>() {\n            @Override\n            public Object doInTransaction(TransactionStatus status) {\n                ......\n                自己的方法逻辑\n            }\n        });\n\n    }\n```","slug":"Spring-编程式事务","published":1,"updated":"2020-06-11T02:13:47.779Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckbad3e3p0005rsqaa5zy7u8a","content":"<p>Spring 编程式事务:1 配置文件bean.xml; 2在自己的业务层方法加编程式事务</p>\n<a id=\"more\"></a>\n\n<h4 id=\"1-配置文件bean-xml\"><a href=\"#1-配置文件bean-xml\" class=\"headerlink\" title=\"1 配置文件bean.xml\"></a>1 配置文件bean.xml</h4><p>导入相关依赖后，在配置文件bean.xml文件中配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&lt;!-- 配置事务管理器--&gt;</span><br><span class=\"line\">&lt;bean id&#x3D;&quot;transactionManager&quot; class&#x3D;&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;&gt;</span><br><span class=\"line\">&lt;!--这里是自己配置的数据源--&gt;</span><br><span class=\"line\">    &lt;property name&#x3D;&quot;dataSource&quot; ref&#x3D;&quot;dataSource&quot;&gt;&lt;&#x2F;property&gt;</span><br><span class=\"line\">&lt;&#x2F;bean&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!--配置事务模板对象--&gt;</span><br><span class=\"line\">&lt;bean id&#x3D;&quot;transactionTemplate&quot; class&#x3D;&quot;org.springframework.transaction.support.TransactionTemplate&quot;&gt;</span><br><span class=\"line\">    &lt;property name&#x3D;&quot;transactionManager&quot; ref&#x3D;&quot;transactionManager&quot;&gt;&lt;&#x2F;property&gt;</span><br><span class=\"line\">&lt;&#x2F;bean&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"2在自己的业务层方法加编程式事务\"><a href=\"#2在自己的业务层方法加编程式事务\" class=\"headerlink\" title=\"2在自己的业务层方法加编程式事务\"></a>2在自己的业务层方法加编程式事务</h4><p>在需要加事务的方法method中书写：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public void method() &#123;</span><br><span class=\"line\">        transactionTemplate.execute(new TransactionCallback&lt;Object&gt;() &#123;</span><br><span class=\"line\">            @Override</span><br><span class=\"line\">            public Object doInTransaction(TransactionStatus status) &#123;</span><br><span class=\"line\">                ......</span><br><span class=\"line\">                自己的方法逻辑</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>Spring 编程式事务:1 配置文件bean.xml; 2在自己的业务层方法加编程式事务</p>","more":"<h4 id=\"1-配置文件bean-xml\"><a href=\"#1-配置文件bean-xml\" class=\"headerlink\" title=\"1 配置文件bean.xml\"></a>1 配置文件bean.xml</h4><p>导入相关依赖后，在配置文件bean.xml文件中配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&lt;!-- 配置事务管理器--&gt;</span><br><span class=\"line\">&lt;bean id&#x3D;&quot;transactionManager&quot; class&#x3D;&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;&gt;</span><br><span class=\"line\">&lt;!--这里是自己配置的数据源--&gt;</span><br><span class=\"line\">    &lt;property name&#x3D;&quot;dataSource&quot; ref&#x3D;&quot;dataSource&quot;&gt;&lt;&#x2F;property&gt;</span><br><span class=\"line\">&lt;&#x2F;bean&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!--配置事务模板对象--&gt;</span><br><span class=\"line\">&lt;bean id&#x3D;&quot;transactionTemplate&quot; class&#x3D;&quot;org.springframework.transaction.support.TransactionTemplate&quot;&gt;</span><br><span class=\"line\">    &lt;property name&#x3D;&quot;transactionManager&quot; ref&#x3D;&quot;transactionManager&quot;&gt;&lt;&#x2F;property&gt;</span><br><span class=\"line\">&lt;&#x2F;bean&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"2在自己的业务层方法加编程式事务\"><a href=\"#2在自己的业务层方法加编程式事务\" class=\"headerlink\" title=\"2在自己的业务层方法加编程式事务\"></a>2在自己的业务层方法加编程式事务</h4><p>在需要加事务的方法method中书写：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public void method() &#123;</span><br><span class=\"line\">        transactionTemplate.execute(new TransactionCallback&lt;Object&gt;() &#123;</span><br><span class=\"line\">            @Override</span><br><span class=\"line\">            public Object doInTransaction(TransactionStatus status) &#123;</span><br><span class=\"line\">                ......</span><br><span class=\"line\">                自己的方法逻辑</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>"},{"title":"Spring 声明式事务注解@Transactional","date":"2019-11-21T07:30:59.000Z","_content":"\n Spring 声明式事务注解@Transactional使用的两种方式：1 结合xml配置使用； 2纯注解使用\n\n<!--more-->\n\n## 1 结合xml配置使用\n\n#### xml配置文件中加入\n\n```\n    <!-- 配置事务管理器 -->\n    <bean id=\"transactionManager\" class=\"org.springframework.jdbc.datasource.DataSourceTransactionManager\">\n    <!--自己配置的dataSource-->\n        <property name=\"dataSource\" ref=\"dataSource\"></property>\n    </bean>\n\n    <!-- 开启spring对注解事务的支持-->\n    <tx:annotation-driven transaction-manager=\"transactionManager\"></tx:annotation-driven>\n```\n##### 在serivce层或者serice层的方法加@Transactional注解\n参数：\npropagation：事务传播行为\ntimeout：事务超时设置\nisolation：事务隔离级别\n\n\n## 2 纯注解使用\n### 事务管理器配置类\n\n```\n/**\n * 和事务相关的配置类\n */\npublic class TransactionConfig {\n\n    /**\n     * 用于创建事务管理器对象\n     * @param dataSource\n     * @return\n     */\n    @Bean(name=\"transactionManager\")\n    public PlatformTransactionManager createTransactionManager(DataSource dataSource){\n        return new DataSourceTransactionManager(dataSource);\n    }\n}\n```\n##### service中的配置和1一样","source":"_posts/Spring-声明式事务注解-Transactional.md","raw":"---\ntitle: Spring 声明式事务注解@Transactional\ndate: 2019-11-21 15:30:59 \ncategories: Spring\ntags: Spring\n---\n\n Spring 声明式事务注解@Transactional使用的两种方式：1 结合xml配置使用； 2纯注解使用\n\n<!--more-->\n\n## 1 结合xml配置使用\n\n#### xml配置文件中加入\n\n```\n    <!-- 配置事务管理器 -->\n    <bean id=\"transactionManager\" class=\"org.springframework.jdbc.datasource.DataSourceTransactionManager\">\n    <!--自己配置的dataSource-->\n        <property name=\"dataSource\" ref=\"dataSource\"></property>\n    </bean>\n\n    <!-- 开启spring对注解事务的支持-->\n    <tx:annotation-driven transaction-manager=\"transactionManager\"></tx:annotation-driven>\n```\n##### 在serivce层或者serice层的方法加@Transactional注解\n参数：\npropagation：事务传播行为\ntimeout：事务超时设置\nisolation：事务隔离级别\n\n\n## 2 纯注解使用\n### 事务管理器配置类\n\n```\n/**\n * 和事务相关的配置类\n */\npublic class TransactionConfig {\n\n    /**\n     * 用于创建事务管理器对象\n     * @param dataSource\n     * @return\n     */\n    @Bean(name=\"transactionManager\")\n    public PlatformTransactionManager createTransactionManager(DataSource dataSource){\n        return new DataSourceTransactionManager(dataSource);\n    }\n}\n```\n##### service中的配置和1一样","slug":"Spring-声明式事务注解-Transactional","published":1,"updated":"2020-06-11T01:49:32.771Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckbad3e3q0006rsqaeme70ef0","content":"<p> Spring 声明式事务注解@Transactional使用的两种方式：1 结合xml配置使用； 2纯注解使用</p>\n<a id=\"more\"></a>\n\n<h2 id=\"1-结合xml配置使用\"><a href=\"#1-结合xml配置使用\" class=\"headerlink\" title=\"1 结合xml配置使用\"></a>1 结合xml配置使用</h2><h4 id=\"xml配置文件中加入\"><a href=\"#xml配置文件中加入\" class=\"headerlink\" title=\"xml配置文件中加入\"></a>xml配置文件中加入</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 配置事务管理器 --&gt;</span><br><span class=\"line\">&lt;bean id&#x3D;&quot;transactionManager&quot; class&#x3D;&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;&gt;</span><br><span class=\"line\">&lt;!--自己配置的dataSource--&gt;</span><br><span class=\"line\">    &lt;property name&#x3D;&quot;dataSource&quot; ref&#x3D;&quot;dataSource&quot;&gt;&lt;&#x2F;property&gt;</span><br><span class=\"line\">&lt;&#x2F;bean&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- 开启spring对注解事务的支持--&gt;</span><br><span class=\"line\">&lt;tx:annotation-driven transaction-manager&#x3D;&quot;transactionManager&quot;&gt;&lt;&#x2F;tx:annotation-driven&gt;</span><br></pre></td></tr></table></figure>\n<h5 id=\"在serivce层或者serice层的方法加-Transactional注解\"><a href=\"#在serivce层或者serice层的方法加-Transactional注解\" class=\"headerlink\" title=\"在serivce层或者serice层的方法加@Transactional注解\"></a>在serivce层或者serice层的方法加@Transactional注解</h5><p>参数：<br>propagation：事务传播行为<br>timeout：事务超时设置<br>isolation：事务隔离级别</p>\n<h2 id=\"2-纯注解使用\"><a href=\"#2-纯注解使用\" class=\"headerlink\" title=\"2 纯注解使用\"></a>2 纯注解使用</h2><h3 id=\"事务管理器配置类\"><a href=\"#事务管理器配置类\" class=\"headerlink\" title=\"事务管理器配置类\"></a>事务管理器配置类</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;**</span><br><span class=\"line\"> * 和事务相关的配置类</span><br><span class=\"line\"> *&#x2F;</span><br><span class=\"line\">public class TransactionConfig &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#x2F;**</span><br><span class=\"line\">     * 用于创建事务管理器对象</span><br><span class=\"line\">     * @param dataSource</span><br><span class=\"line\">     * @return</span><br><span class=\"line\">     *&#x2F;</span><br><span class=\"line\">    @Bean(name&#x3D;&quot;transactionManager&quot;)</span><br><span class=\"line\">    public PlatformTransactionManager createTransactionManager(DataSource dataSource)&#123;</span><br><span class=\"line\">        return new DataSourceTransactionManager(dataSource);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"service中的配置和1一样\"><a href=\"#service中的配置和1一样\" class=\"headerlink\" title=\"service中的配置和1一样\"></a>service中的配置和1一样</h5>","site":{"data":{}},"excerpt":"<p> Spring 声明式事务注解@Transactional使用的两种方式：1 结合xml配置使用； 2纯注解使用</p>","more":"<h2 id=\"1-结合xml配置使用\"><a href=\"#1-结合xml配置使用\" class=\"headerlink\" title=\"1 结合xml配置使用\"></a>1 结合xml配置使用</h2><h4 id=\"xml配置文件中加入\"><a href=\"#xml配置文件中加入\" class=\"headerlink\" title=\"xml配置文件中加入\"></a>xml配置文件中加入</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 配置事务管理器 --&gt;</span><br><span class=\"line\">&lt;bean id&#x3D;&quot;transactionManager&quot; class&#x3D;&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;&gt;</span><br><span class=\"line\">&lt;!--自己配置的dataSource--&gt;</span><br><span class=\"line\">    &lt;property name&#x3D;&quot;dataSource&quot; ref&#x3D;&quot;dataSource&quot;&gt;&lt;&#x2F;property&gt;</span><br><span class=\"line\">&lt;&#x2F;bean&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- 开启spring对注解事务的支持--&gt;</span><br><span class=\"line\">&lt;tx:annotation-driven transaction-manager&#x3D;&quot;transactionManager&quot;&gt;&lt;&#x2F;tx:annotation-driven&gt;</span><br></pre></td></tr></table></figure>\n<h5 id=\"在serivce层或者serice层的方法加-Transactional注解\"><a href=\"#在serivce层或者serice层的方法加-Transactional注解\" class=\"headerlink\" title=\"在serivce层或者serice层的方法加@Transactional注解\"></a>在serivce层或者serice层的方法加@Transactional注解</h5><p>参数：<br>propagation：事务传播行为<br>timeout：事务超时设置<br>isolation：事务隔离级别</p>\n<h2 id=\"2-纯注解使用\"><a href=\"#2-纯注解使用\" class=\"headerlink\" title=\"2 纯注解使用\"></a>2 纯注解使用</h2><h3 id=\"事务管理器配置类\"><a href=\"#事务管理器配置类\" class=\"headerlink\" title=\"事务管理器配置类\"></a>事务管理器配置类</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;**</span><br><span class=\"line\"> * 和事务相关的配置类</span><br><span class=\"line\"> *&#x2F;</span><br><span class=\"line\">public class TransactionConfig &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#x2F;**</span><br><span class=\"line\">     * 用于创建事务管理器对象</span><br><span class=\"line\">     * @param dataSource</span><br><span class=\"line\">     * @return</span><br><span class=\"line\">     *&#x2F;</span><br><span class=\"line\">    @Bean(name&#x3D;&quot;transactionManager&quot;)</span><br><span class=\"line\">    public PlatformTransactionManager createTransactionManager(DataSource dataSource)&#123;</span><br><span class=\"line\">        return new DataSourceTransactionManager(dataSource);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"service中的配置和1一样\"><a href=\"#service中的配置和1一样\" class=\"headerlink\" title=\"service中的配置和1一样\"></a>service中的配置和1一样</h5>"},{"title":"mybatis 延迟加载和立即加载的实现","date":"2020-01-08T14:06:49.000Z","_content":"\nmybatis 延迟加载和立即加载的实现\n\n<!--more-->\n\n 延迟加载：   就是在需要用到数据时才进行加载，不需要用到数据时就不加载数据。延迟加载也称懒加载.\n 好处：先从单表查询，需要时再从关联表去关联查询，大大提高数据库性能，因为查询单表要比关联查询多张表速 度要快。  \n 坏处：   因为只有当需要用到数据时，才会进行数据库查询，这样在大批量数据查询时，因为查询工作也要消耗 时间，所以可能造成用户等待时间变长，造成用户体验下降\n 在我们使用多表查询时（一对一，一对多或者多对多），mybatis默认使用立即加载。如果我们想使用延迟加载需要做两件事\n\n ### 1设置多表查询返回的resultMap\n\n\n```\n    <resultMap id=\"entity1tEntity2\" type=\"entity1\">\n        <id property=\"entity1_id\" column=\"entity1_id\"></id>\n        <result property=\"entity2_id\" column=\"entity2_id\"></result><!--关联字段-->\n        <result property=\"file\" column=\"file\"></result>\n            <!--在这里完成这个配置后只要select * from table_entity1就可以了-->\n        <!-- 一对一的关系映射：配置封装entity2的内容\n        select属性指定的内容：查询entity2的唯一标识：\n        column属性指定的内容：entity2根据id查询时，所需要的参数的值\n        -->\n        <association property=\"entity2\" column=\"entity2_id\" javaType=\"entity2\" select=\"namespce+查询语句的id\"></association>\n            <!--在这里完成这个配置后只要select * from table_entity1 where entity2_id=?就可以了-->\n    </resultMap>\n\n```\n配置映射文件config.xml\n\n```\n<configuration>\n    <settings>\n        <!--开启Mybatis支持延迟加载-->\n        <setting name=\"lazyLoadingEnabled\" value=\"true\"/>\n    </settings>\n</configuration>\n```\n官方文档：[https://mybatis.org/mybatis-3/zh/configuration.html#settings](https://mybatis.org/mybatis-3/zh/configuration.html#settings).\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200108220513576.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODg0OTcy,size_16,color_FFFFFF,t_70)","source":"_posts/mybatis-延迟加载和立即加载的实现.md","raw":"---\ntitle: mybatis 延迟加载和立即加载的实现\ndate: 2020-01-08 22:06:49 \ncategories: mybatis\ntags: mybatis\n---\n\nmybatis 延迟加载和立即加载的实现\n\n<!--more-->\n\n 延迟加载：   就是在需要用到数据时才进行加载，不需要用到数据时就不加载数据。延迟加载也称懒加载.\n 好处：先从单表查询，需要时再从关联表去关联查询，大大提高数据库性能，因为查询单表要比关联查询多张表速 度要快。  \n 坏处：   因为只有当需要用到数据时，才会进行数据库查询，这样在大批量数据查询时，因为查询工作也要消耗 时间，所以可能造成用户等待时间变长，造成用户体验下降\n 在我们使用多表查询时（一对一，一对多或者多对多），mybatis默认使用立即加载。如果我们想使用延迟加载需要做两件事\n\n ### 1设置多表查询返回的resultMap\n\n\n```\n    <resultMap id=\"entity1tEntity2\" type=\"entity1\">\n        <id property=\"entity1_id\" column=\"entity1_id\"></id>\n        <result property=\"entity2_id\" column=\"entity2_id\"></result><!--关联字段-->\n        <result property=\"file\" column=\"file\"></result>\n            <!--在这里完成这个配置后只要select * from table_entity1就可以了-->\n        <!-- 一对一的关系映射：配置封装entity2的内容\n        select属性指定的内容：查询entity2的唯一标识：\n        column属性指定的内容：entity2根据id查询时，所需要的参数的值\n        -->\n        <association property=\"entity2\" column=\"entity2_id\" javaType=\"entity2\" select=\"namespce+查询语句的id\"></association>\n            <!--在这里完成这个配置后只要select * from table_entity1 where entity2_id=?就可以了-->\n    </resultMap>\n\n```\n配置映射文件config.xml\n\n```\n<configuration>\n    <settings>\n        <!--开启Mybatis支持延迟加载-->\n        <setting name=\"lazyLoadingEnabled\" value=\"true\"/>\n    </settings>\n</configuration>\n```\n官方文档：[https://mybatis.org/mybatis-3/zh/configuration.html#settings](https://mybatis.org/mybatis-3/zh/configuration.html#settings).\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200108220513576.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODg0OTcy,size_16,color_FFFFFF,t_70)","slug":"mybatis-延迟加载和立即加载的实现","published":1,"updated":"2020-06-11T02:46:48.447Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckbad3e3r0007rsqa1qilhmzv","content":"<p>mybatis 延迟加载和立即加载的实现</p>\n<a id=\"more\"></a>\n\n<p> 延迟加载：   就是在需要用到数据时才进行加载，不需要用到数据时就不加载数据。延迟加载也称懒加载.<br> 好处：先从单表查询，需要时再从关联表去关联查询，大大提高数据库性能，因为查询单表要比关联查询多张表速 度要快。<br> 坏处：   因为只有当需要用到数据时，才会进行数据库查询，这样在大批量数据查询时，因为查询工作也要消耗 时间，所以可能造成用户等待时间变长，造成用户体验下降<br> 在我们使用多表查询时（一对一，一对多或者多对多），mybatis默认使用立即加载。如果我们想使用延迟加载需要做两件事</p>\n<h3 id=\"1设置多表查询返回的resultMap\"><a href=\"#1设置多表查询返回的resultMap\" class=\"headerlink\" title=\"1设置多表查询返回的resultMap\"></a>1设置多表查询返回的resultMap</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;resultMap id&#x3D;&quot;entity1tEntity2&quot; type&#x3D;&quot;entity1&quot;&gt;</span><br><span class=\"line\">    &lt;id property&#x3D;&quot;entity1_id&quot; column&#x3D;&quot;entity1_id&quot;&gt;&lt;&#x2F;id&gt;</span><br><span class=\"line\">    &lt;result property&#x3D;&quot;entity2_id&quot; column&#x3D;&quot;entity2_id&quot;&gt;&lt;&#x2F;result&gt;&lt;!--关联字段--&gt;</span><br><span class=\"line\">    &lt;result property&#x3D;&quot;file&quot; column&#x3D;&quot;file&quot;&gt;&lt;&#x2F;result&gt;</span><br><span class=\"line\">        &lt;!--在这里完成这个配置后只要select * from table_entity1就可以了--&gt;</span><br><span class=\"line\">    &lt;!-- 一对一的关系映射：配置封装entity2的内容</span><br><span class=\"line\">    select属性指定的内容：查询entity2的唯一标识：</span><br><span class=\"line\">    column属性指定的内容：entity2根据id查询时，所需要的参数的值</span><br><span class=\"line\">    --&gt;</span><br><span class=\"line\">    &lt;association property&#x3D;&quot;entity2&quot; column&#x3D;&quot;entity2_id&quot; javaType&#x3D;&quot;entity2&quot; select&#x3D;&quot;namespce+查询语句的id&quot;&gt;&lt;&#x2F;association&gt;</span><br><span class=\"line\">        &lt;!--在这里完成这个配置后只要select * from table_entity1 where entity2_id&#x3D;?就可以了--&gt;</span><br><span class=\"line\">&lt;&#x2F;resultMap&gt;</span><br></pre></td></tr></table></figure>\n<p>配置映射文件config.xml</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;configuration&gt;</span><br><span class=\"line\">    &lt;settings&gt;</span><br><span class=\"line\">        &lt;!--开启Mybatis支持延迟加载--&gt;</span><br><span class=\"line\">        &lt;setting name&#x3D;&quot;lazyLoadingEnabled&quot; value&#x3D;&quot;true&quot;&#x2F;&gt;</span><br><span class=\"line\">    &lt;&#x2F;settings&gt;</span><br><span class=\"line\">&lt;&#x2F;configuration&gt;</span><br></pre></td></tr></table></figure>\n<p>官方文档：<a href=\"https://mybatis.org/mybatis-3/zh/configuration.html#settings\" target=\"_blank\" rel=\"noopener\">https://mybatis.org/mybatis-3/zh/configuration.html#settings</a>.<br><img src=\"https://img-blog.csdnimg.cn/20200108220513576.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODg0OTcy,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n","site":{"data":{}},"excerpt":"<p>mybatis 延迟加载和立即加载的实现</p>","more":"<p> 延迟加载：   就是在需要用到数据时才进行加载，不需要用到数据时就不加载数据。延迟加载也称懒加载.<br> 好处：先从单表查询，需要时再从关联表去关联查询，大大提高数据库性能，因为查询单表要比关联查询多张表速 度要快。<br> 坏处：   因为只有当需要用到数据时，才会进行数据库查询，这样在大批量数据查询时，因为查询工作也要消耗 时间，所以可能造成用户等待时间变长，造成用户体验下降<br> 在我们使用多表查询时（一对一，一对多或者多对多），mybatis默认使用立即加载。如果我们想使用延迟加载需要做两件事</p>\n<h3 id=\"1设置多表查询返回的resultMap\"><a href=\"#1设置多表查询返回的resultMap\" class=\"headerlink\" title=\"1设置多表查询返回的resultMap\"></a>1设置多表查询返回的resultMap</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;resultMap id&#x3D;&quot;entity1tEntity2&quot; type&#x3D;&quot;entity1&quot;&gt;</span><br><span class=\"line\">    &lt;id property&#x3D;&quot;entity1_id&quot; column&#x3D;&quot;entity1_id&quot;&gt;&lt;&#x2F;id&gt;</span><br><span class=\"line\">    &lt;result property&#x3D;&quot;entity2_id&quot; column&#x3D;&quot;entity2_id&quot;&gt;&lt;&#x2F;result&gt;&lt;!--关联字段--&gt;</span><br><span class=\"line\">    &lt;result property&#x3D;&quot;file&quot; column&#x3D;&quot;file&quot;&gt;&lt;&#x2F;result&gt;</span><br><span class=\"line\">        &lt;!--在这里完成这个配置后只要select * from table_entity1就可以了--&gt;</span><br><span class=\"line\">    &lt;!-- 一对一的关系映射：配置封装entity2的内容</span><br><span class=\"line\">    select属性指定的内容：查询entity2的唯一标识：</span><br><span class=\"line\">    column属性指定的内容：entity2根据id查询时，所需要的参数的值</span><br><span class=\"line\">    --&gt;</span><br><span class=\"line\">    &lt;association property&#x3D;&quot;entity2&quot; column&#x3D;&quot;entity2_id&quot; javaType&#x3D;&quot;entity2&quot; select&#x3D;&quot;namespce+查询语句的id&quot;&gt;&lt;&#x2F;association&gt;</span><br><span class=\"line\">        &lt;!--在这里完成这个配置后只要select * from table_entity1 where entity2_id&#x3D;?就可以了--&gt;</span><br><span class=\"line\">&lt;&#x2F;resultMap&gt;</span><br></pre></td></tr></table></figure>\n<p>配置映射文件config.xml</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;configuration&gt;</span><br><span class=\"line\">    &lt;settings&gt;</span><br><span class=\"line\">        &lt;!--开启Mybatis支持延迟加载--&gt;</span><br><span class=\"line\">        &lt;setting name&#x3D;&quot;lazyLoadingEnabled&quot; value&#x3D;&quot;true&quot;&#x2F;&gt;</span><br><span class=\"line\">    &lt;&#x2F;settings&gt;</span><br><span class=\"line\">&lt;&#x2F;configuration&gt;</span><br></pre></td></tr></table></figure>\n<p>官方文档：<a href=\"https://mybatis.org/mybatis-3/zh/configuration.html#settings\" target=\"_blank\" rel=\"noopener\">https://mybatis.org/mybatis-3/zh/configuration.html#settings</a>.<br><img src=\"https://img-blog.csdnimg.cn/20200108220513576.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODg0OTcy,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>"},{"title":" mybatic初学环境搭建","date":"2019-11-19T08:22:46.000Z","_content":"\n搭建mybatis环境\n\n<!--more-->\n\n### 1 maven导入相关依赖\n\n```\n<dependencies>\n<!--mybatic-->\n        <dependency>\n            <groupId>org.mybatis</groupId>\n            <artifactId>mybatis</artifactId>\n            <version>3.4.5</version>\n        </dependency>\n        <!--mysql连接-->\n        <dependency>\n            <groupId>mysql</groupId>\n            <artifactId>mysql-connector-java</artifactId>\n            <version>5.1.6</version>\n        </dependency>\n        <!--日志-->\n        <dependency>\n            <groupId>log4j</groupId>\n            <artifactId>log4j</artifactId>\n            <version>1.2.12</version>\n        </dependency>\n               <!--junit测试-->\n        <dependency>\n            <groupId>junit</groupId>\n            <artifactId>junit</artifactId>\n            <version>4.10</version>\n        </dependency>\n    </dependencies>\n```\n### 2 配置mybaits的配置文件SqlMapConfig.xml\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE configuration\n        PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-3-config.dtd\">\n<!-- mybatis的主配置文件 -->\n<configuration>\n    <!-- 配置环境 -->\n    <environments default=\"mysql\">\n        <!-- 配置mysql的环境-->\n        <environment id=\"mysql\">\n            <!-- 配置事务的类型-->\n            <transactionManager type=\"JDBC\"></transactionManager>\n            <!-- 配置数据源（连接池） -->\n            <dataSource type=\"POOLED\">\n                <!-- 配置连接数据库的4个基本信息 -->\n                <property name=\"driver\" value=\"com.mysql.jdbc.Driver\"/>\n                <property name=\"url\" value=\"jdbc:mysql://localhost:3306/test\"/>\n                <property name=\"username\" value=\"root\"/>\n                <property name=\"password\" value=\"1234\"/>\n            </dataSource>\n        </environment>\n    </environments>\n\n    <!-- 指定映射配置文件的位置，映射配置文件指的是每个dao独立的配置文件 -->\n    <mappers>\n        <mapper resource=\"com/itheima/dao/IUserDao.xml\"/>\n    </mappers>\n</configuration>\n```\n### 3 创建数据库表对应的实体\n### 4 创建SqlMapConfig.xml对应的映射文件\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n        <!DOCTYPE mapper\n                PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n                \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n                <!--****是对应的dao层接口-->\n<mapper namespace=\"****\">\n<!--这里写自己的动态sql-->\n.......\n</mapper>\n```\n##### 5 写好自己的dao层接口，以及运行，读取SqlMapConfig.xml","source":"_posts/mybatic初学环境搭建.md","raw":"---\ntitle: ' mybatic初学环境搭建'\ndate: 2019-11-19 16:22:46 \ncategories: mybatis\ntags: mybatis\n---\n\n搭建mybatis环境\n\n<!--more-->\n\n### 1 maven导入相关依赖\n\n```\n<dependencies>\n<!--mybatic-->\n        <dependency>\n            <groupId>org.mybatis</groupId>\n            <artifactId>mybatis</artifactId>\n            <version>3.4.5</version>\n        </dependency>\n        <!--mysql连接-->\n        <dependency>\n            <groupId>mysql</groupId>\n            <artifactId>mysql-connector-java</artifactId>\n            <version>5.1.6</version>\n        </dependency>\n        <!--日志-->\n        <dependency>\n            <groupId>log4j</groupId>\n            <artifactId>log4j</artifactId>\n            <version>1.2.12</version>\n        </dependency>\n               <!--junit测试-->\n        <dependency>\n            <groupId>junit</groupId>\n            <artifactId>junit</artifactId>\n            <version>4.10</version>\n        </dependency>\n    </dependencies>\n```\n### 2 配置mybaits的配置文件SqlMapConfig.xml\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE configuration\n        PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-3-config.dtd\">\n<!-- mybatis的主配置文件 -->\n<configuration>\n    <!-- 配置环境 -->\n    <environments default=\"mysql\">\n        <!-- 配置mysql的环境-->\n        <environment id=\"mysql\">\n            <!-- 配置事务的类型-->\n            <transactionManager type=\"JDBC\"></transactionManager>\n            <!-- 配置数据源（连接池） -->\n            <dataSource type=\"POOLED\">\n                <!-- 配置连接数据库的4个基本信息 -->\n                <property name=\"driver\" value=\"com.mysql.jdbc.Driver\"/>\n                <property name=\"url\" value=\"jdbc:mysql://localhost:3306/test\"/>\n                <property name=\"username\" value=\"root\"/>\n                <property name=\"password\" value=\"1234\"/>\n            </dataSource>\n        </environment>\n    </environments>\n\n    <!-- 指定映射配置文件的位置，映射配置文件指的是每个dao独立的配置文件 -->\n    <mappers>\n        <mapper resource=\"com/itheima/dao/IUserDao.xml\"/>\n    </mappers>\n</configuration>\n```\n### 3 创建数据库表对应的实体\n### 4 创建SqlMapConfig.xml对应的映射文件\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n        <!DOCTYPE mapper\n                PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n                \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n                <!--****是对应的dao层接口-->\n<mapper namespace=\"****\">\n<!--这里写自己的动态sql-->\n.......\n</mapper>\n```\n##### 5 写好自己的dao层接口，以及运行，读取SqlMapConfig.xml","slug":"mybatic初学环境搭建","published":1,"updated":"2020-06-11T01:46:10.307Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckbad3e3t000brsqagcad0tcg","content":"<p>搭建mybatis环境</p>\n<a id=\"more\"></a>\n\n<h3 id=\"1-maven导入相关依赖\"><a href=\"#1-maven导入相关依赖\" class=\"headerlink\" title=\"1 maven导入相关依赖\"></a>1 maven导入相关依赖</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependencies&gt;</span><br><span class=\"line\">&lt;!--mybatic--&gt;</span><br><span class=\"line\">        &lt;dependency&gt;</span><br><span class=\"line\">            &lt;groupId&gt;org.mybatis&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">            &lt;artifactId&gt;mybatis&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">            &lt;version&gt;3.4.5&lt;&#x2F;version&gt;</span><br><span class=\"line\">        &lt;&#x2F;dependency&gt;</span><br><span class=\"line\">        &lt;!--mysql连接--&gt;</span><br><span class=\"line\">        &lt;dependency&gt;</span><br><span class=\"line\">            &lt;groupId&gt;mysql&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">            &lt;artifactId&gt;mysql-connector-java&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">            &lt;version&gt;5.1.6&lt;&#x2F;version&gt;</span><br><span class=\"line\">        &lt;&#x2F;dependency&gt;</span><br><span class=\"line\">        &lt;!--日志--&gt;</span><br><span class=\"line\">        &lt;dependency&gt;</span><br><span class=\"line\">            &lt;groupId&gt;log4j&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">            &lt;artifactId&gt;log4j&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">            &lt;version&gt;1.2.12&lt;&#x2F;version&gt;</span><br><span class=\"line\">        &lt;&#x2F;dependency&gt;</span><br><span class=\"line\">               &lt;!--junit测试--&gt;</span><br><span class=\"line\">        &lt;dependency&gt;</span><br><span class=\"line\">            &lt;groupId&gt;junit&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">            &lt;artifactId&gt;junit&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">            &lt;version&gt;4.10&lt;&#x2F;version&gt;</span><br><span class=\"line\">        &lt;&#x2F;dependency&gt;</span><br><span class=\"line\">    &lt;&#x2F;dependencies&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-配置mybaits的配置文件SqlMapConfig-xml\"><a href=\"#2-配置mybaits的配置文件SqlMapConfig-xml\" class=\"headerlink\" title=\"2 配置mybaits的配置文件SqlMapConfig.xml\"></a>2 配置mybaits的配置文件SqlMapConfig.xml</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class=\"line\">&lt;!DOCTYPE configuration</span><br><span class=\"line\">        PUBLIC &quot;-&#x2F;&#x2F;mybatis.org&#x2F;&#x2F;DTD Config 3.0&#x2F;&#x2F;EN&quot;</span><br><span class=\"line\">        &quot;http:&#x2F;&#x2F;mybatis.org&#x2F;dtd&#x2F;mybatis-3-config.dtd&quot;&gt;</span><br><span class=\"line\">&lt;!-- mybatis的主配置文件 --&gt;</span><br><span class=\"line\">&lt;configuration&gt;</span><br><span class=\"line\">    &lt;!-- 配置环境 --&gt;</span><br><span class=\"line\">    &lt;environments default&#x3D;&quot;mysql&quot;&gt;</span><br><span class=\"line\">        &lt;!-- 配置mysql的环境--&gt;</span><br><span class=\"line\">        &lt;environment id&#x3D;&quot;mysql&quot;&gt;</span><br><span class=\"line\">            &lt;!-- 配置事务的类型--&gt;</span><br><span class=\"line\">            &lt;transactionManager type&#x3D;&quot;JDBC&quot;&gt;&lt;&#x2F;transactionManager&gt;</span><br><span class=\"line\">            &lt;!-- 配置数据源（连接池） --&gt;</span><br><span class=\"line\">            &lt;dataSource type&#x3D;&quot;POOLED&quot;&gt;</span><br><span class=\"line\">                &lt;!-- 配置连接数据库的4个基本信息 --&gt;</span><br><span class=\"line\">                &lt;property name&#x3D;&quot;driver&quot; value&#x3D;&quot;com.mysql.jdbc.Driver&quot;&#x2F;&gt;</span><br><span class=\"line\">                &lt;property name&#x3D;&quot;url&quot; value&#x3D;&quot;jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;test&quot;&#x2F;&gt;</span><br><span class=\"line\">                &lt;property name&#x3D;&quot;username&quot; value&#x3D;&quot;root&quot;&#x2F;&gt;</span><br><span class=\"line\">                &lt;property name&#x3D;&quot;password&quot; value&#x3D;&quot;1234&quot;&#x2F;&gt;</span><br><span class=\"line\">            &lt;&#x2F;dataSource&gt;</span><br><span class=\"line\">        &lt;&#x2F;environment&gt;</span><br><span class=\"line\">    &lt;&#x2F;environments&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;!-- 指定映射配置文件的位置，映射配置文件指的是每个dao独立的配置文件 --&gt;</span><br><span class=\"line\">    &lt;mappers&gt;</span><br><span class=\"line\">        &lt;mapper resource&#x3D;&quot;com&#x2F;itheima&#x2F;dao&#x2F;IUserDao.xml&quot;&#x2F;&gt;</span><br><span class=\"line\">    &lt;&#x2F;mappers&gt;</span><br><span class=\"line\">&lt;&#x2F;configuration&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-创建数据库表对应的实体\"><a href=\"#3-创建数据库表对应的实体\" class=\"headerlink\" title=\"3 创建数据库表对应的实体\"></a>3 创建数据库表对应的实体</h3><h3 id=\"4-创建SqlMapConfig-xml对应的映射文件\"><a href=\"#4-创建SqlMapConfig-xml对应的映射文件\" class=\"headerlink\" title=\"4 创建SqlMapConfig.xml对应的映射文件\"></a>4 创建SqlMapConfig.xml对应的映射文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class=\"line\">        &lt;!DOCTYPE mapper</span><br><span class=\"line\">                PUBLIC &quot;-&#x2F;&#x2F;mybatis.org&#x2F;&#x2F;DTD Mapper 3.0&#x2F;&#x2F;EN&quot;</span><br><span class=\"line\">                &quot;http:&#x2F;&#x2F;mybatis.org&#x2F;dtd&#x2F;mybatis-3-mapper.dtd&quot;&gt;</span><br><span class=\"line\">                &lt;!--****是对应的dao层接口--&gt;</span><br><span class=\"line\">&lt;mapper namespace&#x3D;&quot;****&quot;&gt;</span><br><span class=\"line\">&lt;!--这里写自己的动态sql--&gt;</span><br><span class=\"line\">.......</span><br><span class=\"line\">&lt;&#x2F;mapper&gt;</span><br></pre></td></tr></table></figure>\n<h5 id=\"5-写好自己的dao层接口，以及运行，读取SqlMapConfig-xml\"><a href=\"#5-写好自己的dao层接口，以及运行，读取SqlMapConfig-xml\" class=\"headerlink\" title=\"5 写好自己的dao层接口，以及运行，读取SqlMapConfig.xml\"></a>5 写好自己的dao层接口，以及运行，读取SqlMapConfig.xml</h5>","site":{"data":{}},"excerpt":"<p>搭建mybatis环境</p>","more":"<h3 id=\"1-maven导入相关依赖\"><a href=\"#1-maven导入相关依赖\" class=\"headerlink\" title=\"1 maven导入相关依赖\"></a>1 maven导入相关依赖</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependencies&gt;</span><br><span class=\"line\">&lt;!--mybatic--&gt;</span><br><span class=\"line\">        &lt;dependency&gt;</span><br><span class=\"line\">            &lt;groupId&gt;org.mybatis&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">            &lt;artifactId&gt;mybatis&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">            &lt;version&gt;3.4.5&lt;&#x2F;version&gt;</span><br><span class=\"line\">        &lt;&#x2F;dependency&gt;</span><br><span class=\"line\">        &lt;!--mysql连接--&gt;</span><br><span class=\"line\">        &lt;dependency&gt;</span><br><span class=\"line\">            &lt;groupId&gt;mysql&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">            &lt;artifactId&gt;mysql-connector-java&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">            &lt;version&gt;5.1.6&lt;&#x2F;version&gt;</span><br><span class=\"line\">        &lt;&#x2F;dependency&gt;</span><br><span class=\"line\">        &lt;!--日志--&gt;</span><br><span class=\"line\">        &lt;dependency&gt;</span><br><span class=\"line\">            &lt;groupId&gt;log4j&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">            &lt;artifactId&gt;log4j&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">            &lt;version&gt;1.2.12&lt;&#x2F;version&gt;</span><br><span class=\"line\">        &lt;&#x2F;dependency&gt;</span><br><span class=\"line\">               &lt;!--junit测试--&gt;</span><br><span class=\"line\">        &lt;dependency&gt;</span><br><span class=\"line\">            &lt;groupId&gt;junit&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">            &lt;artifactId&gt;junit&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">            &lt;version&gt;4.10&lt;&#x2F;version&gt;</span><br><span class=\"line\">        &lt;&#x2F;dependency&gt;</span><br><span class=\"line\">    &lt;&#x2F;dependencies&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-配置mybaits的配置文件SqlMapConfig-xml\"><a href=\"#2-配置mybaits的配置文件SqlMapConfig-xml\" class=\"headerlink\" title=\"2 配置mybaits的配置文件SqlMapConfig.xml\"></a>2 配置mybaits的配置文件SqlMapConfig.xml</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class=\"line\">&lt;!DOCTYPE configuration</span><br><span class=\"line\">        PUBLIC &quot;-&#x2F;&#x2F;mybatis.org&#x2F;&#x2F;DTD Config 3.0&#x2F;&#x2F;EN&quot;</span><br><span class=\"line\">        &quot;http:&#x2F;&#x2F;mybatis.org&#x2F;dtd&#x2F;mybatis-3-config.dtd&quot;&gt;</span><br><span class=\"line\">&lt;!-- mybatis的主配置文件 --&gt;</span><br><span class=\"line\">&lt;configuration&gt;</span><br><span class=\"line\">    &lt;!-- 配置环境 --&gt;</span><br><span class=\"line\">    &lt;environments default&#x3D;&quot;mysql&quot;&gt;</span><br><span class=\"line\">        &lt;!-- 配置mysql的环境--&gt;</span><br><span class=\"line\">        &lt;environment id&#x3D;&quot;mysql&quot;&gt;</span><br><span class=\"line\">            &lt;!-- 配置事务的类型--&gt;</span><br><span class=\"line\">            &lt;transactionManager type&#x3D;&quot;JDBC&quot;&gt;&lt;&#x2F;transactionManager&gt;</span><br><span class=\"line\">            &lt;!-- 配置数据源（连接池） --&gt;</span><br><span class=\"line\">            &lt;dataSource type&#x3D;&quot;POOLED&quot;&gt;</span><br><span class=\"line\">                &lt;!-- 配置连接数据库的4个基本信息 --&gt;</span><br><span class=\"line\">                &lt;property name&#x3D;&quot;driver&quot; value&#x3D;&quot;com.mysql.jdbc.Driver&quot;&#x2F;&gt;</span><br><span class=\"line\">                &lt;property name&#x3D;&quot;url&quot; value&#x3D;&quot;jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;test&quot;&#x2F;&gt;</span><br><span class=\"line\">                &lt;property name&#x3D;&quot;username&quot; value&#x3D;&quot;root&quot;&#x2F;&gt;</span><br><span class=\"line\">                &lt;property name&#x3D;&quot;password&quot; value&#x3D;&quot;1234&quot;&#x2F;&gt;</span><br><span class=\"line\">            &lt;&#x2F;dataSource&gt;</span><br><span class=\"line\">        &lt;&#x2F;environment&gt;</span><br><span class=\"line\">    &lt;&#x2F;environments&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;!-- 指定映射配置文件的位置，映射配置文件指的是每个dao独立的配置文件 --&gt;</span><br><span class=\"line\">    &lt;mappers&gt;</span><br><span class=\"line\">        &lt;mapper resource&#x3D;&quot;com&#x2F;itheima&#x2F;dao&#x2F;IUserDao.xml&quot;&#x2F;&gt;</span><br><span class=\"line\">    &lt;&#x2F;mappers&gt;</span><br><span class=\"line\">&lt;&#x2F;configuration&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-创建数据库表对应的实体\"><a href=\"#3-创建数据库表对应的实体\" class=\"headerlink\" title=\"3 创建数据库表对应的实体\"></a>3 创建数据库表对应的实体</h3><h3 id=\"4-创建SqlMapConfig-xml对应的映射文件\"><a href=\"#4-创建SqlMapConfig-xml对应的映射文件\" class=\"headerlink\" title=\"4 创建SqlMapConfig.xml对应的映射文件\"></a>4 创建SqlMapConfig.xml对应的映射文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class=\"line\">        &lt;!DOCTYPE mapper</span><br><span class=\"line\">                PUBLIC &quot;-&#x2F;&#x2F;mybatis.org&#x2F;&#x2F;DTD Mapper 3.0&#x2F;&#x2F;EN&quot;</span><br><span class=\"line\">                &quot;http:&#x2F;&#x2F;mybatis.org&#x2F;dtd&#x2F;mybatis-3-mapper.dtd&quot;&gt;</span><br><span class=\"line\">                &lt;!--****是对应的dao层接口--&gt;</span><br><span class=\"line\">&lt;mapper namespace&#x3D;&quot;****&quot;&gt;</span><br><span class=\"line\">&lt;!--这里写自己的动态sql--&gt;</span><br><span class=\"line\">.......</span><br><span class=\"line\">&lt;&#x2F;mapper&gt;</span><br></pre></td></tr></table></figure>\n<h5 id=\"5-写好自己的dao层接口，以及运行，读取SqlMapConfig-xml\"><a href=\"#5-写好自己的dao层接口，以及运行，读取SqlMapConfig-xml\" class=\"headerlink\" title=\"5 写好自己的dao层接口，以及运行，读取SqlMapConfig.xml\"></a>5 写好自己的dao层接口，以及运行，读取SqlMapConfig.xml</h5>"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n<!--more-->\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n<!--more-->\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2020-06-06T10:07:59.311Z","updated":"2020-06-06T10:07:59.311Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckbad3e3u000crsqab5gwgxer","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<a id=\"more\"></a>\n\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>","more":"<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>"},{"title":"mybatis表间关系，多表联查如何定义实体和返回类型","date":"2019-12-17T15:40:21.000Z","_content":"\n mybatis表间关系，多表联查如何定义实体和返回类型\n\n<!--more-->\n\n### 1，一对一关系在实体加入关联实体属性(Entity1 和Entity2一对一,通过field关联)\n\n```\npublic class Entity1 implements Serializable {\nprivate Integer id;\nprivate String field;\nprivate String field1;\nprivate Entity2 entity2;\n(getter,setter,toString方法)\n...\n}\npublic class Entity2 implements Serializable {\nprivate Integer id;\nprivate String field;\nprivate String field2;\nprivate Entity2 entity1;\n(getter,setter,toString方法)\n...\n}\n```\n Entity1对应的mapper中加入相应的resultMap\n\n```\n    <resultMap id=\"entity1Entity2Map\" type=\"Entity1 \">\n        <id property=\"id\" column=\"aid\"></id>\n        <result property=\"field\" column=\"field\"></result>\n        <result property=\"field1\" column=\"field1\"></result>\n        <!-- 一对一的关系映射：配置封装Entity2的内容-->\n        <association property=\"field\" column=\"field\" javaType=\"Entity2\">\n            <id property=\"id\" column=\"id\"></id>\n            <result column=\"field\" property=\"field\"></result>\n            <result column=\"field2\" property=\"field2\"></result>\n        </association>\n    </resultMap>\n```\n2，一对多关系在实体加入关联实体属性(Entity3 和Entity4一对多,通过field关联)\n```\npublic class Entity3 implements Serializable {\nprivate Integer id;\nprivate String field;\nprivate String field3;\nprivate List<Entity4> entity4;\n(getter,setter,toString方法)\n...\n}\npublic class Entity2 implements Serializable {\nprivate Integer id;\nprivate String field;\nprivate String field4;\nprivate Entity2 entity3;\n(getter,setter,toString方法)\n...\n}\n```\n Entity3对应的mapper中加入相应的resultMap\n\n```\n    <resultMap id=\"entity3Entity4Map\" type=\"Entity3 \">\n        <id property=\"id\" column=\"aid\"></id>\n        <result property=\"field\" column=\"field\"></result>\n        <result property=\"field3\" column=\"field3\"></result>\n        <!-- 配置Entity3对象中Entity4集合的映射 -->\n        <collection property=\"Entity4\" ofType=\"Entity4\">\n            <id column=\"id\" property=\"id\"></id>\n            <result column=\"field\" property=\"field\"></result>\n            <result column=\"field4\" property=\"field4\"></result>\n        </collection>\n    </resultMap>\n```\n### 3，多对多关系\n多对多关系就类似了，实体（Entity5，Entity6关联）中都是加对方的List<T>\nReultMap关对方联集合的映射","source":"_posts/mybatis表间关系，多表联查如何定义实体和返回类型.md","raw":"---\ntitle: mybatis表间关系，多表联查如何定义实体和返回类型\ndate: 2019-12-17 23:40:21\ncategories: mybatis\ntags: mybatis\n---\n\n mybatis表间关系，多表联查如何定义实体和返回类型\n\n<!--more-->\n\n### 1，一对一关系在实体加入关联实体属性(Entity1 和Entity2一对一,通过field关联)\n\n```\npublic class Entity1 implements Serializable {\nprivate Integer id;\nprivate String field;\nprivate String field1;\nprivate Entity2 entity2;\n(getter,setter,toString方法)\n...\n}\npublic class Entity2 implements Serializable {\nprivate Integer id;\nprivate String field;\nprivate String field2;\nprivate Entity2 entity1;\n(getter,setter,toString方法)\n...\n}\n```\n Entity1对应的mapper中加入相应的resultMap\n\n```\n    <resultMap id=\"entity1Entity2Map\" type=\"Entity1 \">\n        <id property=\"id\" column=\"aid\"></id>\n        <result property=\"field\" column=\"field\"></result>\n        <result property=\"field1\" column=\"field1\"></result>\n        <!-- 一对一的关系映射：配置封装Entity2的内容-->\n        <association property=\"field\" column=\"field\" javaType=\"Entity2\">\n            <id property=\"id\" column=\"id\"></id>\n            <result column=\"field\" property=\"field\"></result>\n            <result column=\"field2\" property=\"field2\"></result>\n        </association>\n    </resultMap>\n```\n2，一对多关系在实体加入关联实体属性(Entity3 和Entity4一对多,通过field关联)\n```\npublic class Entity3 implements Serializable {\nprivate Integer id;\nprivate String field;\nprivate String field3;\nprivate List<Entity4> entity4;\n(getter,setter,toString方法)\n...\n}\npublic class Entity2 implements Serializable {\nprivate Integer id;\nprivate String field;\nprivate String field4;\nprivate Entity2 entity3;\n(getter,setter,toString方法)\n...\n}\n```\n Entity3对应的mapper中加入相应的resultMap\n\n```\n    <resultMap id=\"entity3Entity4Map\" type=\"Entity3 \">\n        <id property=\"id\" column=\"aid\"></id>\n        <result property=\"field\" column=\"field\"></result>\n        <result property=\"field3\" column=\"field3\"></result>\n        <!-- 配置Entity3对象中Entity4集合的映射 -->\n        <collection property=\"Entity4\" ofType=\"Entity4\">\n            <id column=\"id\" property=\"id\"></id>\n            <result column=\"field\" property=\"field\"></result>\n            <result column=\"field4\" property=\"field4\"></result>\n        </collection>\n    </resultMap>\n```\n### 3，多对多关系\n多对多关系就类似了，实体（Entity5，Entity6关联）中都是加对方的List<T>\nReultMap关对方联集合的映射","slug":"mybatis表间关系，多表联查如何定义实体和返回类型","published":1,"updated":"2020-06-11T02:42:40.573Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckbad3e3v000hrsqa8lf39lbh","content":"<p> mybatis表间关系，多表联查如何定义实体和返回类型</p>\n<a id=\"more\"></a>\n\n<h3 id=\"1，一对一关系在实体加入关联实体属性-Entity1-和Entity2一对一-通过field关联\"><a href=\"#1，一对一关系在实体加入关联实体属性-Entity1-和Entity2一对一-通过field关联\" class=\"headerlink\" title=\"1，一对一关系在实体加入关联实体属性(Entity1 和Entity2一对一,通过field关联)\"></a>1，一对一关系在实体加入关联实体属性(Entity1 和Entity2一对一,通过field关联)</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class Entity1 implements Serializable &#123;</span><br><span class=\"line\">private Integer id;</span><br><span class=\"line\">private String field;</span><br><span class=\"line\">private String field1;</span><br><span class=\"line\">private Entity2 entity2;</span><br><span class=\"line\">(getter,setter,toString方法)</span><br><span class=\"line\">...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">public class Entity2 implements Serializable &#123;</span><br><span class=\"line\">private Integer id;</span><br><span class=\"line\">private String field;</span><br><span class=\"line\">private String field2;</span><br><span class=\"line\">private Entity2 entity1;</span><br><span class=\"line\">(getter,setter,toString方法)</span><br><span class=\"line\">...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p> Entity1对应的mapper中加入相应的resultMap</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;resultMap id&#x3D;&quot;entity1Entity2Map&quot; type&#x3D;&quot;Entity1 &quot;&gt;</span><br><span class=\"line\">    &lt;id property&#x3D;&quot;id&quot; column&#x3D;&quot;aid&quot;&gt;&lt;&#x2F;id&gt;</span><br><span class=\"line\">    &lt;result property&#x3D;&quot;field&quot; column&#x3D;&quot;field&quot;&gt;&lt;&#x2F;result&gt;</span><br><span class=\"line\">    &lt;result property&#x3D;&quot;field1&quot; column&#x3D;&quot;field1&quot;&gt;&lt;&#x2F;result&gt;</span><br><span class=\"line\">    &lt;!-- 一对一的关系映射：配置封装Entity2的内容--&gt;</span><br><span class=\"line\">    &lt;association property&#x3D;&quot;field&quot; column&#x3D;&quot;field&quot; javaType&#x3D;&quot;Entity2&quot;&gt;</span><br><span class=\"line\">        &lt;id property&#x3D;&quot;id&quot; column&#x3D;&quot;id&quot;&gt;&lt;&#x2F;id&gt;</span><br><span class=\"line\">        &lt;result column&#x3D;&quot;field&quot; property&#x3D;&quot;field&quot;&gt;&lt;&#x2F;result&gt;</span><br><span class=\"line\">        &lt;result column&#x3D;&quot;field2&quot; property&#x3D;&quot;field2&quot;&gt;&lt;&#x2F;result&gt;</span><br><span class=\"line\">    &lt;&#x2F;association&gt;</span><br><span class=\"line\">&lt;&#x2F;resultMap&gt;</span><br></pre></td></tr></table></figure>\n<p>2，一对多关系在实体加入关联实体属性(Entity3 和Entity4一对多,通过field关联)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class Entity3 implements Serializable &#123;</span><br><span class=\"line\">private Integer id;</span><br><span class=\"line\">private String field;</span><br><span class=\"line\">private String field3;</span><br><span class=\"line\">private List&lt;Entity4&gt; entity4;</span><br><span class=\"line\">(getter,setter,toString方法)</span><br><span class=\"line\">...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">public class Entity2 implements Serializable &#123;</span><br><span class=\"line\">private Integer id;</span><br><span class=\"line\">private String field;</span><br><span class=\"line\">private String field4;</span><br><span class=\"line\">private Entity2 entity3;</span><br><span class=\"line\">(getter,setter,toString方法)</span><br><span class=\"line\">...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p> Entity3对应的mapper中加入相应的resultMap</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;resultMap id&#x3D;&quot;entity3Entity4Map&quot; type&#x3D;&quot;Entity3 &quot;&gt;</span><br><span class=\"line\">    &lt;id property&#x3D;&quot;id&quot; column&#x3D;&quot;aid&quot;&gt;&lt;&#x2F;id&gt;</span><br><span class=\"line\">    &lt;result property&#x3D;&quot;field&quot; column&#x3D;&quot;field&quot;&gt;&lt;&#x2F;result&gt;</span><br><span class=\"line\">    &lt;result property&#x3D;&quot;field3&quot; column&#x3D;&quot;field3&quot;&gt;&lt;&#x2F;result&gt;</span><br><span class=\"line\">    &lt;!-- 配置Entity3对象中Entity4集合的映射 --&gt;</span><br><span class=\"line\">    &lt;collection property&#x3D;&quot;Entity4&quot; ofType&#x3D;&quot;Entity4&quot;&gt;</span><br><span class=\"line\">        &lt;id column&#x3D;&quot;id&quot; property&#x3D;&quot;id&quot;&gt;&lt;&#x2F;id&gt;</span><br><span class=\"line\">        &lt;result column&#x3D;&quot;field&quot; property&#x3D;&quot;field&quot;&gt;&lt;&#x2F;result&gt;</span><br><span class=\"line\">        &lt;result column&#x3D;&quot;field4&quot; property&#x3D;&quot;field4&quot;&gt;&lt;&#x2F;result&gt;</span><br><span class=\"line\">    &lt;&#x2F;collection&gt;</span><br><span class=\"line\">&lt;&#x2F;resultMap&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3，多对多关系\"><a href=\"#3，多对多关系\" class=\"headerlink\" title=\"3，多对多关系\"></a>3，多对多关系</h3><p>多对多关系就类似了，实体（Entity5，Entity6关联）中都是加对方的List<T><br>ReultMap关对方联集合的映射</p>\n","site":{"data":{}},"excerpt":"<p> mybatis表间关系，多表联查如何定义实体和返回类型</p>","more":"<h3 id=\"1，一对一关系在实体加入关联实体属性-Entity1-和Entity2一对一-通过field关联\"><a href=\"#1，一对一关系在实体加入关联实体属性-Entity1-和Entity2一对一-通过field关联\" class=\"headerlink\" title=\"1，一对一关系在实体加入关联实体属性(Entity1 和Entity2一对一,通过field关联)\"></a>1，一对一关系在实体加入关联实体属性(Entity1 和Entity2一对一,通过field关联)</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class Entity1 implements Serializable &#123;</span><br><span class=\"line\">private Integer id;</span><br><span class=\"line\">private String field;</span><br><span class=\"line\">private String field1;</span><br><span class=\"line\">private Entity2 entity2;</span><br><span class=\"line\">(getter,setter,toString方法)</span><br><span class=\"line\">...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">public class Entity2 implements Serializable &#123;</span><br><span class=\"line\">private Integer id;</span><br><span class=\"line\">private String field;</span><br><span class=\"line\">private String field2;</span><br><span class=\"line\">private Entity2 entity1;</span><br><span class=\"line\">(getter,setter,toString方法)</span><br><span class=\"line\">...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p> Entity1对应的mapper中加入相应的resultMap</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;resultMap id&#x3D;&quot;entity1Entity2Map&quot; type&#x3D;&quot;Entity1 &quot;&gt;</span><br><span class=\"line\">    &lt;id property&#x3D;&quot;id&quot; column&#x3D;&quot;aid&quot;&gt;&lt;&#x2F;id&gt;</span><br><span class=\"line\">    &lt;result property&#x3D;&quot;field&quot; column&#x3D;&quot;field&quot;&gt;&lt;&#x2F;result&gt;</span><br><span class=\"line\">    &lt;result property&#x3D;&quot;field1&quot; column&#x3D;&quot;field1&quot;&gt;&lt;&#x2F;result&gt;</span><br><span class=\"line\">    &lt;!-- 一对一的关系映射：配置封装Entity2的内容--&gt;</span><br><span class=\"line\">    &lt;association property&#x3D;&quot;field&quot; column&#x3D;&quot;field&quot; javaType&#x3D;&quot;Entity2&quot;&gt;</span><br><span class=\"line\">        &lt;id property&#x3D;&quot;id&quot; column&#x3D;&quot;id&quot;&gt;&lt;&#x2F;id&gt;</span><br><span class=\"line\">        &lt;result column&#x3D;&quot;field&quot; property&#x3D;&quot;field&quot;&gt;&lt;&#x2F;result&gt;</span><br><span class=\"line\">        &lt;result column&#x3D;&quot;field2&quot; property&#x3D;&quot;field2&quot;&gt;&lt;&#x2F;result&gt;</span><br><span class=\"line\">    &lt;&#x2F;association&gt;</span><br><span class=\"line\">&lt;&#x2F;resultMap&gt;</span><br></pre></td></tr></table></figure>\n<p>2，一对多关系在实体加入关联实体属性(Entity3 和Entity4一对多,通过field关联)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class Entity3 implements Serializable &#123;</span><br><span class=\"line\">private Integer id;</span><br><span class=\"line\">private String field;</span><br><span class=\"line\">private String field3;</span><br><span class=\"line\">private List&lt;Entity4&gt; entity4;</span><br><span class=\"line\">(getter,setter,toString方法)</span><br><span class=\"line\">...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">public class Entity2 implements Serializable &#123;</span><br><span class=\"line\">private Integer id;</span><br><span class=\"line\">private String field;</span><br><span class=\"line\">private String field4;</span><br><span class=\"line\">private Entity2 entity3;</span><br><span class=\"line\">(getter,setter,toString方法)</span><br><span class=\"line\">...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p> Entity3对应的mapper中加入相应的resultMap</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;resultMap id&#x3D;&quot;entity3Entity4Map&quot; type&#x3D;&quot;Entity3 &quot;&gt;</span><br><span class=\"line\">    &lt;id property&#x3D;&quot;id&quot; column&#x3D;&quot;aid&quot;&gt;&lt;&#x2F;id&gt;</span><br><span class=\"line\">    &lt;result property&#x3D;&quot;field&quot; column&#x3D;&quot;field&quot;&gt;&lt;&#x2F;result&gt;</span><br><span class=\"line\">    &lt;result property&#x3D;&quot;field3&quot; column&#x3D;&quot;field3&quot;&gt;&lt;&#x2F;result&gt;</span><br><span class=\"line\">    &lt;!-- 配置Entity3对象中Entity4集合的映射 --&gt;</span><br><span class=\"line\">    &lt;collection property&#x3D;&quot;Entity4&quot; ofType&#x3D;&quot;Entity4&quot;&gt;</span><br><span class=\"line\">        &lt;id column&#x3D;&quot;id&quot; property&#x3D;&quot;id&quot;&gt;&lt;&#x2F;id&gt;</span><br><span class=\"line\">        &lt;result column&#x3D;&quot;field&quot; property&#x3D;&quot;field&quot;&gt;&lt;&#x2F;result&gt;</span><br><span class=\"line\">        &lt;result column&#x3D;&quot;field4&quot; property&#x3D;&quot;field4&quot;&gt;&lt;&#x2F;result&gt;</span><br><span class=\"line\">    &lt;&#x2F;collection&gt;</span><br><span class=\"line\">&lt;&#x2F;resultMap&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3，多对多关系\"><a href=\"#3，多对多关系\" class=\"headerlink\" title=\"3，多对多关系\"></a>3，多对多关系</h3><p>多对多关系就类似了，实体（Entity5，Entity6关联）中都是加对方的List<T><br>ReultMap关对方联集合的映射</p>"},{"title":"mybatis连接池的3种配置方式","date":"2019-12-11T14:40:49.000Z","_content":"\n mybatis连接池的3种配置方式:1,POOLED; 2,UNPOOLED 3,JNDI\n\n<!--more-->\n\n#### 1,POOLED\n采用传统的javax. sql. DataSource规范中的连接池.一旦数据库操作完成，mybaties会将此连接返回给连接池。mybatis有实现规范。\nSqlMapConfig.xml中的配置：\n\n```\n  <dataSource type=\"POOLED\">\n                <property name=\"driver\" value=\"\"></property>\n                <property name=\"url\" value=\"\"></property>\n                <property name=\"username\" value=\"\"></property>\n                <property name=\"password\" value=\"\"></property>\n            </dataSource>\n```\n\n#### 2,UNPOOLED\n采用传统的获取连接的方式，同样实现Javax. sql. DataSourcel，不过没有使用池的思想。也就是说mybaties会为每一个数据库操作创建一个新的连接，使用完就关闭它。\nSqlMapConfig.xml中的配置：\n\n```\n  <dataSource type=\"UNPOOLED\">\n                <property name=\"driver\" value=\"\"></property>\n                <property name=\"url\" value=\"\"></property>\n                <property name=\"username\" value=\"\"></property>\n                <property name=\"password\" value=\"\"></property>\n            </dataSource>\n```\n\n#### 3,JNDI\n\n  是SUN公司推出的一套规范，属于JavaEE技术之一。目的是模仿windows系统中的注册表。采用服务器提供的JNDI技术实现，来获取DataSource对 象，不同的服务器所能拿到DataSource是不一样。\n  mybaties会从在应用服务器向配置好的JNDI数据源DataSource获取数据库连接。一般在生产环境中使用。\n  SqlMapConfig.xml中的配置：\n\n```\n<environments default= \"mysql\">\n<environment id= \"mysql\">\n<transact ionManager type =”JDBC\">< / transact ionManager>\n<dataSource type= ”JNDI\" >\n< property name= ”data_ source\" value= \"java : comp/ env/ jdbc/数据库名\n</dataSource>\n< /environment>\n< / environments>\n```\n\n```\n \n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Context>\n\n<Resource \nname=\"jdbc/test\"                  数据源的名称\ntype=\"javax.sql.DataSource\"                   数据源类型\nauth=\"Container\"                        数据源提供者\nmaxActive=\"20\"                         最大活动数\nmaxWait=\"10000\"                            最大等待时间\nmaxIdle=\"5\"                               最大空闲数\nusername=\"root\"                            用户名\npassword=\"1234\"                            密码\ndriverClassName=\"com.mysql.jdbc.Driver\"          驱动类\nurl=\"jdbc:mysql://localhost:3306/eesy_mybatis\" 连接url字符串\n/>\n\n\n\n```\n在resouce的目录下：\n写一个配置文件：context.xml\n\n```\n<Resource \nname=\"jdbc/test\"\ntype=\"javax.sql.DataSource\"\nauth=\"Container\"\nmaxActive=\nmaxWait=\nmaxIdle=\nusername=\npassword=\ndriverClassName=\"com.mysql.jdbc.Driver\"\nurl=\n/>\n</Context>\n```","source":"_posts/mybatis连接池的3种配置方式.md","raw":"---\ntitle: mybatis连接池的3种配置方式\ndate: 2019-12-11 22:40:49 \ncategories: mybatis\ntags: mybatis\n---\n\n mybatis连接池的3种配置方式:1,POOLED; 2,UNPOOLED 3,JNDI\n\n<!--more-->\n\n#### 1,POOLED\n采用传统的javax. sql. DataSource规范中的连接池.一旦数据库操作完成，mybaties会将此连接返回给连接池。mybatis有实现规范。\nSqlMapConfig.xml中的配置：\n\n```\n  <dataSource type=\"POOLED\">\n                <property name=\"driver\" value=\"\"></property>\n                <property name=\"url\" value=\"\"></property>\n                <property name=\"username\" value=\"\"></property>\n                <property name=\"password\" value=\"\"></property>\n            </dataSource>\n```\n\n#### 2,UNPOOLED\n采用传统的获取连接的方式，同样实现Javax. sql. DataSourcel，不过没有使用池的思想。也就是说mybaties会为每一个数据库操作创建一个新的连接，使用完就关闭它。\nSqlMapConfig.xml中的配置：\n\n```\n  <dataSource type=\"UNPOOLED\">\n                <property name=\"driver\" value=\"\"></property>\n                <property name=\"url\" value=\"\"></property>\n                <property name=\"username\" value=\"\"></property>\n                <property name=\"password\" value=\"\"></property>\n            </dataSource>\n```\n\n#### 3,JNDI\n\n  是SUN公司推出的一套规范，属于JavaEE技术之一。目的是模仿windows系统中的注册表。采用服务器提供的JNDI技术实现，来获取DataSource对 象，不同的服务器所能拿到DataSource是不一样。\n  mybaties会从在应用服务器向配置好的JNDI数据源DataSource获取数据库连接。一般在生产环境中使用。\n  SqlMapConfig.xml中的配置：\n\n```\n<environments default= \"mysql\">\n<environment id= \"mysql\">\n<transact ionManager type =”JDBC\">< / transact ionManager>\n<dataSource type= ”JNDI\" >\n< property name= ”data_ source\" value= \"java : comp/ env/ jdbc/数据库名\n</dataSource>\n< /environment>\n< / environments>\n```\n\n```\n \n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Context>\n\n<Resource \nname=\"jdbc/test\"                  数据源的名称\ntype=\"javax.sql.DataSource\"                   数据源类型\nauth=\"Container\"                        数据源提供者\nmaxActive=\"20\"                         最大活动数\nmaxWait=\"10000\"                            最大等待时间\nmaxIdle=\"5\"                               最大空闲数\nusername=\"root\"                            用户名\npassword=\"1234\"                            密码\ndriverClassName=\"com.mysql.jdbc.Driver\"          驱动类\nurl=\"jdbc:mysql://localhost:3306/eesy_mybatis\" 连接url字符串\n/>\n\n\n\n```\n在resouce的目录下：\n写一个配置文件：context.xml\n\n```\n<Resource \nname=\"jdbc/test\"\ntype=\"javax.sql.DataSource\"\nauth=\"Container\"\nmaxActive=\nmaxWait=\nmaxIdle=\nusername=\npassword=\ndriverClassName=\"com.mysql.jdbc.Driver\"\nurl=\n/>\n</Context>\n```","slug":"mybatis连接池的3种配置方式","published":1,"updated":"2020-06-11T02:40:32.644Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckbad3e3y000jrsqahe48447f","content":"<p> mybatis连接池的3种配置方式:1,POOLED; 2,UNPOOLED 3,JNDI</p>\n<a id=\"more\"></a>\n\n<h4 id=\"1-POOLED\"><a href=\"#1-POOLED\" class=\"headerlink\" title=\"1,POOLED\"></a>1,POOLED</h4><p>采用传统的javax. sql. DataSource规范中的连接池.一旦数据库操作完成，mybaties会将此连接返回给连接池。mybatis有实现规范。<br>SqlMapConfig.xml中的配置：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dataSource type&#x3D;&quot;POOLED&quot;&gt;</span><br><span class=\"line\">              &lt;property name&#x3D;&quot;driver&quot; value&#x3D;&quot;&quot;&gt;&lt;&#x2F;property&gt;</span><br><span class=\"line\">              &lt;property name&#x3D;&quot;url&quot; value&#x3D;&quot;&quot;&gt;&lt;&#x2F;property&gt;</span><br><span class=\"line\">              &lt;property name&#x3D;&quot;username&quot; value&#x3D;&quot;&quot;&gt;&lt;&#x2F;property&gt;</span><br><span class=\"line\">              &lt;property name&#x3D;&quot;password&quot; value&#x3D;&quot;&quot;&gt;&lt;&#x2F;property&gt;</span><br><span class=\"line\">          &lt;&#x2F;dataSource&gt;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-UNPOOLED\"><a href=\"#2-UNPOOLED\" class=\"headerlink\" title=\"2,UNPOOLED\"></a>2,UNPOOLED</h4><p>采用传统的获取连接的方式，同样实现Javax. sql. DataSourcel，不过没有使用池的思想。也就是说mybaties会为每一个数据库操作创建一个新的连接，使用完就关闭它。<br>SqlMapConfig.xml中的配置：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dataSource type&#x3D;&quot;UNPOOLED&quot;&gt;</span><br><span class=\"line\">              &lt;property name&#x3D;&quot;driver&quot; value&#x3D;&quot;&quot;&gt;&lt;&#x2F;property&gt;</span><br><span class=\"line\">              &lt;property name&#x3D;&quot;url&quot; value&#x3D;&quot;&quot;&gt;&lt;&#x2F;property&gt;</span><br><span class=\"line\">              &lt;property name&#x3D;&quot;username&quot; value&#x3D;&quot;&quot;&gt;&lt;&#x2F;property&gt;</span><br><span class=\"line\">              &lt;property name&#x3D;&quot;password&quot; value&#x3D;&quot;&quot;&gt;&lt;&#x2F;property&gt;</span><br><span class=\"line\">          &lt;&#x2F;dataSource&gt;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-JNDI\"><a href=\"#3-JNDI\" class=\"headerlink\" title=\"3,JNDI\"></a>3,JNDI</h4><p>  是SUN公司推出的一套规范，属于JavaEE技术之一。目的是模仿windows系统中的注册表。采用服务器提供的JNDI技术实现，来获取DataSource对 象，不同的服务器所能拿到DataSource是不一样。<br>  mybaties会从在应用服务器向配置好的JNDI数据源DataSource获取数据库连接。一般在生产环境中使用。<br>  SqlMapConfig.xml中的配置：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;environments default&#x3D; &quot;mysql&quot;&gt;</span><br><span class=\"line\">&lt;environment id&#x3D; &quot;mysql&quot;&gt;</span><br><span class=\"line\">&lt;transact ionManager type &#x3D;”JDBC&quot;&gt;&lt; &#x2F; transact ionManager&gt;</span><br><span class=\"line\">&lt;dataSource type&#x3D; ”JNDI&quot; &gt;</span><br><span class=\"line\">&lt; property name&#x3D; ”data_ source&quot; value&#x3D; &quot;java : comp&#x2F; env&#x2F; jdbc&#x2F;数据库名</span><br><span class=\"line\">&lt;&#x2F;dataSource&gt;</span><br><span class=\"line\">&lt; &#x2F;environment&gt;</span><br><span class=\"line\">&lt; &#x2F; environments&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> </span><br><span class=\"line\">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class=\"line\">&lt;Context&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;Resource </span><br><span class=\"line\">name&#x3D;&quot;jdbc&#x2F;test&quot;                  数据源的名称</span><br><span class=\"line\">type&#x3D;&quot;javax.sql.DataSource&quot;                   数据源类型</span><br><span class=\"line\">auth&#x3D;&quot;Container&quot;                        数据源提供者</span><br><span class=\"line\">maxActive&#x3D;&quot;20&quot;                         最大活动数</span><br><span class=\"line\">maxWait&#x3D;&quot;10000&quot;                            最大等待时间</span><br><span class=\"line\">maxIdle&#x3D;&quot;5&quot;                               最大空闲数</span><br><span class=\"line\">username&#x3D;&quot;root&quot;                            用户名</span><br><span class=\"line\">password&#x3D;&quot;1234&quot;                            密码</span><br><span class=\"line\">driverClassName&#x3D;&quot;com.mysql.jdbc.Driver&quot;          驱动类</span><br><span class=\"line\">url&#x3D;&quot;jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;eesy_mybatis&quot; 连接url字符串</span><br><span class=\"line\">&#x2F;&gt;</span><br></pre></td></tr></table></figure>\n<p>在resouce的目录下：<br>写一个配置文件：context.xml</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;Resource </span><br><span class=\"line\">name&#x3D;&quot;jdbc&#x2F;test&quot;</span><br><span class=\"line\">type&#x3D;&quot;javax.sql.DataSource&quot;</span><br><span class=\"line\">auth&#x3D;&quot;Container&quot;</span><br><span class=\"line\">maxActive&#x3D;</span><br><span class=\"line\">maxWait&#x3D;</span><br><span class=\"line\">maxIdle&#x3D;</span><br><span class=\"line\">username&#x3D;</span><br><span class=\"line\">password&#x3D;</span><br><span class=\"line\">driverClassName&#x3D;&quot;com.mysql.jdbc.Driver&quot;</span><br><span class=\"line\">url&#x3D;</span><br><span class=\"line\">&#x2F;&gt;</span><br><span class=\"line\">&lt;&#x2F;Context&gt;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p> mybatis连接池的3种配置方式:1,POOLED; 2,UNPOOLED 3,JNDI</p>","more":"<h4 id=\"1-POOLED\"><a href=\"#1-POOLED\" class=\"headerlink\" title=\"1,POOLED\"></a>1,POOLED</h4><p>采用传统的javax. sql. DataSource规范中的连接池.一旦数据库操作完成，mybaties会将此连接返回给连接池。mybatis有实现规范。<br>SqlMapConfig.xml中的配置：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dataSource type&#x3D;&quot;POOLED&quot;&gt;</span><br><span class=\"line\">              &lt;property name&#x3D;&quot;driver&quot; value&#x3D;&quot;&quot;&gt;&lt;&#x2F;property&gt;</span><br><span class=\"line\">              &lt;property name&#x3D;&quot;url&quot; value&#x3D;&quot;&quot;&gt;&lt;&#x2F;property&gt;</span><br><span class=\"line\">              &lt;property name&#x3D;&quot;username&quot; value&#x3D;&quot;&quot;&gt;&lt;&#x2F;property&gt;</span><br><span class=\"line\">              &lt;property name&#x3D;&quot;password&quot; value&#x3D;&quot;&quot;&gt;&lt;&#x2F;property&gt;</span><br><span class=\"line\">          &lt;&#x2F;dataSource&gt;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-UNPOOLED\"><a href=\"#2-UNPOOLED\" class=\"headerlink\" title=\"2,UNPOOLED\"></a>2,UNPOOLED</h4><p>采用传统的获取连接的方式，同样实现Javax. sql. DataSourcel，不过没有使用池的思想。也就是说mybaties会为每一个数据库操作创建一个新的连接，使用完就关闭它。<br>SqlMapConfig.xml中的配置：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dataSource type&#x3D;&quot;UNPOOLED&quot;&gt;</span><br><span class=\"line\">              &lt;property name&#x3D;&quot;driver&quot; value&#x3D;&quot;&quot;&gt;&lt;&#x2F;property&gt;</span><br><span class=\"line\">              &lt;property name&#x3D;&quot;url&quot; value&#x3D;&quot;&quot;&gt;&lt;&#x2F;property&gt;</span><br><span class=\"line\">              &lt;property name&#x3D;&quot;username&quot; value&#x3D;&quot;&quot;&gt;&lt;&#x2F;property&gt;</span><br><span class=\"line\">              &lt;property name&#x3D;&quot;password&quot; value&#x3D;&quot;&quot;&gt;&lt;&#x2F;property&gt;</span><br><span class=\"line\">          &lt;&#x2F;dataSource&gt;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-JNDI\"><a href=\"#3-JNDI\" class=\"headerlink\" title=\"3,JNDI\"></a>3,JNDI</h4><p>  是SUN公司推出的一套规范，属于JavaEE技术之一。目的是模仿windows系统中的注册表。采用服务器提供的JNDI技术实现，来获取DataSource对 象，不同的服务器所能拿到DataSource是不一样。<br>  mybaties会从在应用服务器向配置好的JNDI数据源DataSource获取数据库连接。一般在生产环境中使用。<br>  SqlMapConfig.xml中的配置：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;environments default&#x3D; &quot;mysql&quot;&gt;</span><br><span class=\"line\">&lt;environment id&#x3D; &quot;mysql&quot;&gt;</span><br><span class=\"line\">&lt;transact ionManager type &#x3D;”JDBC&quot;&gt;&lt; &#x2F; transact ionManager&gt;</span><br><span class=\"line\">&lt;dataSource type&#x3D; ”JNDI&quot; &gt;</span><br><span class=\"line\">&lt; property name&#x3D; ”data_ source&quot; value&#x3D; &quot;java : comp&#x2F; env&#x2F; jdbc&#x2F;数据库名</span><br><span class=\"line\">&lt;&#x2F;dataSource&gt;</span><br><span class=\"line\">&lt; &#x2F;environment&gt;</span><br><span class=\"line\">&lt; &#x2F; environments&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> </span><br><span class=\"line\">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class=\"line\">&lt;Context&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;Resource </span><br><span class=\"line\">name&#x3D;&quot;jdbc&#x2F;test&quot;                  数据源的名称</span><br><span class=\"line\">type&#x3D;&quot;javax.sql.DataSource&quot;                   数据源类型</span><br><span class=\"line\">auth&#x3D;&quot;Container&quot;                        数据源提供者</span><br><span class=\"line\">maxActive&#x3D;&quot;20&quot;                         最大活动数</span><br><span class=\"line\">maxWait&#x3D;&quot;10000&quot;                            最大等待时间</span><br><span class=\"line\">maxIdle&#x3D;&quot;5&quot;                               最大空闲数</span><br><span class=\"line\">username&#x3D;&quot;root&quot;                            用户名</span><br><span class=\"line\">password&#x3D;&quot;1234&quot;                            密码</span><br><span class=\"line\">driverClassName&#x3D;&quot;com.mysql.jdbc.Driver&quot;          驱动类</span><br><span class=\"line\">url&#x3D;&quot;jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;eesy_mybatis&quot; 连接url字符串</span><br><span class=\"line\">&#x2F;&gt;</span><br></pre></td></tr></table></figure>\n<p>在resouce的目录下：<br>写一个配置文件：context.xml</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;Resource </span><br><span class=\"line\">name&#x3D;&quot;jdbc&#x2F;test&quot;</span><br><span class=\"line\">type&#x3D;&quot;javax.sql.DataSource&quot;</span><br><span class=\"line\">auth&#x3D;&quot;Container&quot;</span><br><span class=\"line\">maxActive&#x3D;</span><br><span class=\"line\">maxWait&#x3D;</span><br><span class=\"line\">maxIdle&#x3D;</span><br><span class=\"line\">username&#x3D;</span><br><span class=\"line\">password&#x3D;</span><br><span class=\"line\">driverClassName&#x3D;&quot;com.mysql.jdbc.Driver&quot;</span><br><span class=\"line\">url&#x3D;</span><br><span class=\"line\">&#x2F;&gt;</span><br><span class=\"line\">&lt;&#x2F;Context&gt;</span><br></pre></td></tr></table></figure>"},{"title":"org.xml.sax.SAXNotRecognizedException:Feature:http://apache.org/xml/features/val","date":"2020-05-15T14:12:39.000Z","_content":"\n导入一个web项目，跑起来的时候报”org.xml.sax.SAXNotRecognizedException:Feature:http://apache.org/xml/features/val”。原因：原项目用的是jdk1.7而现在用的是1.8.换成jdk1.7后成功运行","source":"_posts/org-xml-sax-SAXNotRecognizedException-Feature-http-apache-org-xml-features-val.md","raw":"---\ntitle: >-\n  org.xml.sax.SAXNotRecognizedException:Feature:http://apache.org/xml/features/val\ndate: 2020-05-15 22:12:39\ncategories: jdk\ntags: jdk\n---\n\n导入一个web项目，跑起来的时候报”org.xml.sax.SAXNotRecognizedException:Feature:http://apache.org/xml/features/val”。原因：原项目用的是jdk1.7而现在用的是1.8.换成jdk1.7后成功运行","slug":"org-xml-sax-SAXNotRecognizedException-Feature-http-apache-org-xml-features-val","published":1,"updated":"2020-06-11T03:15:49.722Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckbad3e40000orsqa67cnhyhr","content":"<p>导入一个web项目，跑起来的时候报”org.xml.sax.SAXNotRecognizedException:Feature:<a href=\"http://apache.org/xml/features/val”。原因：原项目用的是jdk1.7而现在用的是1.8.换成jdk1.7后成功运行\" target=\"_blank\" rel=\"noopener\">http://apache.org/xml/features/val”。原因：原项目用的是jdk1.7而现在用的是1.8.换成jdk1.7后成功运行</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>导入一个web项目，跑起来的时候报”org.xml.sax.SAXNotRecognizedException:Feature:<a href=\"http://apache.org/xml/features/val”。原因：原项目用的是jdk1.7而现在用的是1.8.换成jdk1.7后成功运行\" target=\"_blank\" rel=\"noopener\">http://apache.org/xml/features/val”。原因：原项目用的是jdk1.7而现在用的是1.8.换成jdk1.7后成功运行</a></p>\n"},{"title":" mysql联合主键","date":"2020-01-07T03:55:42.000Z","_content":"\n mysql联合主键\n\n<!--more-->\n\n把（列名1，列名2）设置联合主键。将其看成一个有序对。这个有序对不能重复！就是不能有两条记录列名1，列名2都是一样的。\n\n添加语法如下：\n\n```\n ALTER TABLE table_name ADD CONSTRAINT 别名 PRIMARY KEY(列名1，列名2)；\n```","source":"_posts/mysql联合主键.md","raw":"---\ntitle: ' mysql联合主键'\ndate: 2020-01-07 11:55:42 \ncategories: mysql\ntags: mysql\n---\n\n mysql联合主键\n\n<!--more-->\n\n把（列名1，列名2）设置联合主键。将其看成一个有序对。这个有序对不能重复！就是不能有两条记录列名1，列名2都是一样的。\n\n添加语法如下：\n\n```\n ALTER TABLE table_name ADD CONSTRAINT 别名 PRIMARY KEY(列名1，列名2)；\n```","slug":"mysql联合主键","published":1,"updated":"2020-06-11T02:44:25.347Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckbad3e41000rrsqa6xdaavk6","content":"<p> mysql联合主键</p>\n<a id=\"more\"></a>\n\n<p>把（列名1，列名2）设置联合主键。将其看成一个有序对。这个有序对不能重复！就是不能有两条记录列名1，列名2都是一样的。</p>\n<p>添加语法如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALTER TABLE table_name ADD CONSTRAINT 别名 PRIMARY KEY(列名1，列名2)；</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p> mysql联合主键</p>","more":"<p>把（列名1，列名2）设置联合主键。将其看成一个有序对。这个有序对不能重复！就是不能有两条记录列名1，列名2都是一样的。</p>\n<p>添加语法如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALTER TABLE table_name ADD CONSTRAINT 别名 PRIMARY KEY(列名1，列名2)；</span><br></pre></td></tr></table></figure>"},{"title":"sql获取当前插入表的id","date":"2019-12-05T14:39:55.000Z","_content":"\n sql获取当前插入表的id\n\n<!--more-->\n\nsql语句：\n\n```\nselect last_insert_id();\n```\n\n动态sql:\n\n```\n        <selectKey keyProperty=\"userId\" keyColumn=\"id\" resultType=\"int\" order=\"AFTER\">\n            select last_insert_id();\n        </selectKey>\n```","source":"_posts/sql获取当前插入表的id.md","raw":"---\ntitle: sql获取当前插入表的id\ndate: 2019-12-05 22:39:55 \ncategories: mysql\ntags: mysql\n---\n\n sql获取当前插入表的id\n\n<!--more-->\n\nsql语句：\n\n```\nselect last_insert_id();\n```\n\n动态sql:\n\n```\n        <selectKey keyProperty=\"userId\" keyColumn=\"id\" resultType=\"int\" order=\"AFTER\">\n            select last_insert_id();\n        </selectKey>\n```","slug":"sql获取当前插入表的id","published":1,"updated":"2020-06-11T02:36:15.044Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckbad3e43000wrsqady896l2v","content":"<p> sql获取当前插入表的id</p>\n<a id=\"more\"></a>\n\n<p>sql语句：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select last_insert_id();</span><br></pre></td></tr></table></figure>\n\n<p>动态sql:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;selectKey keyProperty&#x3D;&quot;userId&quot; keyColumn&#x3D;&quot;id&quot; resultType&#x3D;&quot;int&quot; order&#x3D;&quot;AFTER&quot;&gt;</span><br><span class=\"line\">    select last_insert_id();</span><br><span class=\"line\">&lt;&#x2F;selectKey&gt;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p> sql获取当前插入表的id</p>","more":"<p>sql语句：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select last_insert_id();</span><br></pre></td></tr></table></figure>\n\n<p>动态sql:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;selectKey keyProperty&#x3D;&quot;userId&quot; keyColumn&#x3D;&quot;id&quot; resultType&#x3D;&quot;int&quot; order&#x3D;&quot;AFTER&quot;&gt;</span><br><span class=\"line\">    select last_insert_id();</span><br><span class=\"line\">&lt;&#x2F;selectKey&gt;</span><br></pre></td></tr></table></figure>"},{"title":"mysql删除database报错ERROR 1010 (HY000): Error dropping database (can't rmdir './library', errno:","date":"2020-02-27T03:37:41.000Z","_content":"\n### 数据库删除报错：ERROR 1010 (HY000): Error dropping database (can't rmdir './library', errno:\n'./library'删除的数据库文件夹下面还有东西，需要手动删除。\n参考文章:[https://www.cnblogs.com/ivictor/p/5917370.html](https://www.cnblogs.com/ivictor/p/5917370.html).","source":"_posts/mysql删除database报错ERROR-1010-HY000-Error-dropping-database-can-t-rmdir-library-errno.md","raw":"---\ntitle: >-\n  mysql删除database报错ERROR 1010 (HY000): Error dropping database (can't rmdir\n  './library', errno:\ndate: 2020-02-27 11:37:41\ncategories: mysql\ntags: mysql\n---\n\n### 数据库删除报错：ERROR 1010 (HY000): Error dropping database (can't rmdir './library', errno:\n'./library'删除的数据库文件夹下面还有东西，需要手动删除。\n参考文章:[https://www.cnblogs.com/ivictor/p/5917370.html](https://www.cnblogs.com/ivictor/p/5917370.html).","slug":"mysql删除database报错ERROR-1010-HY000-Error-dropping-database-can-t-rmdir-library-errno","published":1,"updated":"2020-06-11T02:55:39.070Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckbad3e44000zrsqabc229i7u","content":"<h3 id=\"数据库删除报错：ERROR-1010-HY000-Error-dropping-database-can’t-rmdir-‘-library’-errno\"><a href=\"#数据库删除报错：ERROR-1010-HY000-Error-dropping-database-can’t-rmdir-‘-library’-errno\" class=\"headerlink\" title=\"数据库删除报错：ERROR 1010 (HY000): Error dropping database (can’t rmdir ‘./library’, errno:\"></a>数据库删除报错：ERROR 1010 (HY000): Error dropping database (can’t rmdir ‘./library’, errno:</h3><p>‘./library’删除的数据库文件夹下面还有东西，需要手动删除。<br>参考文章:<a href=\"https://www.cnblogs.com/ivictor/p/5917370.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/ivictor/p/5917370.html</a>.</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"数据库删除报错：ERROR-1010-HY000-Error-dropping-database-can’t-rmdir-‘-library’-errno\"><a href=\"#数据库删除报错：ERROR-1010-HY000-Error-dropping-database-can’t-rmdir-‘-library’-errno\" class=\"headerlink\" title=\"数据库删除报错：ERROR 1010 (HY000): Error dropping database (can’t rmdir ‘./library’, errno:\"></a>数据库删除报错：ERROR 1010 (HY000): Error dropping database (can’t rmdir ‘./library’, errno:</h3><p>‘./library’删除的数据库文件夹下面还有东西，需要手动删除。<br>参考文章:<a href=\"https://www.cnblogs.com/ivictor/p/5917370.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/ivictor/p/5917370.html</a>.</p>\n"},{"title":"swaggerv1接口文档UI界面的方法点不开，只能点统一展开，关闭","date":"2019-12-05T02:02:42.000Z","_content":"\n swagger接口文档UI界面的方法点不开，只能点统一展开，关闭\n解决方法：将@Api(value=\"\")注解里面的中文换成英文，成功点开每个方法\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20191205100059614.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODg0OTcy,size_16,color_FFFFFF,t_70)","source":"_posts/swagger接口文档UI界面的方法点不开，只能点统一展开，关闭.md","raw":"---\ntitle: swaggerv1接口文档UI界面的方法点不开，只能点统一展开，关闭\ndate: 2019-12-05 10:02:42 \ncategories: swagger\ntags: swagger\n---\n\n swagger接口文档UI界面的方法点不开，只能点统一展开，关闭\n解决方法：将@Api(value=\"\")注解里面的中文换成英文，成功点开每个方法\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20191205100059614.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODg0OTcy,size_16,color_FFFFFF,t_70)","slug":"swagger接口文档UI界面的方法点不开，只能点统一展开，关闭","published":1,"updated":"2020-06-11T02:34:29.396Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckbad3e460013rsqa43rwaffs","content":"<p> swagger接口文档UI界面的方法点不开，只能点统一展开，关闭<br>解决方法：将@Api(value=””)注解里面的中文换成英文，成功点开每个方法<br><img src=\"https://img-blog.csdnimg.cn/20191205100059614.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODg0OTcy,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p> swagger接口文档UI界面的方法点不开，只能点统一展开，关闭<br>解决方法：将@Api(value=””)注解里面的中文换成英文，成功点开每个方法<br><img src=\"https://img-blog.csdnimg.cn/20191205100059614.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODg0OTcy,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n"},{"title":"windows下升级node.js, 在cmd 运行n stable报错bash不是内部或外部命令，也不是可运行的程序 或批处理文件","date":"2020-01-08T02:31:27.000Z","_content":"\nwindows下升级node.js, 在cmd 运行n stable报错bash不是内部或外部命令，也不是可运行的程序 或批处理文件。\n\n<!--more-->\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200108102152449.png)\n在GitHub官网，搜索gnvm，下载\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200108102414994.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODg0OTcy,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200108102504659.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODg0OTcy,size_16,color_FFFFFF,t_70)\n放在node.js的安装目录下\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200108102646281.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODg0OTcy,size_16,color_FFFFFF,t_70)\n然后打开cmd命令行窗口，输入：gnvm update latest，等待更新。\n当然也可以直接覆盖.\n参考文章：\n[https://jingyan.baidu.com/album/9158e000fc556ea2541228e2.html?picindex=1](https://jingyan.baidu.com/album/9158e000fc556ea2541228e2.html?picindex=1).","source":"_posts/windows下升级node-js-在cmd-运行n-stable报错bash不是内部或外部命令，也不是可运行的程序-或批处理文件.md","raw":"---\ntitle: 'windows下升级node.js, 在cmd 运行n stable报错bash不是内部或外部命令，也不是可运行的程序 或批处理文件'\ndate: 2020-01-08 10:31:27 \ncategories: node\ntags: node\n---\n\nwindows下升级node.js, 在cmd 运行n stable报错bash不是内部或外部命令，也不是可运行的程序 或批处理文件。\n\n<!--more-->\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200108102152449.png)\n在GitHub官网，搜索gnvm，下载\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200108102414994.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODg0OTcy,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200108102504659.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODg0OTcy,size_16,color_FFFFFF,t_70)\n放在node.js的安装目录下\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200108102646281.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODg0OTcy,size_16,color_FFFFFF,t_70)\n然后打开cmd命令行窗口，输入：gnvm update latest，等待更新。\n当然也可以直接覆盖.\n参考文章：\n[https://jingyan.baidu.com/album/9158e000fc556ea2541228e2.html?picindex=1](https://jingyan.baidu.com/album/9158e000fc556ea2541228e2.html?picindex=1).","slug":"windows下升级node-js-在cmd-运行n-stable报错bash不是内部或外部命令，也不是可运行的程序-或批处理文件","published":1,"updated":"2020-06-11T02:49:40.030Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckbad3e470016rsqafjrx8q8l","content":"<p>windows下升级node.js, 在cmd 运行n stable报错bash不是内部或外部命令，也不是可运行的程序 或批处理文件。</p>\n<a id=\"more\"></a>\n\n<p><img src=\"https://img-blog.csdnimg.cn/20200108102152449.png\" alt=\"在这里插入图片描述\"><br>在GitHub官网，搜索gnvm，下载<br><img src=\"https://img-blog.csdnimg.cn/20200108102414994.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODg0OTcy,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200108102504659.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODg0OTcy,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>放在node.js的安装目录下</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200108102646281.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODg0OTcy,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>然后打开cmd命令行窗口，输入：gnvm update latest，等待更新。<br>当然也可以直接覆盖.<br>参考文章：<br><a href=\"https://jingyan.baidu.com/album/9158e000fc556ea2541228e2.html?picindex=1\" target=\"_blank\" rel=\"noopener\">https://jingyan.baidu.com/album/9158e000fc556ea2541228e2.html?picindex=1</a>.</p>\n","site":{"data":{}},"excerpt":"<p>windows下升级node.js, 在cmd 运行n stable报错bash不是内部或外部命令，也不是可运行的程序 或批处理文件。</p>","more":"<p><img src=\"https://img-blog.csdnimg.cn/20200108102152449.png\" alt=\"在这里插入图片描述\"><br>在GitHub官网，搜索gnvm，下载<br><img src=\"https://img-blog.csdnimg.cn/20200108102414994.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODg0OTcy,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200108102504659.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODg0OTcy,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>放在node.js的安装目录下</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200108102646281.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODg0OTcy,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>然后打开cmd命令行窗口，输入：gnvm update latest，等待更新。<br>当然也可以直接覆盖.<br>参考文章：<br><a href=\"https://jingyan.baidu.com/album/9158e000fc556ea2541228e2.html?picindex=1\" target=\"_blank\" rel=\"noopener\">https://jingyan.baidu.com/album/9158e000fc556ea2541228e2.html?picindex=1</a>.</p>"},{"title":"《thinking in java》读书笔记2：对象","date":"2019-12-04T13:05:30.000Z","_content":"\nBigInteger:支持任意精度的整数\nBigDecimal:支持任何精度的定点数\njava的作用域由{ }决定，\n\n<!--more-->\n\n#### java基本成员变量默认值\nboolean:false, char：'\\u0000'(null), byte:0, short: 0, int：0，long: 0L, float: 0.0f, double:0.0d\n#### javadoc\njavadoc 命令只能出现在\"/**\"注释中出现，主要有两种方式。\n1，文档标签,\n（1）独立文档标签：以\"@\"开头\n （2）行内文档标签：同样以\"@\"开头，但是要括在\"{}\"内。\n2，嵌入html\n如: \n\n```\n/**\n*<ol>\n*<li>item one\n*</ol>\n*/\n```","source":"_posts/《thinking-in-java》读书笔记2：对象.md","raw":"---\ntitle: 《thinking in java》读书笔记2：对象\ndate: 2019-12-04 21:05:30\ncategories:\n\t-读书笔记\n\t\t-thinKing injava\ntags: 笔记\n---\n\nBigInteger:支持任意精度的整数\nBigDecimal:支持任何精度的定点数\njava的作用域由{ }决定，\n\n<!--more-->\n\n#### java基本成员变量默认值\nboolean:false, char：'\\u0000'(null), byte:0, short: 0, int：0，long: 0L, float: 0.0f, double:0.0d\n#### javadoc\njavadoc 命令只能出现在\"/**\"注释中出现，主要有两种方式。\n1，文档标签,\n（1）独立文档标签：以\"@\"开头\n （2）行内文档标签：同样以\"@\"开头，但是要括在\"{}\"内。\n2，嵌入html\n如: \n\n```\n/**\n*<ol>\n*<li>item one\n*</ol>\n*/\n```","slug":"《thinking-in-java》读书笔记2：对象","published":1,"updated":"2020-06-11T02:31:10.575Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckbad3e48001arsqa9vz80j80","content":"<p>BigInteger:支持任意精度的整数<br>BigDecimal:支持任何精度的定点数<br>java的作用域由{ }决定，</p>\n<a id=\"more\"></a>\n\n<h4 id=\"java基本成员变量默认值\"><a href=\"#java基本成员变量默认值\" class=\"headerlink\" title=\"java基本成员变量默认值\"></a>java基本成员变量默认值</h4><p>boolean:false, char：’\\u0000’(null), byte:0, short: 0, int：0，long: 0L, float: 0.0f, double:0.0d</p>\n<h4 id=\"javadoc\"><a href=\"#javadoc\" class=\"headerlink\" title=\"javadoc\"></a>javadoc</h4><p>javadoc 命令只能出现在”/**”注释中出现，主要有两种方式。<br>1，文档标签,<br>（1）独立文档标签：以”@”开头<br> （2）行内文档标签：同样以”@”开头，但是要括在”{}”内。<br>2，嵌入html<br>如: </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;**</span><br><span class=\"line\">*&lt;ol&gt;</span><br><span class=\"line\">*&lt;li&gt;item one</span><br><span class=\"line\">*&lt;&#x2F;ol&gt;</span><br><span class=\"line\">*&#x2F;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>BigInteger:支持任意精度的整数<br>BigDecimal:支持任何精度的定点数<br>java的作用域由{ }决定，</p>","more":"<h4 id=\"java基本成员变量默认值\"><a href=\"#java基本成员变量默认值\" class=\"headerlink\" title=\"java基本成员变量默认值\"></a>java基本成员变量默认值</h4><p>boolean:false, char：’\\u0000’(null), byte:0, short: 0, int：0，long: 0L, float: 0.0f, double:0.0d</p>\n<h4 id=\"javadoc\"><a href=\"#javadoc\" class=\"headerlink\" title=\"javadoc\"></a>javadoc</h4><p>javadoc 命令只能出现在”/**”注释中出现，主要有两种方式。<br>1，文档标签,<br>（1）独立文档标签：以”@”开头<br> （2）行内文档标签：同样以”@”开头，但是要括在”{}”内。<br>2，嵌入html<br>如: </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;**</span><br><span class=\"line\">*&lt;ol&gt;</span><br><span class=\"line\">*&lt;li&gt;item one</span><br><span class=\"line\">*&lt;&#x2F;ol&gt;</span><br><span class=\"line\">*&#x2F;</span><br></pre></td></tr></table></figure>"},{"title":"《thinking in java》读书笔记","date":"2019-12-02T12:39:55.000Z","_content":"\n记录今天一些学习《JAVA编程思想》中读到的让我深思和值得记录的点\n\n<!--more-->\n\n 1，每个对象对可以很好的完成一项任务，但它并不试图做更多的事情\n 2，继承：is-a,接口：is-like-a\n 3，前期绑定：编译器对具体的函数调用\n      后期绑定：编译器不知道具体执行的代码。只确定被调用的方法存在，（y用一段特殊的代码代替具体方法的绝对地址调用）到执行时才确定。\n 4，参数化类型：<type>如：\n\n```\nArrayList<User> users=new ArrayList<User>;\n```\napplet:只在浏览器中运行的小程序。\nIntranet:企业内部网","source":"_posts/《thinking-in-java》读书笔记.md","raw":"---\ntitle: 《thinking in java》读书笔记\ndate: 2019-12-02 20:39:55 \ncategories: \n\t-读书笔记\n\t\t-thinKing injava\ntags: 笔记\n---\n\n记录今天一些学习《JAVA编程思想》中读到的让我深思和值得记录的点\n\n<!--more-->\n\n 1，每个对象对可以很好的完成一项任务，但它并不试图做更多的事情\n 2，继承：is-a,接口：is-like-a\n 3，前期绑定：编译器对具体的函数调用\n      后期绑定：编译器不知道具体执行的代码。只确定被调用的方法存在，（y用一段特殊的代码代替具体方法的绝对地址调用）到执行时才确定。\n 4，参数化类型：<type>如：\n\n```\nArrayList<User> users=new ArrayList<User>;\n```\napplet:只在浏览器中运行的小程序。\nIntranet:企业内部网","slug":"《thinking-in-java》读书笔记","published":1,"updated":"2020-06-11T02:19:39.389Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckbad3e49001crsqa05ejackh","content":"<p>记录今天一些学习《JAVA编程思想》中读到的让我深思和值得记录的点</p>\n<a id=\"more\"></a>\n\n<p> 1，每个对象对可以很好的完成一项任务，但它并不试图做更多的事情<br> 2，继承：is-a,接口：is-like-a<br> 3，前期绑定：编译器对具体的函数调用<br>      后期绑定：编译器不知道具体执行的代码。只确定被调用的方法存在，（y用一段特殊的代码代替具体方法的绝对地址调用）到执行时才确定。<br> 4，参数化类型：<type>如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ArrayList&lt;User&gt; users&#x3D;new ArrayList&lt;User&gt;;</span><br></pre></td></tr></table></figure>\n<p>applet:只在浏览器中运行的小程序。<br>Intranet:企业内部网</p>\n","site":{"data":{}},"excerpt":"<p>记录今天一些学习《JAVA编程思想》中读到的让我深思和值得记录的点</p>","more":"<p> 1，每个对象对可以很好的完成一项任务，但它并不试图做更多的事情<br> 2，继承：is-a,接口：is-like-a<br> 3，前期绑定：编译器对具体的函数调用<br>      后期绑定：编译器不知道具体执行的代码。只确定被调用的方法存在，（y用一段特殊的代码代替具体方法的绝对地址调用）到执行时才确定。<br> 4，参数化类型：<type>如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ArrayList&lt;User&gt; users&#x3D;new ArrayList&lt;User&gt;;</span><br></pre></td></tr></table></figure>\n<p>applet:只在浏览器中运行的小程序。<br>Intranet:企业内部网</p>"},{"title":"使用dhcp始终无法连接mysql的问题解决","date":"2019-11-21T08:22:03.000Z","_content":"\n把mysql的时区加8\n\n<!--more-->\n\n把mysql的时区加8\n\n```\n     set global time_zone = '+8:00';\n```\n\n参考链接：\n[https://blog.csdn.net/zqb765720343/article/details/80076020:](https://blog.csdn.net/zqb765720343/article/details/80076020)","source":"_posts/使用dhcp始终无法连接mysql的问题解决.md","raw":"---\ntitle: 使用dhcp始终无法连接mysql的问题解决\ndate: 2019-11-21 16:22:03\ncategories: mysql\ntags: mysql\n---\n\n把mysql的时区加8\n\n<!--more-->\n\n把mysql的时区加8\n\n```\n     set global time_zone = '+8:00';\n```\n\n参考链接：\n[https://blog.csdn.net/zqb765720343/article/details/80076020:](https://blog.csdn.net/zqb765720343/article/details/80076020)","slug":"使用dhcp始终无法连接mysql的问题解决","published":1,"updated":"2020-06-11T02:08:54.616Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckbad3e4a001ersqagyh5fzwc","content":"<p>把mysql的时区加8</p>\n<a id=\"more\"></a>\n\n<p>把mysql的时区加8</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set global time_zone &#x3D; &#39;+8:00&#39;;</span><br></pre></td></tr></table></figure>\n\n<p>参考链接：<br><a href=\"https://blog.csdn.net/zqb765720343/article/details/80076020\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/zqb765720343/article/details/80076020:</a></p>\n","site":{"data":{}},"excerpt":"<p>把mysql的时区加8</p>","more":"<p>把mysql的时区加8</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set global time_zone &#x3D; &#39;+8:00&#39;;</span><br></pre></td></tr></table></figure>\n\n<p>参考链接：<br><a href=\"https://blog.csdn.net/zqb765720343/article/details/80076020\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/zqb765720343/article/details/80076020:</a></p>"},{"title":"区分项目中的数据实体目录 entity，dto,vo","date":"2020-03-06T02:29:19.000Z","_content":"\n1、entity 里的每一个字段，与数据库相对应，\n2、vo 里的每一个字段，是和你前台 html 页面相对应，\n3、dto 这是用来转换从 entity 到 vo，或者从 vo 到 entity 的中间的东西 。（DTO中拥有的字段应该是entity中或者是vo中的一个子集）\n[参考文章：https://www.cnblogs.com/vegetableDD/p/11732495.html](https://www.cnblogs.com/vegetableDD/p/11732495.html)","source":"_posts/区分项目中的数据实体目录-entity，dto-vo.md","raw":"---\ntitle: '区分项目中的数据实体目录 entity，dto,vo'\ndate: 2020-03-06 10:29:19\ncategories: java规范\ntags: java规范\n---\n\n1、entity 里的每一个字段，与数据库相对应，\n2、vo 里的每一个字段，是和你前台 html 页面相对应，\n3、dto 这是用来转换从 entity 到 vo，或者从 vo 到 entity 的中间的东西 。（DTO中拥有的字段应该是entity中或者是vo中的一个子集）\n[参考文章：https://www.cnblogs.com/vegetableDD/p/11732495.html](https://www.cnblogs.com/vegetableDD/p/11732495.html)","slug":"区分项目中的数据实体目录-entity，dto-vo","published":1,"updated":"2020-06-11T02:59:07.612Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckbad3e4b001irsqacdb6bdk2","content":"<p>1、entity 里的每一个字段，与数据库相对应，<br>2、vo 里的每一个字段，是和你前台 html 页面相对应，<br>3、dto 这是用来转换从 entity 到 vo，或者从 vo 到 entity 的中间的东西 。（DTO中拥有的字段应该是entity中或者是vo中的一个子集）<br><a href=\"https://www.cnblogs.com/vegetableDD/p/11732495.html\" target=\"_blank\" rel=\"noopener\">参考文章：https://www.cnblogs.com/vegetableDD/p/11732495.html</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>1、entity 里的每一个字段，与数据库相对应，<br>2、vo 里的每一个字段，是和你前台 html 页面相对应，<br>3、dto 这是用来转换从 entity 到 vo，或者从 vo 到 entity 的中间的东西 。（DTO中拥有的字段应该是entity中或者是vo中的一个子集）<br><a href=\"https://www.cnblogs.com/vegetableDD/p/11732495.html\" target=\"_blank\" rel=\"noopener\">参考文章：https://www.cnblogs.com/vegetableDD/p/11732495.html</a></p>\n"},{"title":"在学Spring Aop 发现的注意点","date":"2019-11-18T13:16:33.000Z","_content":"\n## 基于xml\n有两种方式可以实现：1环绕通知; 2前置通知，后置通知，最终通知，异常通知\n\n<!--more-->\n\n### 1环绕通知\n配置环绕通知\n### 2前置通知，后置通知，最终通知，异常通知\n\n\n\n<!--配置aop-->\n    <aop:config>\n        <!--切入点表达式-->\n        <aop:pointcut id=\"pr\" expression=\"execution(作用范围)\"></aop:pointcut>\n        <aop:aspect id=\"txAdvice\" ref=\"txManager\">\n            <!--前置通知-->\n            <aop:before method=\"beginTransaction\" pointcut-ref=\"pr\"></aop:before>\n            <!--后置通知-->\n            <aop:after-returning method=\"commit\" pointcut-ref=\"pr\"></aop:after-returning>\n            <!--异常通知-->\n            <aop:after-throwing method=\"rollback\" pointcut-ref=\"pr\"></aop:after-throwing>\n            <!--最终通知-->\n            <aop:after method=\"release\" pointcut-ref=\"pr\"></aop:after>\n        </aop:aspect>\n\n    </aop:config>\n### 基于注解\n只能使用环绕通知\n如果使用前置通知，后置通知，最终通知，异常通知会因为执行顺序问题导致错误\n```\n @Around(\"pt1()\")\n    public Object aroundAdvice(ProceedingJoinPoint pjp){\n        Object rtValue = null;\n        try {\n            //1.获取参数\n            Object[] params = pjp.getParams();\n            //2.开启事务\n            this.beginTransaction();\n            //3.执行方法\n            rtValue = pjp.proceed(params);\n            //4.提交事务\n            this.commit();\n            //返回结果\n            return  rtValue;\n        }catch (Throwable e){\n            //5.回滚事务\n            this.rollback();\n            throw new RuntimeException(e);\n        }finally {\n            //6.释放资源\n            this.release();\n        }\n    }\n```","source":"_posts/在学Spring-Aop-发现的注意点.md","raw":"---\ntitle: 在学Spring Aop 发现的注意点\ndate: 2019-11-18 21:16:33 \ncategories: Spring\ntags: Spring\n---\n\n## 基于xml\n有两种方式可以实现：1环绕通知; 2前置通知，后置通知，最终通知，异常通知\n\n<!--more-->\n\n### 1环绕通知\n配置环绕通知\n### 2前置通知，后置通知，最终通知，异常通知\n\n\n\n<!--配置aop-->\n    <aop:config>\n        <!--切入点表达式-->\n        <aop:pointcut id=\"pr\" expression=\"execution(作用范围)\"></aop:pointcut>\n        <aop:aspect id=\"txAdvice\" ref=\"txManager\">\n            <!--前置通知-->\n            <aop:before method=\"beginTransaction\" pointcut-ref=\"pr\"></aop:before>\n            <!--后置通知-->\n            <aop:after-returning method=\"commit\" pointcut-ref=\"pr\"></aop:after-returning>\n            <!--异常通知-->\n            <aop:after-throwing method=\"rollback\" pointcut-ref=\"pr\"></aop:after-throwing>\n            <!--最终通知-->\n            <aop:after method=\"release\" pointcut-ref=\"pr\"></aop:after>\n        </aop:aspect>\n\n    </aop:config>\n### 基于注解\n只能使用环绕通知\n如果使用前置通知，后置通知，最终通知，异常通知会因为执行顺序问题导致错误\n```\n @Around(\"pt1()\")\n    public Object aroundAdvice(ProceedingJoinPoint pjp){\n        Object rtValue = null;\n        try {\n            //1.获取参数\n            Object[] params = pjp.getParams();\n            //2.开启事务\n            this.beginTransaction();\n            //3.执行方法\n            rtValue = pjp.proceed(params);\n            //4.提交事务\n            this.commit();\n            //返回结果\n            return  rtValue;\n        }catch (Throwable e){\n            //5.回滚事务\n            this.rollback();\n            throw new RuntimeException(e);\n        }finally {\n            //6.释放资源\n            this.release();\n        }\n    }\n```","slug":"在学Spring-Aop-发现的注意点","published":1,"updated":"2020-06-11T01:41:35.799Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckbad3e4d001krsqa4vspafjw","content":"<h2 id=\"基于xml\"><a href=\"#基于xml\" class=\"headerlink\" title=\"基于xml\"></a>基于xml</h2><p>有两种方式可以实现：1环绕通知; 2前置通知，后置通知，最终通知，异常通知</p>\n<a id=\"more\"></a>\n\n<h3 id=\"1环绕通知\"><a href=\"#1环绕通知\" class=\"headerlink\" title=\"1环绕通知\"></a>1环绕通知</h3><p>配置环绕通知</p>\n<h3 id=\"2前置通知，后置通知，最终通知，异常通知\"><a href=\"#2前置通知，后置通知，最终通知，异常通知\" class=\"headerlink\" title=\"2前置通知，后置通知，最终通知，异常通知\"></a>2前置通知，后置通知，最终通知，异常通知</h3><!--配置aop-->\n<pre><code>&lt;aop:config&gt;\n    &lt;!--切入点表达式--&gt;\n    &lt;aop:pointcut id=&quot;pr&quot; expression=&quot;execution(作用范围)&quot;&gt;&lt;/aop:pointcut&gt;\n    &lt;aop:aspect id=&quot;txAdvice&quot; ref=&quot;txManager&quot;&gt;\n        &lt;!--前置通知--&gt;\n        &lt;aop:before method=&quot;beginTransaction&quot; pointcut-ref=&quot;pr&quot;&gt;&lt;/aop:before&gt;\n        &lt;!--后置通知--&gt;\n        &lt;aop:after-returning method=&quot;commit&quot; pointcut-ref=&quot;pr&quot;&gt;&lt;/aop:after-returning&gt;\n        &lt;!--异常通知--&gt;\n        &lt;aop:after-throwing method=&quot;rollback&quot; pointcut-ref=&quot;pr&quot;&gt;&lt;/aop:after-throwing&gt;\n        &lt;!--最终通知--&gt;\n        &lt;aop:after method=&quot;release&quot; pointcut-ref=&quot;pr&quot;&gt;&lt;/aop:after&gt;\n    &lt;/aop:aspect&gt;\n\n&lt;/aop:config&gt;</code></pre><h3 id=\"基于注解\"><a href=\"#基于注解\" class=\"headerlink\" title=\"基于注解\"></a>基于注解</h3><p>只能使用环绕通知<br>如果使用前置通知，后置通知，最终通知，异常通知会因为执行顺序问题导致错误</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Around(&quot;pt1()&quot;)</span><br><span class=\"line\">   public Object aroundAdvice(ProceedingJoinPoint pjp)&#123;</span><br><span class=\"line\">       Object rtValue &#x3D; null;</span><br><span class=\"line\">       try &#123;</span><br><span class=\"line\">           &#x2F;&#x2F;1.获取参数</span><br><span class=\"line\">           Object[] params &#x3D; pjp.getParams();</span><br><span class=\"line\">           &#x2F;&#x2F;2.开启事务</span><br><span class=\"line\">           this.beginTransaction();</span><br><span class=\"line\">           &#x2F;&#x2F;3.执行方法</span><br><span class=\"line\">           rtValue &#x3D; pjp.proceed(params);</span><br><span class=\"line\">           &#x2F;&#x2F;4.提交事务</span><br><span class=\"line\">           this.commit();</span><br><span class=\"line\">           &#x2F;&#x2F;返回结果</span><br><span class=\"line\">           return  rtValue;</span><br><span class=\"line\">       &#125;catch (Throwable e)&#123;</span><br><span class=\"line\">           &#x2F;&#x2F;5.回滚事务</span><br><span class=\"line\">           this.rollback();</span><br><span class=\"line\">           throw new RuntimeException(e);</span><br><span class=\"line\">       &#125;finally &#123;</span><br><span class=\"line\">           &#x2F;&#x2F;6.释放资源</span><br><span class=\"line\">           this.release();</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h2 id=\"基于xml\"><a href=\"#基于xml\" class=\"headerlink\" title=\"基于xml\"></a>基于xml</h2><p>有两种方式可以实现：1环绕通知; 2前置通知，后置通知，最终通知，异常通知</p>","more":"<h3 id=\"1环绕通知\"><a href=\"#1环绕通知\" class=\"headerlink\" title=\"1环绕通知\"></a>1环绕通知</h3><p>配置环绕通知</p>\n<h3 id=\"2前置通知，后置通知，最终通知，异常通知\"><a href=\"#2前置通知，后置通知，最终通知，异常通知\" class=\"headerlink\" title=\"2前置通知，后置通知，最终通知，异常通知\"></a>2前置通知，后置通知，最终通知，异常通知</h3><!--配置aop-->\n<pre><code>&lt;aop:config&gt;\n    &lt;!--切入点表达式--&gt;\n    &lt;aop:pointcut id=&quot;pr&quot; expression=&quot;execution(作用范围)&quot;&gt;&lt;/aop:pointcut&gt;\n    &lt;aop:aspect id=&quot;txAdvice&quot; ref=&quot;txManager&quot;&gt;\n        &lt;!--前置通知--&gt;\n        &lt;aop:before method=&quot;beginTransaction&quot; pointcut-ref=&quot;pr&quot;&gt;&lt;/aop:before&gt;\n        &lt;!--后置通知--&gt;\n        &lt;aop:after-returning method=&quot;commit&quot; pointcut-ref=&quot;pr&quot;&gt;&lt;/aop:after-returning&gt;\n        &lt;!--异常通知--&gt;\n        &lt;aop:after-throwing method=&quot;rollback&quot; pointcut-ref=&quot;pr&quot;&gt;&lt;/aop:after-throwing&gt;\n        &lt;!--最终通知--&gt;\n        &lt;aop:after method=&quot;release&quot; pointcut-ref=&quot;pr&quot;&gt;&lt;/aop:after&gt;\n    &lt;/aop:aspect&gt;\n\n&lt;/aop:config&gt;</code></pre><h3 id=\"基于注解\"><a href=\"#基于注解\" class=\"headerlink\" title=\"基于注解\"></a>基于注解</h3><p>只能使用环绕通知<br>如果使用前置通知，后置通知，最终通知，异常通知会因为执行顺序问题导致错误</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Around(&quot;pt1()&quot;)</span><br><span class=\"line\">   public Object aroundAdvice(ProceedingJoinPoint pjp)&#123;</span><br><span class=\"line\">       Object rtValue &#x3D; null;</span><br><span class=\"line\">       try &#123;</span><br><span class=\"line\">           &#x2F;&#x2F;1.获取参数</span><br><span class=\"line\">           Object[] params &#x3D; pjp.getParams();</span><br><span class=\"line\">           &#x2F;&#x2F;2.开启事务</span><br><span class=\"line\">           this.beginTransaction();</span><br><span class=\"line\">           &#x2F;&#x2F;3.执行方法</span><br><span class=\"line\">           rtValue &#x3D; pjp.proceed(params);</span><br><span class=\"line\">           &#x2F;&#x2F;4.提交事务</span><br><span class=\"line\">           this.commit();</span><br><span class=\"line\">           &#x2F;&#x2F;返回结果</span><br><span class=\"line\">           return  rtValue;</span><br><span class=\"line\">       &#125;catch (Throwable e)&#123;</span><br><span class=\"line\">           &#x2F;&#x2F;5.回滚事务</span><br><span class=\"line\">           this.rollback();</span><br><span class=\"line\">           throw new RuntimeException(e);</span><br><span class=\"line\">       &#125;finally &#123;</span><br><span class=\"line\">           &#x2F;&#x2F;6.释放资源</span><br><span class=\"line\">           this.release();</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>"},{"title":"戴尔惠普华硕笔记本Fn键反了，按F1、F2等键出来Fn+F1、F2的效果","date":"2020-03-02T13:21:04.000Z","_content":"\n惠普笔记本，几天按f12调试的时候，笔记本直接睡眠了，试验了一番发现Fn键反了按F12等键出来Fn+F2的效果，按F1到F12等键出来Fn+F1到F12的效果。在网上寻找一番答案发现是是fn键被锁住了。\n找到键盘上的一个Fnlock（缩写FnLk）或Numlock键，然后按Fn+Fnlock/Numlock解锁\n[参考文章:\nhttps://jingyan.baidu.com/article/ff41162594df7f12e48237ee.html](https://jingyan.baidu.com/article/ff41162594df7f12e48237ee.html).","source":"_posts/戴尔惠普华硕笔记本Fn键反了，按F1、F2等键出来Fn-F1、F2的效果.md","raw":"---\ntitle: 戴尔惠普华硕笔记本Fn键反了，按F1、F2等键出来Fn+F1、F2的效果\ndate: 2020-03-02 21:21:04 \ncategories: \n\t- 电脑问题\n\t\t- 键盘\ntags: 键盘\n---\n\n惠普笔记本，几天按f12调试的时候，笔记本直接睡眠了，试验了一番发现Fn键反了按F12等键出来Fn+F2的效果，按F1到F12等键出来Fn+F1到F12的效果。在网上寻找一番答案发现是是fn键被锁住了。\n找到键盘上的一个Fnlock（缩写FnLk）或Numlock键，然后按Fn+Fnlock/Numlock解锁\n[参考文章:\nhttps://jingyan.baidu.com/article/ff41162594df7f12e48237ee.html](https://jingyan.baidu.com/article/ff41162594df7f12e48237ee.html).","slug":"戴尔惠普华硕笔记本Fn键反了，按F1、F2等键出来Fn-F1、F2的效果","published":1,"updated":"2020-06-11T03:13:24.883Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckbad3e4f001prsqa277k3emd","content":"<p>惠普笔记本，几天按f12调试的时候，笔记本直接睡眠了，试验了一番发现Fn键反了按F12等键出来Fn+F2的效果，按F1到F12等键出来Fn+F1到F12的效果。在网上寻找一番答案发现是是fn键被锁住了。<br>找到键盘上的一个Fnlock（缩写FnLk）或Numlock键，然后按Fn+Fnlock/Numlock解锁<br><a href=\"https://jingyan.baidu.com/article/ff41162594df7f12e48237ee.html\" target=\"_blank\" rel=\"noopener\">参考文章:<br>https://jingyan.baidu.com/article/ff41162594df7f12e48237ee.html</a>.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>惠普笔记本，几天按f12调试的时候，笔记本直接睡眠了，试验了一番发现Fn键反了按F12等键出来Fn+F2的效果，按F1到F12等键出来Fn+F1到F12的效果。在网上寻找一番答案发现是是fn键被锁住了。<br>找到键盘上的一个Fnlock（缩写FnLk）或Numlock键，然后按Fn+Fnlock/Numlock解锁<br><a href=\"https://jingyan.baidu.com/article/ff41162594df7f12e48237ee.html\" target=\"_blank\" rel=\"noopener\">参考文章:<br>https://jingyan.baidu.com/article/ff41162594df7f12e48237ee.html</a>.</p>\n"},{"title":"使用eclipse导入myeclipse项目无法识别为web项目问题的解决","date":"2020-05-15T14:27:55.000Z","_content":"\n原因eclipse默认的web目录为webcontent,而myeclipse的为webRoot,导致无法识别\n\n<!--more-->\n\n解决办法：\n在eclipse中右击项目根路径，在弹出的对话框中，选择 Properties：![在这里插入图片描述](https://img-blog.csdnimg.cn/2020051522170285.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODg0OTcy,size_16,color_FFFFFF,t_70)\n\n选择 Project Facets，点击右边的“Convert to faceted form...”链接：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200515222409927.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODg0OTcy,size_16,color_FFFFFF,t_70)\n勾选 Java 和 Dynamic Web Module ：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200515222615606.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODg0OTcy,size_16,color_FFFFFF,t_70)\n\n点击“ Further Configuration availabe ” 的链接 ，更改 Content Directory 名字为你的 webRoot 目录名字即可","source":"_posts/使用eclipse导入myeclipse项目无法识别为web项目问题的解决.md","raw":"---\ntitle: 使用eclipse导入myeclipse项目无法识别为web项目问题的解决\ndate: 2020-05-15 22:27:55 \ncategories: eclipse\ntags: eclipse\n---\n\n原因eclipse默认的web目录为webcontent,而myeclipse的为webRoot,导致无法识别\n\n<!--more-->\n\n解决办法：\n在eclipse中右击项目根路径，在弹出的对话框中，选择 Properties：![在这里插入图片描述](https://img-blog.csdnimg.cn/2020051522170285.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODg0OTcy,size_16,color_FFFFFF,t_70)\n\n选择 Project Facets，点击右边的“Convert to faceted form...”链接：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200515222409927.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODg0OTcy,size_16,color_FFFFFF,t_70)\n勾选 Java 和 Dynamic Web Module ：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200515222615606.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODg0OTcy,size_16,color_FFFFFF,t_70)\n\n点击“ Further Configuration availabe ” 的链接 ，更改 Content Directory 名字为你的 webRoot 目录名字即可","slug":"使用eclipse导入myeclipse项目无法识别为web项目问题的解决","published":1,"updated":"2020-06-11T03:02:42.955Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckbad3e4i001srsqa3kc92gij","content":"<p>原因eclipse默认的web目录为webcontent,而myeclipse的为webRoot,导致无法识别</p>\n<a id=\"more\"></a>\n\n<p>解决办法：<br>在eclipse中右击项目根路径，在弹出的对话框中，选择 Properties：<img src=\"https://img-blog.csdnimg.cn/2020051522170285.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODg0OTcy,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>选择 Project Facets，点击右边的“Convert to faceted form…”链接：<br><img src=\"https://img-blog.csdnimg.cn/20200515222409927.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODg0OTcy,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>勾选 Java 和 Dynamic Web Module ：<br><img src=\"https://img-blog.csdnimg.cn/20200515222615606.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODg0OTcy,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>点击“ Further Configuration availabe ” 的链接 ，更改 Content Directory 名字为你的 webRoot 目录名字即可</p>\n","site":{"data":{}},"excerpt":"<p>原因eclipse默认的web目录为webcontent,而myeclipse的为webRoot,导致无法识别</p>","more":"<p>解决办法：<br>在eclipse中右击项目根路径，在弹出的对话框中，选择 Properties：<img src=\"https://img-blog.csdnimg.cn/2020051522170285.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODg0OTcy,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>选择 Project Facets，点击右边的“Convert to faceted form…”链接：<br><img src=\"https://img-blog.csdnimg.cn/20200515222409927.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODg0OTcy,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>勾选 Java 和 Dynamic Web Module ：<br><img src=\"https://img-blog.csdnimg.cn/20200515222615606.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODg0OTcy,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>点击“ Further Configuration availabe ” 的链接 ，更改 Content Directory 名字为你的 webRoot 目录名字即可</p>"},{"title":"解决程序中执行插入语句，mysql数据库表插入的中文变成问号的问题","date":"2019-12-08T05:50:04.000Z","_content":"\n解决程序中执行插入语句，mysql数据库表插入的中文变成问号的问题\n\n<!--more-->\n\n执行保存操作，执行插入语句\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20191208134343121.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODg0OTcy,size_16,color_FFFFFF,t_70)\n发现插入的数据，中文在数据库中变成了问号\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20191208134506604.png)\n在数据库中执行以下插入语句：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20191208134633703.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODg0OTcy,size_16,color_FFFFFF,t_70)\n发现没问题：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20191208134717513.png)\n于是检查一下自己的连接配置，发现url中没有加utf-8，于是加上：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20191208134847707.png)\n再次执行程序保存操作，发现问题解决：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20191208134937709.png)","source":"_posts/解决程序中执行插入语句，mysql数据库表插入的中文变成问号的问题.md","raw":"---\ntitle: 解决程序中执行插入语句，mysql数据库表插入的中文变成问号的问题\ndate: 2019-12-08 13:50:04\ncategories: mysql\ntags: mysql\n---\n\n解决程序中执行插入语句，mysql数据库表插入的中文变成问号的问题\n\n<!--more-->\n\n执行保存操作，执行插入语句\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20191208134343121.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODg0OTcy,size_16,color_FFFFFF,t_70)\n发现插入的数据，中文在数据库中变成了问号\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20191208134506604.png)\n在数据库中执行以下插入语句：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20191208134633703.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODg0OTcy,size_16,color_FFFFFF,t_70)\n发现没问题：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20191208134717513.png)\n于是检查一下自己的连接配置，发现url中没有加utf-8，于是加上：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20191208134847707.png)\n再次执行程序保存操作，发现问题解决：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20191208134937709.png)","slug":"解决程序中执行插入语句，mysql数据库表插入的中文变成问号的问题","published":1,"updated":"2020-06-11T02:38:16.973Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckbad3e4j001xrsqaerfz66bz","content":"<p>解决程序中执行插入语句，mysql数据库表插入的中文变成问号的问题</p>\n<a id=\"more\"></a>\n\n<p>执行保存操作，执行插入语句<br><img src=\"https://img-blog.csdnimg.cn/20191208134343121.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODg0OTcy,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>发现插入的数据，中文在数据库中变成了问号<br><img src=\"https://img-blog.csdnimg.cn/20191208134506604.png\" alt=\"在这里插入图片描述\"><br>在数据库中执行以下插入语句：<br><img src=\"https://img-blog.csdnimg.cn/20191208134633703.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODg0OTcy,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>发现没问题：<br><img src=\"https://img-blog.csdnimg.cn/20191208134717513.png\" alt=\"在这里插入图片描述\"><br>于是检查一下自己的连接配置，发现url中没有加utf-8，于是加上：<br><img src=\"https://img-blog.csdnimg.cn/20191208134847707.png\" alt=\"在这里插入图片描述\"><br>再次执行程序保存操作，发现问题解决：<br><img src=\"https://img-blog.csdnimg.cn/20191208134937709.png\" alt=\"在这里插入图片描述\"></p>\n","site":{"data":{}},"excerpt":"<p>解决程序中执行插入语句，mysql数据库表插入的中文变成问号的问题</p>","more":"<p>执行保存操作，执行插入语句<br><img src=\"https://img-blog.csdnimg.cn/20191208134343121.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODg0OTcy,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>发现插入的数据，中文在数据库中变成了问号<br><img src=\"https://img-blog.csdnimg.cn/20191208134506604.png\" alt=\"在这里插入图片描述\"><br>在数据库中执行以下插入语句：<br><img src=\"https://img-blog.csdnimg.cn/20191208134633703.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODg0OTcy,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>发现没问题：<br><img src=\"https://img-blog.csdnimg.cn/20191208134717513.png\" alt=\"在这里插入图片描述\"><br>于是检查一下自己的连接配置，发现url中没有加utf-8，于是加上：<br><img src=\"https://img-blog.csdnimg.cn/20191208134847707.png\" alt=\"在这里插入图片描述\"><br>再次执行程序保存操作，发现问题解决：<br><img src=\"https://img-blog.csdnimg.cn/20191208134937709.png\" alt=\"在这里插入图片描述\"></p>"},{"title":" 阿里云centos7 运行tomcat 之后远程无法访问的解决","date":"2020-01-17T07:05:57.000Z","_content":"\n在安装好 jdk tomcat,并且配好环境变量之后返现远程通过8080无法访问\n解决方法如下：\n\n<!--more-->\n\n#### 1 查看在服务器本地是否能够访问\n\n```\n curl -i http://localhost:8080\n```\n看一下有没有数据返回，比较慢可能需要等待几分钟时间\n#### 2 添加安全组规则\n在阿里云的控制添加安全组规则：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200117145259792.png)\n### 3在服务器放开放防火墙firewall端口\n查看8080在firewall是否开启。发现没有开启\n```\n firewall-cmd --query-port=8080/tcp\nno\n```\n添加8080\n\n```\n firewall-cmd --add-port=8080/tcp --permanent\n```\n重新载入防火墙\n\n```\nfirewall-cmd --reload\n```\n查询8080端口是否开启成功：\n\n```\nfirewall-cmd --query-port=8080/tcp\n```\n参考文章：\n[Linux下Centos7对外开放端口：](https://blog.csdn.net/realjh/article/details/82048492)\n[https://blog.csdn.net/realjh/article/details/82048492](https://blog.csdn.net/realjh/article/details/82048492)","source":"_posts/阿里云centos7-运行tomcat-之后远程无法访问的解决.md","raw":"---\ntitle: ' 阿里云centos7 运行tomcat 之后远程无法访问的解决'\ndate: 2020-01-17 15:05:57 \ncategories: \n\t- linux\n\t\t- centos\ntags: 阿里云服务器\n---\n\n在安装好 jdk tomcat,并且配好环境变量之后返现远程通过8080无法访问\n解决方法如下：\n\n<!--more-->\n\n#### 1 查看在服务器本地是否能够访问\n\n```\n curl -i http://localhost:8080\n```\n看一下有没有数据返回，比较慢可能需要等待几分钟时间\n#### 2 添加安全组规则\n在阿里云的控制添加安全组规则：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200117145259792.png)\n### 3在服务器放开放防火墙firewall端口\n查看8080在firewall是否开启。发现没有开启\n```\n firewall-cmd --query-port=8080/tcp\nno\n```\n添加8080\n\n```\n firewall-cmd --add-port=8080/tcp --permanent\n```\n重新载入防火墙\n\n```\nfirewall-cmd --reload\n```\n查询8080端口是否开启成功：\n\n```\nfirewall-cmd --query-port=8080/tcp\n```\n参考文章：\n[Linux下Centos7对外开放端口：](https://blog.csdn.net/realjh/article/details/82048492)\n[https://blog.csdn.net/realjh/article/details/82048492](https://blog.csdn.net/realjh/article/details/82048492)","slug":"阿里云centos7-运行tomcat-之后远程无法访问的解决","published":1,"updated":"2020-06-11T02:52:15.499Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckbad3e4k001zrsqaagab9upe","content":"<p>在安装好 jdk tomcat,并且配好环境变量之后返现远程通过8080无法访问<br>解决方法如下：</p>\n<a id=\"more\"></a>\n\n<h4 id=\"1-查看在服务器本地是否能够访问\"><a href=\"#1-查看在服务器本地是否能够访问\" class=\"headerlink\" title=\"1 查看在服务器本地是否能够访问\"></a>1 查看在服务器本地是否能够访问</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -i http:&#x2F;&#x2F;localhost:8080</span><br></pre></td></tr></table></figure>\n<p>看一下有没有数据返回，比较慢可能需要等待几分钟时间</p>\n<h4 id=\"2-添加安全组规则\"><a href=\"#2-添加安全组规则\" class=\"headerlink\" title=\"2 添加安全组规则\"></a>2 添加安全组规则</h4><p>在阿里云的控制添加安全组规则：<br><img src=\"https://img-blog.csdnimg.cn/20200117145259792.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"3在服务器放开放防火墙firewall端口\"><a href=\"#3在服务器放开放防火墙firewall端口\" class=\"headerlink\" title=\"3在服务器放开放防火墙firewall端口\"></a>3在服务器放开放防火墙firewall端口</h3><p>查看8080在firewall是否开启。发现没有开启</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> firewall-cmd --query-port&#x3D;8080&#x2F;tcp</span><br><span class=\"line\">no</span><br></pre></td></tr></table></figure>\n<p>添加8080</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd --add-port&#x3D;8080&#x2F;tcp --permanent</span><br></pre></td></tr></table></figure>\n<p>重新载入防火墙</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd --reload</span><br></pre></td></tr></table></figure>\n<p>查询8080端口是否开启成功：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd --query-port&#x3D;8080&#x2F;tcp</span><br></pre></td></tr></table></figure>\n<p>参考文章：<br><a href=\"https://blog.csdn.net/realjh/article/details/82048492\" target=\"_blank\" rel=\"noopener\">Linux下Centos7对外开放端口：</a><br><a href=\"https://blog.csdn.net/realjh/article/details/82048492\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/realjh/article/details/82048492</a></p>\n","site":{"data":{}},"excerpt":"<p>在安装好 jdk tomcat,并且配好环境变量之后返现远程通过8080无法访问<br>解决方法如下：</p>","more":"<h4 id=\"1-查看在服务器本地是否能够访问\"><a href=\"#1-查看在服务器本地是否能够访问\" class=\"headerlink\" title=\"1 查看在服务器本地是否能够访问\"></a>1 查看在服务器本地是否能够访问</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -i http:&#x2F;&#x2F;localhost:8080</span><br></pre></td></tr></table></figure>\n<p>看一下有没有数据返回，比较慢可能需要等待几分钟时间</p>\n<h4 id=\"2-添加安全组规则\"><a href=\"#2-添加安全组规则\" class=\"headerlink\" title=\"2 添加安全组规则\"></a>2 添加安全组规则</h4><p>在阿里云的控制添加安全组规则：<br><img src=\"https://img-blog.csdnimg.cn/20200117145259792.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"3在服务器放开放防火墙firewall端口\"><a href=\"#3在服务器放开放防火墙firewall端口\" class=\"headerlink\" title=\"3在服务器放开放防火墙firewall端口\"></a>3在服务器放开放防火墙firewall端口</h3><p>查看8080在firewall是否开启。发现没有开启</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> firewall-cmd --query-port&#x3D;8080&#x2F;tcp</span><br><span class=\"line\">no</span><br></pre></td></tr></table></figure>\n<p>添加8080</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd --add-port&#x3D;8080&#x2F;tcp --permanent</span><br></pre></td></tr></table></figure>\n<p>重新载入防火墙</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd --reload</span><br></pre></td></tr></table></figure>\n<p>查询8080端口是否开启成功：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd --query-port&#x3D;8080&#x2F;tcp</span><br></pre></td></tr></table></figure>\n<p>参考文章：<br><a href=\"https://blog.csdn.net/realjh/article/details/82048492\" target=\"_blank\" rel=\"noopener\">Linux下Centos7对外开放端口：</a><br><a href=\"https://blog.csdn.net/realjh/article/details/82048492\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/realjh/article/details/82048492</a></p>"}],"PostAsset":[],"PostCategory":[{"post_id":"ckbad3e3e0000rsqahq7i4efk","category_id":"ckbad3e3n0003rsqa4ka6gnws","_id":"ckbad3e3u000drsqa982jaygj"},{"post_id":"ckbad3e3t000brsqagcad0tcg","category_id":"ckbad3e3s0008rsqadhoo3y63","_id":"ckbad3e3y000krsqaat788523"},{"post_id":"ckbad3e3l0002rsqa99zq9kck","category_id":"ckbad3e3s0008rsqadhoo3y63","_id":"ckbad3e41000prsqahclaatjr"},{"post_id":"ckbad3e3v000hrsqa8lf39lbh","category_id":"ckbad3e3s0008rsqadhoo3y63","_id":"ckbad3e42000srsqa203p63j5"},{"post_id":"ckbad3e3p0005rsqaa5zy7u8a","category_id":"ckbad3e3u000ersqaas3sf39m","_id":"ckbad3e44000xrsqaebaf8ydz"},{"post_id":"ckbad3e3y000jrsqahe48447f","category_id":"ckbad3e3s0008rsqadhoo3y63","_id":"ckbad3e450010rsqablcb9i8x"},{"post_id":"ckbad3e3q0006rsqaeme70ef0","category_id":"ckbad3e3u000ersqaas3sf39m","_id":"ckbad3e460014rsqabnd7elut"},{"post_id":"ckbad3e3r0007rsqa1qilhmzv","category_id":"ckbad3e3s0008rsqadhoo3y63","_id":"ckbad3e480017rsqa7egy3tv3"},{"post_id":"ckbad3e40000orsqa67cnhyhr","category_id":"ckbad3e450011rsqa4iv4fwye","_id":"ckbad3e4a001drsqa5hr5h4fu"},{"post_id":"ckbad3e41000rrsqa6xdaavk6","category_id":"ckbad3e480018rsqadb1b6d3f","_id":"ckbad3e4e001mrsqa83eg1fib"},{"post_id":"ckbad3e4a001ersqagyh5fzwc","category_id":"ckbad3e480018rsqadb1b6d3f","_id":"ckbad3e4h001qrsqa1kbed7kq"},{"post_id":"ckbad3e43000wrsqady896l2v","category_id":"ckbad3e480018rsqadb1b6d3f","_id":"ckbad3e4i001ursqafr0ncqyh"},{"post_id":"ckbad3e4d001krsqa4vspafjw","category_id":"ckbad3e3u000ersqaas3sf39m","_id":"ckbad3e4k001yrsqa3n0m9yy2"},{"post_id":"ckbad3e44000zrsqabc229i7u","category_id":"ckbad3e480018rsqadb1b6d3f","_id":"ckbad3e4k0020rsqa9lhzgznf"},{"post_id":"ckbad3e4j001xrsqaerfz66bz","category_id":"ckbad3e480018rsqadb1b6d3f","_id":"ckbad3e4m0025rsqa8dj57irs"},{"post_id":"ckbad3e460013rsqa43rwaffs","category_id":"ckbad3e4i001trsqa1off01jp","_id":"ckbad3e4n0028rsqa2lde86hk"},{"post_id":"ckbad3e470016rsqafjrx8q8l","category_id":"ckbad3e4l0021rsqa555ocfr4","_id":"ckbad3e4n002arsqa0qi3eff3"},{"post_id":"ckbad3e48001arsqa9vz80j80","category_id":"ckbad3e4m0026rsqaciblc09a","_id":"ckbad3e4p002frsqa7ayu0292"},{"post_id":"ckbad3e49001crsqa05ejackh","category_id":"ckbad3e4m0026rsqaciblc09a","_id":"ckbad3e4r002irsqa5a2c5lnn"},{"post_id":"ckbad3e4b001irsqacdb6bdk2","category_id":"ckbad3e4p002ersqa03586blq","_id":"ckbad3e4s002mrsqa4jk96ns1"},{"post_id":"ckbad3e4f001prsqa277k3emd","category_id":"ckbad3e4r002jrsqa5t5lf4w9","_id":"ckbad3e4t002qrsqafrrm9ezq"},{"post_id":"ckbad3e4i001srsqa3kc92gij","category_id":"ckbad3e4s002nrsqafypc76nk","_id":"ckbad3e4v002ursqa7ojqfmv6"},{"post_id":"ckbad3e4k001zrsqaagab9upe","category_id":"ckbad3e4t002rrsqad7fwb7tt","_id":"ckbad3e4w002wrsqabiszgf6e"}],"PostTag":[{"post_id":"ckbad3e3e0000rsqahq7i4efk","tag_id":"ckbad3e3o0004rsqa11xidn2w","_id":"ckbad3e3s000arsqa8x5ef1ta"},{"post_id":"ckbad3e3t000brsqagcad0tcg","tag_id":"ckbad3e3s0009rsqabl9165j6","_id":"ckbad3e3v000grsqahplh7rzv"},{"post_id":"ckbad3e3l0002rsqa99zq9kck","tag_id":"ckbad3e3s0009rsqabl9165j6","_id":"ckbad3e3y000irsqa2mpo7v7p"},{"post_id":"ckbad3e3v000hrsqa8lf39lbh","tag_id":"ckbad3e3s0009rsqabl9165j6","_id":"ckbad3e3z000nrsqa5zqjbyth"},{"post_id":"ckbad3e3p0005rsqaa5zy7u8a","tag_id":"ckbad3e3v000frsqa7scd5zyn","_id":"ckbad3e41000qrsqac5q23nb0"},{"post_id":"ckbad3e3y000jrsqahe48447f","tag_id":"ckbad3e3s0009rsqabl9165j6","_id":"ckbad3e43000vrsqa5t485q3z"},{"post_id":"ckbad3e3q0006rsqaeme70ef0","tag_id":"ckbad3e3v000frsqa7scd5zyn","_id":"ckbad3e44000yrsqacc013ydc"},{"post_id":"ckbad3e3r0007rsqa1qilhmzv","tag_id":"ckbad3e3s0009rsqabl9165j6","_id":"ckbad3e470015rsqa5o2ge5mx"},{"post_id":"ckbad3e40000orsqa67cnhyhr","tag_id":"ckbad3e450012rsqacanredb3","_id":"ckbad3e49001brsqahuih7q3k"},{"post_id":"ckbad3e41000rrsqa6xdaavk6","tag_id":"ckbad3e480019rsqaclps7p89","_id":"ckbad3e4b001hrsqa4cjy29it"},{"post_id":"ckbad3e4a001ersqagyh5fzwc","tag_id":"ckbad3e480019rsqaclps7p89","_id":"ckbad3e4c001jrsqa7bu4hhc7"},{"post_id":"ckbad3e43000wrsqady896l2v","tag_id":"ckbad3e480019rsqaclps7p89","_id":"ckbad3e4f001orsqae9k48khe"},{"post_id":"ckbad3e4d001krsqa4vspafjw","tag_id":"ckbad3e3v000frsqa7scd5zyn","_id":"ckbad3e4h001rrsqagjq4ezn9"},{"post_id":"ckbad3e44000zrsqabc229i7u","tag_id":"ckbad3e480019rsqaclps7p89","_id":"ckbad3e4j001wrsqa7kk39vty"},{"post_id":"ckbad3e4j001xrsqaerfz66bz","tag_id":"ckbad3e480019rsqaclps7p89","_id":"ckbad3e4l0023rsqa02ve9gcp"},{"post_id":"ckbad3e460013rsqa43rwaffs","tag_id":"ckbad3e4i001vrsqa8kysgiir","_id":"ckbad3e4m0024rsqaczgfd4q1"},{"post_id":"ckbad3e470016rsqafjrx8q8l","tag_id":"ckbad3e4l0022rsqa2oivhcq4","_id":"ckbad3e4n0029rsqa85z3cxcc"},{"post_id":"ckbad3e48001arsqa9vz80j80","tag_id":"ckbad3e4m0027rsqaceubebti","_id":"ckbad3e4p002drsqa1oxcd1c3"},{"post_id":"ckbad3e49001crsqa05ejackh","tag_id":"ckbad3e4m0027rsqaceubebti","_id":"ckbad3e4q002hrsqaaghrb1w1"},{"post_id":"ckbad3e4b001irsqacdb6bdk2","tag_id":"ckbad3e4p002grsqabzat6io9","_id":"ckbad3e4r002lrsqa7sgqezw8"},{"post_id":"ckbad3e4f001prsqa277k3emd","tag_id":"ckbad3e4r002krsqa7t6a35kh","_id":"ckbad3e4t002prsqaabhyd1b5"},{"post_id":"ckbad3e4i001srsqa3kc92gij","tag_id":"ckbad3e4s002orsqabtbd5mtf","_id":"ckbad3e4u002trsqa8ttc8w4b"},{"post_id":"ckbad3e4k001zrsqaagab9upe","tag_id":"ckbad3e4u002srsqaedfmhk3i","_id":"ckbad3e4v002vrsqa83qg6usv"}],"Tag":[{"name":"http","_id":"ckbad3e3o0004rsqa11xidn2w"},{"name":"mybatis","_id":"ckbad3e3s0009rsqabl9165j6"},{"name":"Spring","_id":"ckbad3e3v000frsqa7scd5zyn"},{"name":"jdk","_id":"ckbad3e450012rsqacanredb3"},{"name":"mysql","_id":"ckbad3e480019rsqaclps7p89"},{"name":"swagger","_id":"ckbad3e4i001vrsqa8kysgiir"},{"name":"node","_id":"ckbad3e4l0022rsqa2oivhcq4"},{"name":"笔记","_id":"ckbad3e4m0027rsqaceubebti"},{"name":"java规范","_id":"ckbad3e4p002grsqabzat6io9"},{"name":"键盘","_id":"ckbad3e4r002krsqa7t6a35kh"},{"name":"eclipse","_id":"ckbad3e4s002orsqabtbd5mtf"},{"name":"阿里云服务器","_id":"ckbad3e4u002srsqaedfmhk3i"}]}}